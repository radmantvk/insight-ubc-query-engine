{"/Users/user/project_team147/src/controller/IInsightFacade.ts":{"path":"/Users/user/project_team147/src/controller/IInsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":113}},"2":{"start":{"line":5,"column":0},"end":{"line":8,"column":89}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":46}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":42}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":23}},"6":{"start":{"line":12,"column":8},"end":{"line":12,"column":52}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":36}},"8":{"start":{"line":18,"column":8},"end":{"line":18,"column":23}},"9":{"start":{"line":19,"column":8},"end":{"line":19,"column":53}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":38}},"11":{"start":{"line":25,"column":8},"end":{"line":25,"column":23}},"12":{"start":{"line":26,"column":8},"end":{"line":26,"column":59}},"13":{"start":{"line":29,"column":0},"end":{"line":29,"column":50}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":31},"end":{"line":8,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":25},"end":{"line":13,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":25},"end":{"line":20,"column":5}},"line":17},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":25},"end":{"line":27,"column":5}},"line":24}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":24},"end":{"line":8,"column":87}},"type":"binary-expr","locations":[{"start":{"line":8,"column":24},"end":{"line":8,"column":50}},{"start":{"line":8,"column":55},"end":{"line":8,"column":86}}],"line":8}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":42,"6":42,"7":1,"8":0,"9":0,"10":1,"11":2,"12":2,"13":1},"f":{"0":1,"1":42,"2":0,"3":2},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/user/project_team147/src/controller/IInsightFacade.ts","sources":["/Users/user/project_team147/src/controller/IInsightFacade.ts"],"names":[],"mappings":";;;AAMA,IAAY,kBAGX;AAHD,WAAY,kBAAkB;IAC7B,yCAAmB,CAAA;IACnB,qCAAe,CAAA;AAChB,CAAC,EAHW,kBAAkB,GAAlB,0BAAkB,KAAlB,0BAAkB,QAG7B;AAQD,MAAa,YAAa,SAAQ,KAAK;IACtC,YAAY,GAAG,IAAW;QACzB,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IAC7C,CAAC;CACD;AALD,oCAKC;AAED,MAAa,aAAc,SAAQ,KAAK;IACvC,YAAY,GAAG,IAAW;QACzB,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;IAC9C,CAAC;CACD;AALD,sCAKC;AAED,MAAa,mBAAoB,SAAQ,KAAK;IAC7C,YAAY,GAAG,IAAW;QACzB,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;IACpD,CAAC;CACD;AALD,kDAKC","sourcesContent":["/*\n * This is the primary high-level API for the project. In this folder there should be:\n * A class called InsightFacade, this should be in a file called InsightFacade.ts.\n * You should not change this interface at all or the test suite will not work.\n */\n\nexport enum InsightDatasetKind {\n\tCourses = \"courses\",\n\tRooms = \"rooms\",\n}\n\nexport interface InsightDataset {\n\tid: string;\n\tkind: InsightDatasetKind;\n\tnumRows: number;\n}\n\nexport class InsightError extends Error {\n\tconstructor(...args: any[]) {\n\t\tsuper(...args);\n\t\tError.captureStackTrace(this, InsightError);\n\t}\n}\n\nexport class NotFoundError extends Error {\n\tconstructor(...args: any[]) {\n\t\tsuper(...args);\n\t\tError.captureStackTrace(this, NotFoundError);\n\t}\n}\n\nexport class ResultTooLargeError extends Error {\n\tconstructor(...args: any[]) {\n\t\tsuper(...args);\n\t\tError.captureStackTrace(this, ResultTooLargeError);\n\t}\n}\n\nexport interface IInsightFacade {\n\t/**\n\t * Add a dataset to insightUBC.\n\t *\n\t * @param id  The id of the dataset being added. Follows the format /^[^_]+$/\n\t * @param content  The base64 content of the dataset. This content should be in the form of a serialized zip file.\n\t * @param kind  The kind of the dataset\n\t *\n\t * @return Promise <string[]>\n\t *\n\t * The promise should fulfill on a successful add, reject for any failures.\n\t * The promise should fulfill with a string array,\n\t * containing the ids of all currently added datasets upon a successful add.\n\t * The promise should reject with an InsightError describing the error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t * If id is the same as the id of an already added dataset, the dataset should be rejected and not saved.\n\t *\n\t * After receiving the dataset, it should be processed into a data structure of\n\t * your design. The processed data structure should be persisted to disk; your\n\t * system should be able to load this persisted value into memory for answering\n\t * queries.\n\t *\n\t * Ultimately, a dataset must be added or loaded from disk before queries can\n\t * be successfully answered.\n\t */\n\taddDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]>;\n\n\t/**\n\t * Remove a dataset from insightUBC.\n\t *\n\t * @param id  The id of the dataset to remove. Follows the format /^[^_]+$/\n\t *\n\t * @return Promise <string>\n\t *\n\t * The promise should fulfill upon a successful removal, reject on any error.\n\t * Attempting to remove a dataset that hasn't been added yet counts as an error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t *\n\t * The promise should fulfill the id of the dataset that was removed.\n\t * The promise should reject with a NotFoundError (if a valid id was not yet added)\n\t * or an InsightError (invalid id or any other source of failure) describing the error.\n\t *\n\t * This will delete both disk and memory caches for the dataset for the id meaning\n\t * that subsequent queries for that id should fail unless a new addDataset happens first.\n\t */\n\tremoveDataset(id: string): Promise<string>;\n\n\t/**\n\t * Perform a query on insightUBC.\n\t *\n\t * @param query  The query to be performed.\n\t *\n\t * If a query is incorrectly formatted, references a dataset not added (in memory or on disk),\n\t * or references multiple datasets, it should be rejected.\n\t *\n\t * @return Promise <any[]>\n\t *\n\t * The promise should fulfill with an array of results.\n\t * The promise should reject with a ResultTooLargeError (if the query returns too many results)\n\t * or an InsightError (for any other source of failure) describing the error.\n\t */\n\tperformQuery(query: any): Promise<any[]>;\n\n\t/**\n\t * List all currently added datasets, their types, and number of rows.\n\t *\n\t * @return Promise <InsightDataset[]>\n\t * The promise should fulfill an array of currently added InsightDatasets, and will only fulfill.\n\t */\n\tlistDatasets(): Promise<InsightDataset[]>;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e5eeeed141201aaaf7abd571d2cbb902d43c8c96","contentHash":"31cc55fd9dccbe1c1eeea3da109207195743fcee6b8db900c034347fc0ebfdfd"},"/Users/user/project_team147/src/controller/InsightFacade.ts":{"path":"/Users/user/project_team147/src/controller/InsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":8,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":4},"end":{"line":4,"column":89}},"4":{"start":{"line":4,"column":71},"end":{"line":4,"column":83}},"5":{"start":{"line":6,"column":4},"end":{"line":6,"column":33}},"6":{"start":{"line":6,"column":26},"end":{"line":6,"column":33}},"7":{"start":{"line":7,"column":4},"end":{"line":7,"column":17}},"8":{"start":{"line":9,"column":25},"end":{"line":13,"column":2}},"9":{"start":{"line":10,"column":4},"end":{"line":10,"column":72}},"10":{"start":{"line":12,"column":4},"end":{"line":12,"column":21}},"11":{"start":{"line":14,"column":19},"end":{"line":20,"column":1}},"12":{"start":{"line":15,"column":4},"end":{"line":15,"column":42}},"13":{"start":{"line":15,"column":31},"end":{"line":15,"column":42}},"14":{"start":{"line":16,"column":17},"end":{"line":16,"column":19}},"15":{"start":{"line":17,"column":4},"end":{"line":17,"column":141}},"16":{"start":{"line":17,"column":21},"end":{"line":17,"column":141}},"17":{"start":{"line":17,"column":40},"end":{"line":17,"column":141}},"18":{"start":{"line":17,"column":109},"end":{"line":17,"column":141}},"19":{"start":{"line":18,"column":4},"end":{"line":18,"column":36}},"20":{"start":{"line":19,"column":4},"end":{"line":19,"column":18}},"21":{"start":{"line":21,"column":22},"end":{"line":23,"column":1}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":62}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":62}},"24":{"start":{"line":25,"column":25},"end":{"line":25,"column":52}},"25":{"start":{"line":26,"column":11},"end":{"line":26,"column":44}},"26":{"start":{"line":27,"column":17},"end":{"line":27,"column":60}},"27":{"start":{"line":28,"column":18},"end":{"line":28,"column":62}},"28":{"start":{"line":29,"column":16},"end":{"line":29,"column":49}},"29":{"start":{"line":30,"column":16},"end":{"line":30,"column":58}},"30":{"start":{"line":31,"column":25},"end":{"line":31,"column":76}},"31":{"start":{"line":34,"column":8},"end":{"line":34,"column":34}},"32":{"start":{"line":37,"column":8},"end":{"line":39,"column":9}},"33":{"start":{"line":38,"column":12},"end":{"line":38,"column":90}},"34":{"start":{"line":40,"column":8},"end":{"line":57,"column":11}},"35":{"start":{"line":42,"column":12},"end":{"line":42,"column":63}},"36":{"start":{"line":44,"column":26},"end":{"line":48,"column":13}},"37":{"start":{"line":49,"column":12},"end":{"line":49,"column":47}},"38":{"start":{"line":50,"column":33},"end":{"line":50,"column":35}},"39":{"start":{"line":51,"column":12},"end":{"line":53,"column":13}},"40":{"start":{"line":52,"column":16},"end":{"line":52,"column":48}},"41":{"start":{"line":54,"column":12},"end":{"line":54,"column":51}},"42":{"start":{"line":56,"column":12},"end":{"line":56,"column":74}},"43":{"start":{"line":60,"column":8},"end":{"line":65,"column":9}},"44":{"start":{"line":61,"column":12},"end":{"line":61,"column":71}},"45":{"start":{"line":63,"column":13},"end":{"line":65,"column":9}},"46":{"start":{"line":64,"column":12},"end":{"line":64,"column":72}},"47":{"start":{"line":66,"column":8},"end":{"line":70,"column":11}},"48":{"start":{"line":67,"column":12},"end":{"line":69,"column":13}},"49":{"start":{"line":68,"column":16},"end":{"line":68,"column":54}},"50":{"start":{"line":71,"column":8},"end":{"line":77,"column":11}},"51":{"start":{"line":73,"column":12},"end":{"line":73,"column":39}},"52":{"start":{"line":76,"column":12},"end":{"line":76,"column":39}},"53":{"start":{"line":80,"column":31},"end":{"line":80,"column":61}},"54":{"start":{"line":81,"column":8},"end":{"line":83,"column":9}},"55":{"start":{"line":82,"column":12},"end":{"line":82,"column":71}},"56":{"start":{"line":84,"column":24},"end":{"line":84,"column":50}},"57":{"start":{"line":85,"column":8},"end":{"line":87,"column":9}},"58":{"start":{"line":86,"column":12},"end":{"line":86,"column":71}},"59":{"start":{"line":88,"column":8},"end":{"line":90,"column":11}},"60":{"start":{"line":89,"column":12},"end":{"line":89,"column":44}},"61":{"start":{"line":93,"column":8},"end":{"line":93,"column":53}},"62":{"start":{"line":96,"column":20},"end":{"line":96,"column":41}},"63":{"start":{"line":97,"column":8},"end":{"line":100,"column":11}},"64":{"start":{"line":99,"column":12},"end":{"line":99,"column":74}},"65":{"start":{"line":103,"column":29},"end":{"line":103,"column":55}},"66":{"start":{"line":104,"column":8},"end":{"line":106,"column":9}},"67":{"start":{"line":105,"column":12},"end":{"line":105,"column":71}},"68":{"start":{"line":107,"column":36},"end":{"line":107,"column":38}},"69":{"start":{"line":108,"column":8},"end":{"line":110,"column":11}},"70":{"start":{"line":109,"column":12},"end":{"line":109,"column":59}},"71":{"start":{"line":111,"column":8},"end":{"line":113,"column":9}},"72":{"start":{"line":112,"column":12},"end":{"line":112,"column":36}},"73":{"start":{"line":114,"column":8},"end":{"line":119,"column":9}},"74":{"start":{"line":115,"column":12},"end":{"line":115,"column":66}},"75":{"start":{"line":118,"column":12},"end":{"line":118,"column":39}},"76":{"start":{"line":122,"column":8},"end":{"line":130,"column":9}},"77":{"start":{"line":123,"column":12},"end":{"line":123,"column":44}},"78":{"start":{"line":126,"column":12},"end":{"line":129,"column":15}},"79":{"start":{"line":128,"column":16},"end":{"line":128,"column":48}},"80":{"start":{"line":133,"column":8},"end":{"line":137,"column":9}},"81":{"start":{"line":134,"column":12},"end":{"line":136,"column":13}},"82":{"start":{"line":135,"column":16},"end":{"line":135,"column":28}},"83":{"start":{"line":138,"column":8},"end":{"line":138,"column":21}},"84":{"start":{"line":141,"column":29},"end":{"line":141,"column":31}},"85":{"start":{"line":142,"column":8},"end":{"line":158,"column":9}},"86":{"start":{"line":143,"column":12},"end":{"line":157,"column":13}},"87":{"start":{"line":149,"column":27},"end":{"line":149,"column":40}},"88":{"start":{"line":150,"column":16},"end":{"line":155,"column":17}},"89":{"start":{"line":151,"column":20},"end":{"line":151,"column":187}},"90":{"start":{"line":154,"column":20},"end":{"line":154,"column":195}},"91":{"start":{"line":156,"column":16},"end":{"line":156,"column":39}},"92":{"start":{"line":159,"column":8},"end":{"line":159,"column":30}},"93":{"start":{"line":162,"column":19},"end":{"line":162,"column":40}},"94":{"start":{"line":163,"column":24},"end":{"line":163,"column":44}},"95":{"start":{"line":164,"column":36},"end":{"line":164,"column":38}},"96":{"start":{"line":165,"column":8},"end":{"line":169,"column":9}},"97":{"start":{"line":166,"column":29},"end":{"line":166,"column":50}},"98":{"start":{"line":167,"column":31},"end":{"line":167,"column":52}},"99":{"start":{"line":168,"column":12},"end":{"line":168,"column":51}},"100":{"start":{"line":170,"column":22},"end":{"line":170,"column":24}},"101":{"start":{"line":171,"column":8},"end":{"line":180,"column":11}},"102":{"start":{"line":172,"column":12},"end":{"line":176,"column":13}},"103":{"start":{"line":173,"column":32},"end":{"line":173,"column":48}},"104":{"start":{"line":174,"column":31},"end":{"line":174,"column":81}},"105":{"start":{"line":175,"column":16},"end":{"line":175,"column":37}},"106":{"start":{"line":179,"column":12},"end":{"line":179,"column":44}},"107":{"start":{"line":183,"column":8},"end":{"line":191,"column":9}},"108":{"start":{"line":184,"column":12},"end":{"line":184,"column":25}},"109":{"start":{"line":187,"column":28},"end":{"line":187,"column":48}},"110":{"start":{"line":188,"column":12},"end":{"line":190,"column":13}},"111":{"start":{"line":189,"column":16},"end":{"line":189,"column":29}},"112":{"start":{"line":192,"column":8},"end":{"line":192,"column":20}},"113":{"start":{"line":195,"column":8},"end":{"line":199,"column":9}},"114":{"start":{"line":196,"column":12},"end":{"line":198,"column":13}},"115":{"start":{"line":197,"column":16},"end":{"line":197,"column":28}},"116":{"start":{"line":200,"column":8},"end":{"line":200,"column":21}},"117":{"start":{"line":203,"column":8},"end":{"line":208,"column":9}},"118":{"start":{"line":204,"column":12},"end":{"line":204,"column":29}},"119":{"start":{"line":207,"column":12},"end":{"line":207,"column":27}},"120":{"start":{"line":211,"column":22},"end":{"line":211,"column":24}},"121":{"start":{"line":212,"column":8},"end":{"line":246,"column":11}},"122":{"start":{"line":213,"column":45},"end":{"line":213,"column":50}},"123":{"start":{"line":214,"column":26},"end":{"line":214,"column":27}},"124":{"start":{"line":215,"column":12},"end":{"line":230,"column":15}},"125":{"start":{"line":216,"column":31},"end":{"line":216,"column":33}},"126":{"start":{"line":217,"column":16},"end":{"line":229,"column":17}},"127":{"start":{"line":218,"column":39},"end":{"line":218,"column":63}},"128":{"start":{"line":219,"column":20},"end":{"line":219,"column":70}},"129":{"start":{"line":220,"column":20},"end":{"line":220,"column":47}},"130":{"start":{"line":221,"column":20},"end":{"line":225,"column":21}},"131":{"start":{"line":222,"column":41},"end":{"line":222,"column":93}},"132":{"start":{"line":223,"column":39},"end":{"line":223,"column":79}},"133":{"start":{"line":224,"column":24},"end":{"line":224,"column":45}},"134":{"start":{"line":226,"column":20},"end":{"line":226,"column":54}},"135":{"start":{"line":231,"column":12},"end":{"line":233,"column":13}},"136":{"start":{"line":232,"column":16},"end":{"line":232,"column":75}},"137":{"start":{"line":234,"column":42},"end":{"line":234,"column":44}},"138":{"start":{"line":235,"column":12},"end":{"line":241,"column":15}},"139":{"start":{"line":237,"column":16},"end":{"line":240,"column":17}},"140":{"start":{"line":238,"column":33},"end":{"line":238,"column":75}},"141":{"start":{"line":239,"column":20},"end":{"line":239,"column":84}},"142":{"start":{"line":242,"column":12},"end":{"line":245,"column":15}},"143":{"start":{"line":244,"column":16},"end":{"line":244,"column":31}},"144":{"start":{"line":249,"column":0},"end":{"line":249,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":5,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":4,"column":58},"end":{"line":4,"column":59}},"loc":{"start":{"line":4,"column":69},"end":{"line":4,"column":85}},"line":4},"2":{"name":"(anonymous_2)","decl":{"start":{"line":5,"column":6},"end":{"line":5,"column":7}},"loc":{"start":{"line":5,"column":28},"end":{"line":8,"column":1}},"line":5},"3":{"name":"(anonymous_3)","decl":{"start":{"line":9,"column":80},"end":{"line":9,"column":81}},"loc":{"start":{"line":9,"column":95},"end":{"line":11,"column":1}},"line":9},"4":{"name":"(anonymous_4)","decl":{"start":{"line":11,"column":5},"end":{"line":11,"column":6}},"loc":{"start":{"line":11,"column":20},"end":{"line":13,"column":1}},"line":11},"5":{"name":"(anonymous_5)","decl":{"start":{"line":14,"column":50},"end":{"line":14,"column":51}},"loc":{"start":{"line":14,"column":65},"end":{"line":20,"column":1}},"line":14},"6":{"name":"(anonymous_6)","decl":{"start":{"line":21,"column":56},"end":{"line":21,"column":57}},"loc":{"start":{"line":21,"column":71},"end":{"line":23,"column":1}},"line":21},"7":{"name":"(anonymous_7)","decl":{"start":{"line":33,"column":4},"end":{"line":33,"column":5}},"loc":{"start":{"line":33,"column":18},"end":{"line":35,"column":5}},"line":33},"8":{"name":"(anonymous_8)","decl":{"start":{"line":36,"column":4},"end":{"line":36,"column":5}},"loc":{"start":{"line":36,"column":34},"end":{"line":58,"column":5}},"line":36},"9":{"name":"(anonymous_9)","decl":{"start":{"line":41,"column":18},"end":{"line":41,"column":19}},"loc":{"start":{"line":41,"column":39},"end":{"line":43,"column":9}},"line":41},"10":{"name":"(anonymous_10)","decl":{"start":{"line":43,"column":16},"end":{"line":43,"column":17}},"loc":{"start":{"line":43,"column":29},"end":{"line":55,"column":9}},"line":43},"11":{"name":"(anonymous_11)","decl":{"start":{"line":55,"column":17},"end":{"line":55,"column":18}},"loc":{"start":{"line":55,"column":26},"end":{"line":57,"column":9}},"line":55},"12":{"name":"(anonymous_12)","decl":{"start":{"line":59,"column":4},"end":{"line":59,"column":5}},"loc":{"start":{"line":59,"column":22},"end":{"line":78,"column":5}},"line":59},"13":{"name":"(anonymous_13)","decl":{"start":{"line":66,"column":37},"end":{"line":66,"column":38}},"loc":{"start":{"line":66,"column":55},"end":{"line":70,"column":9}},"line":66},"14":{"name":"(anonymous_14)","decl":{"start":{"line":72,"column":18},"end":{"line":72,"column":19}},"loc":{"start":{"line":72,"column":24},"end":{"line":74,"column":9}},"line":72},"15":{"name":"(anonymous_15)","decl":{"start":{"line":75,"column":19},"end":{"line":75,"column":20}},"loc":{"start":{"line":75,"column":28},"end":{"line":77,"column":9}},"line":75},"16":{"name":"(anonymous_16)","decl":{"start":{"line":79,"column":4},"end":{"line":79,"column":5}},"loc":{"start":{"line":79,"column":24},"end":{"line":91,"column":5}},"line":79},"17":{"name":"(anonymous_17)","decl":{"start":{"line":88,"column":63},"end":{"line":88,"column":64}},"loc":{"start":{"line":88,"column":76},"end":{"line":90,"column":9}},"line":88},"18":{"name":"(anonymous_18)","decl":{"start":{"line":92,"column":4},"end":{"line":92,"column":5}},"loc":{"start":{"line":92,"column":19},"end":{"line":94,"column":5}},"line":92},"19":{"name":"(anonymous_19)","decl":{"start":{"line":95,"column":4},"end":{"line":95,"column":5}},"loc":{"start":{"line":95,"column":19},"end":{"line":101,"column":5}},"line":95},"20":{"name":"(anonymous_20)","decl":{"start":{"line":98,"column":19},"end":{"line":98,"column":20}},"loc":{"start":{"line":98,"column":28},"end":{"line":100,"column":9}},"line":98},"21":{"name":"(anonymous_21)","decl":{"start":{"line":102,"column":4},"end":{"line":102,"column":5}},"loc":{"start":{"line":102,"column":40},"end":{"line":120,"column":5}},"line":102},"22":{"name":"(anonymous_22)","decl":{"start":{"line":108,"column":50},"end":{"line":108,"column":51}},"loc":{"start":{"line":108,"column":80},"end":{"line":110,"column":9}},"line":108},"23":{"name":"(anonymous_23)","decl":{"start":{"line":121,"column":4},"end":{"line":121,"column":5}},"loc":{"start":{"line":121,"column":24},"end":{"line":131,"column":5}},"line":121},"24":{"name":"(anonymous_24)","decl":{"start":{"line":127,"column":22},"end":{"line":127,"column":23}},"loc":{"start":{"line":127,"column":28},"end":{"line":129,"column":13}},"line":127},"25":{"name":"(anonymous_25)","decl":{"start":{"line":132,"column":4},"end":{"line":132,"column":5}},"loc":{"start":{"line":132,"column":32},"end":{"line":139,"column":5}},"line":132},"26":{"name":"(anonymous_26)","decl":{"start":{"line":140,"column":4},"end":{"line":140,"column":5}},"loc":{"start":{"line":140,"column":29},"end":{"line":160,"column":5}},"line":140},"27":{"name":"(anonymous_27)","decl":{"start":{"line":161,"column":4},"end":{"line":161,"column":5}},"loc":{"start":{"line":161,"column":34},"end":{"line":181,"column":5}},"line":161},"28":{"name":"(anonymous_28)","decl":{"start":{"line":171,"column":55},"end":{"line":171,"column":56}},"loc":{"start":{"line":171,"column":65},"end":{"line":177,"column":9}},"line":171},"29":{"name":"(anonymous_29)","decl":{"start":{"line":178,"column":18},"end":{"line":178,"column":19}},"loc":{"start":{"line":178,"column":24},"end":{"line":180,"column":9}},"line":178},"30":{"name":"(anonymous_30)","decl":{"start":{"line":182,"column":4},"end":{"line":182,"column":5}},"loc":{"start":{"line":182,"column":18},"end":{"line":193,"column":5}},"line":182},"31":{"name":"(anonymous_31)","decl":{"start":{"line":194,"column":4},"end":{"line":194,"column":5}},"loc":{"start":{"line":194,"column":23},"end":{"line":201,"column":5}},"line":194},"32":{"name":"(anonymous_32)","decl":{"start":{"line":202,"column":4},"end":{"line":202,"column":5}},"loc":{"start":{"line":202,"column":26},"end":{"line":209,"column":5}},"line":202},"33":{"name":"(anonymous_33)","decl":{"start":{"line":210,"column":4},"end":{"line":210,"column":5}},"loc":{"start":{"line":210,"column":46},"end":{"line":247,"column":5}},"line":210},"34":{"name":"(anonymous_34)","decl":{"start":{"line":212,"column":55},"end":{"line":212,"column":56}},"loc":{"start":{"line":212,"column":65},"end":{"line":246,"column":9}},"line":212},"35":{"name":"(anonymous_35)","decl":{"start":{"line":215,"column":25},"end":{"line":215,"column":26}},"loc":{"start":{"line":215,"column":43},"end":{"line":230,"column":13}},"line":215},"36":{"name":"(anonymous_36)","decl":{"start":{"line":236,"column":22},"end":{"line":236,"column":23}},"loc":{"start":{"line":236,"column":28},"end":{"line":241,"column":13}},"line":236},"37":{"name":"(anonymous_37)","decl":{"start":{"line":243,"column":22},"end":{"line":243,"column":23}},"loc":{"start":{"line":243,"column":28},"end":{"line":245,"column":13}},"line":243}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":8,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":8,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":8,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":5,"column":1}},{"start":{"line":5,"column":6},"end":{"line":8,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":6,"column":4},"end":{"line":6,"column":33}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":6,"column":33}},{"start":{"line":6,"column":4},"end":{"line":6,"column":33}}],"line":6},"4":{"loc":{"start":{"line":9,"column":25},"end":{"line":13,"column":2}},"type":"binary-expr","locations":[{"start":{"line":9,"column":26},"end":{"line":9,"column":30}},{"start":{"line":9,"column":34},"end":{"line":9,"column":57}},{"start":{"line":9,"column":63},"end":{"line":13,"column":1}}],"line":9},"5":{"loc":{"start":{"line":9,"column":63},"end":{"line":13,"column":1}},"type":"cond-expr","locations":[{"start":{"line":9,"column":80},"end":{"line":11,"column":1}},{"start":{"line":11,"column":5},"end":{"line":13,"column":1}}],"line":9},"6":{"loc":{"start":{"line":14,"column":19},"end":{"line":20,"column":1}},"type":"binary-expr","locations":[{"start":{"line":14,"column":20},"end":{"line":14,"column":24}},{"start":{"line":14,"column":28},"end":{"line":14,"column":45}},{"start":{"line":14,"column":50},"end":{"line":20,"column":1}}],"line":14},"7":{"loc":{"start":{"line":15,"column":4},"end":{"line":15,"column":42}},"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":15,"column":42}},{"start":{"line":15,"column":4},"end":{"line":15,"column":42}}],"line":15},"8":{"loc":{"start":{"line":15,"column":8},"end":{"line":15,"column":29}},"type":"binary-expr","locations":[{"start":{"line":15,"column":8},"end":{"line":15,"column":11}},{"start":{"line":15,"column":15},"end":{"line":15,"column":29}}],"line":15},"9":{"loc":{"start":{"line":17,"column":4},"end":{"line":17,"column":141}},"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":17,"column":141}},{"start":{"line":17,"column":4},"end":{"line":17,"column":141}}],"line":17},"10":{"loc":{"start":{"line":17,"column":40},"end":{"line":17,"column":141}},"type":"if","locations":[{"start":{"line":17,"column":40},"end":{"line":17,"column":141}},{"start":{"line":17,"column":40},"end":{"line":17,"column":141}}],"line":17},"11":{"loc":{"start":{"line":17,"column":44},"end":{"line":17,"column":107}},"type":"binary-expr","locations":[{"start":{"line":17,"column":44},"end":{"line":17,"column":59}},{"start":{"line":17,"column":63},"end":{"line":17,"column":107}}],"line":17},"12":{"loc":{"start":{"line":21,"column":22},"end":{"line":23,"column":1}},"type":"binary-expr","locations":[{"start":{"line":21,"column":23},"end":{"line":21,"column":27}},{"start":{"line":21,"column":31},"end":{"line":21,"column":51}},{"start":{"line":21,"column":56},"end":{"line":23,"column":1}}],"line":21},"13":{"loc":{"start":{"line":22,"column":11},"end":{"line":22,"column":61}},"type":"cond-expr","locations":[{"start":{"line":22,"column":37},"end":{"line":22,"column":40}},{"start":{"line":22,"column":43},"end":{"line":22,"column":61}}],"line":22},"14":{"loc":{"start":{"line":22,"column":12},"end":{"line":22,"column":33}},"type":"binary-expr","locations":[{"start":{"line":22,"column":12},"end":{"line":22,"column":15}},{"start":{"line":22,"column":19},"end":{"line":22,"column":33}}],"line":22},"15":{"loc":{"start":{"line":37,"column":8},"end":{"line":39,"column":9}},"type":"if","locations":[{"start":{"line":37,"column":8},"end":{"line":39,"column":9}},{"start":{"line":37,"column":8},"end":{"line":39,"column":9}}],"line":37},"16":{"loc":{"start":{"line":37,"column":12},"end":{"line":37,"column":58}},"type":"binary-expr","locations":[{"start":{"line":37,"column":12},"end":{"line":37,"column":31}},{"start":{"line":37,"column":35},"end":{"line":37,"column":58}}],"line":37},"17":{"loc":{"start":{"line":60,"column":8},"end":{"line":65,"column":9}},"type":"if","locations":[{"start":{"line":60,"column":8},"end":{"line":65,"column":9}},{"start":{"line":60,"column":8},"end":{"line":65,"column":9}}],"line":60},"18":{"loc":{"start":{"line":63,"column":13},"end":{"line":65,"column":9}},"type":"if","locations":[{"start":{"line":63,"column":13},"end":{"line":65,"column":9}},{"start":{"line":63,"column":13},"end":{"line":65,"column":9}}],"line":63},"19":{"loc":{"start":{"line":67,"column":12},"end":{"line":69,"column":13}},"type":"if","locations":[{"start":{"line":67,"column":12},"end":{"line":69,"column":13}},{"start":{"line":67,"column":12},"end":{"line":69,"column":13}}],"line":67},"20":{"loc":{"start":{"line":81,"column":8},"end":{"line":83,"column":9}},"type":"if","locations":[{"start":{"line":81,"column":8},"end":{"line":83,"column":9}},{"start":{"line":81,"column":8},"end":{"line":83,"column":9}}],"line":81},"21":{"loc":{"start":{"line":85,"column":8},"end":{"line":87,"column":9}},"type":"if","locations":[{"start":{"line":85,"column":8},"end":{"line":87,"column":9}},{"start":{"line":85,"column":8},"end":{"line":87,"column":9}}],"line":85},"22":{"loc":{"start":{"line":104,"column":8},"end":{"line":106,"column":9}},"type":"if","locations":[{"start":{"line":104,"column":8},"end":{"line":106,"column":9}},{"start":{"line":104,"column":8},"end":{"line":106,"column":9}}],"line":104},"23":{"loc":{"start":{"line":111,"column":8},"end":{"line":113,"column":9}},"type":"if","locations":[{"start":{"line":111,"column":8},"end":{"line":113,"column":9}},{"start":{"line":111,"column":8},"end":{"line":113,"column":9}}],"line":111},"24":{"loc":{"start":{"line":114,"column":8},"end":{"line":119,"column":9}},"type":"if","locations":[{"start":{"line":114,"column":8},"end":{"line":119,"column":9}},{"start":{"line":114,"column":8},"end":{"line":119,"column":9}}],"line":114},"25":{"loc":{"start":{"line":122,"column":8},"end":{"line":130,"column":9}},"type":"if","locations":[{"start":{"line":122,"column":8},"end":{"line":130,"column":9}},{"start":{"line":122,"column":8},"end":{"line":130,"column":9}}],"line":122},"26":{"loc":{"start":{"line":134,"column":12},"end":{"line":136,"column":13}},"type":"if","locations":[{"start":{"line":134,"column":12},"end":{"line":136,"column":13}},{"start":{"line":134,"column":12},"end":{"line":136,"column":13}}],"line":134},"27":{"loc":{"start":{"line":143,"column":12},"end":{"line":157,"column":13}},"type":"if","locations":[{"start":{"line":143,"column":12},"end":{"line":157,"column":13}},{"start":{"line":143,"column":12},"end":{"line":157,"column":13}}],"line":143},"28":{"loc":{"start":{"line":143,"column":16},"end":{"line":147,"column":52}},"type":"binary-expr","locations":[{"start":{"line":143,"column":16},"end":{"line":143,"column":36}},{"start":{"line":143,"column":40},"end":{"line":143,"column":59}},{"start":{"line":144,"column":16},"end":{"line":144,"column":32}},{"start":{"line":144,"column":36},"end":{"line":144,"column":58}},{"start":{"line":145,"column":16},"end":{"line":145,"column":34}},{"start":{"line":145,"column":38},"end":{"line":145,"column":55}},{"start":{"line":146,"column":16},"end":{"line":146,"column":33}},{"start":{"line":146,"column":37},"end":{"line":146,"column":55}},{"start":{"line":147,"column":16},"end":{"line":147,"column":31}},{"start":{"line":147,"column":35},"end":{"line":147,"column":52}}],"line":143},"29":{"loc":{"start":{"line":150,"column":16},"end":{"line":155,"column":17}},"type":"if","locations":[{"start":{"line":150,"column":16},"end":{"line":155,"column":17}},{"start":{"line":150,"column":16},"end":{"line":155,"column":17}}],"line":150},"30":{"loc":{"start":{"line":183,"column":8},"end":{"line":191,"column":9}},"type":"if","locations":[{"start":{"line":183,"column":8},"end":{"line":191,"column":9}},{"start":{"line":183,"column":8},"end":{"line":191,"column":9}}],"line":183},"31":{"loc":{"start":{"line":188,"column":12},"end":{"line":190,"column":13}},"type":"if","locations":[{"start":{"line":188,"column":12},"end":{"line":190,"column":13}},{"start":{"line":188,"column":12},"end":{"line":190,"column":13}}],"line":188},"32":{"loc":{"start":{"line":196,"column":12},"end":{"line":198,"column":13}},"type":"if","locations":[{"start":{"line":196,"column":12},"end":{"line":198,"column":13}},{"start":{"line":196,"column":12},"end":{"line":198,"column":13}}],"line":196},"33":{"loc":{"start":{"line":203,"column":8},"end":{"line":208,"column":9}},"type":"if","locations":[{"start":{"line":203,"column":8},"end":{"line":208,"column":9}},{"start":{"line":203,"column":8},"end":{"line":208,"column":9}}],"line":203},"34":{"loc":{"start":{"line":221,"column":20},"end":{"line":225,"column":21}},"type":"if","locations":[{"start":{"line":221,"column":20},"end":{"line":225,"column":21}},{"start":{"line":221,"column":20},"end":{"line":225,"column":21}}],"line":221},"35":{"loc":{"start":{"line":231,"column":12},"end":{"line":233,"column":13}},"type":"if","locations":[{"start":{"line":231,"column":12},"end":{"line":233,"column":13}},{"start":{"line":231,"column":12},"end":{"line":233,"column":13}}],"line":231}},"s":{"0":1,"1":144,"2":144,"3":144,"4":86165,"5":0,"6":0,"7":0,"8":1,"9":1,"10":0,"11":1,"12":1,"13":0,"14":1,"15":1,"16":1,"17":144,"18":144,"19":1,"20":1,"21":1,"22":5,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":2,"32":2,"33":0,"34":2,"35":2,"36":2,"37":2,"38":2,"39":2,"40":2,"41":2,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":64,"54":64,"55":42,"56":22,"57":22,"58":0,"59":22,"60":22,"61":0,"62":2,"63":2,"64":0,"65":2,"66":2,"67":0,"68":2,"69":2,"70":11888,"71":2,"72":1,"73":2,"74":2,"75":0,"76":2,"77":2,"78":0,"79":0,"80":2,"81":2,"82":2,"83":0,"84":11888,"85":11888,"86":129224,"87":129224,"88":129224,"89":0,"90":129224,"91":129224,"92":11888,"93":22,"94":22,"95":22,"96":22,"97":78958,"98":78958,"99":78958,"100":22,"101":22,"102":22,"103":78958,"104":78958,"105":78958,"106":22,"107":2,"108":0,"109":2,"110":2,"111":0,"112":2,"113":24,"114":22,"115":22,"116":2,"117":2,"118":2,"119":0,"120":2,"121":2,"122":2,"123":2,"124":2,"125":11888,"126":11888,"127":11888,"128":11888,"129":11888,"130":11888,"131":7178,"132":7178,"133":7178,"134":11888,"135":2,"136":0,"137":2,"138":2,"139":2,"140":7178,"141":7178,"142":2,"143":2,"144":1},"f":{"0":144,"1":86165,"2":0,"3":1,"4":0,"5":1,"6":5,"7":2,"8":2,"9":2,"10":2,"11":0,"12":0,"13":0,"14":0,"15":0,"16":64,"17":22,"18":0,"19":2,"20":0,"21":2,"22":11888,"23":2,"24":0,"25":2,"26":11888,"27":22,"28":22,"29":22,"30":2,"31":24,"32":2,"33":2,"34":2,"35":11888,"36":2,"37":2},"b":{"0":[1,1,1],"1":[1,0],"2":[144,0],"3":[0,0],"4":[1,1,1],"5":[1,0],"6":[1,1,1],"7":[0,1],"8":[1,1],"9":[1,0],"10":[144,0],"11":[144,144],"12":[1,1,1],"13":[4,1],"14":[5,5],"15":[0,2],"16":[2,2],"17":[0,0],"18":[0,0],"19":[0,0],"20":[42,22],"21":[0,22],"22":[0,2],"23":[1,1],"24":[2,0],"25":[2,0],"26":[2,0],"27":[129224,0],"28":[129224,129224,129224,129224,129224,129224,129224,129224,129224,129224],"29":[0,129224],"30":[0,2],"31":[0,2],"32":[22,0],"33":[2,0],"34":[7178,4710],"35":[0,2]},"inputSourceMap":{"version":3,"file":"/Users/user/project_team147/src/controller/InsightFacade.ts","sources":["/Users/user/project_team147/src/controller/InsightFacade.ts"],"names":[],"mappings":"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","sourcesContent":["import {IInsightFacade, InsightDataset, InsightDatasetKind, InsightError, NotFoundError} from \"./IInsightFacade\";\nimport * as fs from \"fs-extra\";\nimport Course from \"../model/Course\";\nimport Section from \"../model/Section\";\nimport JSZip, {JSZipObject} from \"jszip\";\nimport Query from \"../model/Query\";\nimport QueryValidator from \"../model/QueryValidator\";\n\n\n/**\n * This is the main programmatic entry point for the project.\n * Method documentation is in IInsightFacade\n *\n */\nexport default class InsightFacade implements IInsightFacade {\n\tprivate insightDatasets: InsightDataset[] = [];\n\tconstructor() {\n\t\t// console.trace(\"InsightFacadeImpl::init()\");\n\t}\n\n\tpublic addDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]> {\n\t\tif (!this.isIdValid(id) || this.idHasBeenAdded(id)) {\n\t\t\treturn Promise.reject(new InsightError(\"invalid id to add\"));\n\t\t}\n\t\treturn this.unzip(content)\n\t\t\t.then((unzippedContent) => {\n\t\t\t\treturn this.processData(id, kind, unzippedContent);\n\t\t\t}).then((message) => {\n\t\t\t\tlet insight: InsightDataset = {\n\t\t\t\t\tid : id,\n\t\t\t\t\tkind : kind,\n\t\t\t\t\tnumRows : message\n\t\t\t\t};\n\t\t\t\tthis.insightDatasets.push(insight);\n\t\t\t\tlet listOfAddedIDs: string[] = [];\n\t\t\t\tfor (const dataset of this.insightDatasets) {\n\t\t\t\t\tlistOfAddedIDs.push(dataset.id);\n\t\t\t\t}\n\t\t\t\treturn Promise.resolve(listOfAddedIDs);\n\t\t\t}).catch((err) => {\n\t\t\t\t// console.log(err.toString()); // testing\n\t\t\t\treturn Promise.reject(new InsightError(err));\n\t\t\t});\n\t}\n\n\tpublic removeDataset(id: string): Promise<string> {\n\t\tif (!this.isIdValid(id)) {\n\t\t\treturn Promise.reject(new InsightError());\n\t\t} else if (!this.idHasBeenAdded(id)) {\n\t\t\treturn Promise.reject(new NotFoundError());\n\t\t}\n\t\t// remove data from list\n\t\tthis.insightDatasets.forEach((value, index) => {\n\t\t\tif (value.id === id) {\n\t\t\t\tthis.insightDatasets.splice(index, 1);\n\t\t\t}\n\t\t});\n\t\t// remove data from disk\n\t\treturn fs.remove(\"./data/\" + id)\n\t\t\t.then(() => {\n\t\t\t\treturn Promise.resolve(id);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\t// console.log(err.toString());\n\t\t\t\treturn Promise.reject(err);\n\t\t\t});\n\t}\n\n\tpublic performQuery(query: any): Promise<any[]> {\n\t\tconst queryValidator = new QueryValidator();\n\t\tif (!queryValidator.queryValidate(query)) {\n\t\t\treturn Promise.reject(new InsightError());\n\t\t}\n\t\tconst myQuery = new Query(query);\n\t\tif (!this.idHasBeenAdded(myQuery.datasetID)) {\n\t\t\treturn Promise.reject(new InsightError());\n\t\t}\n\t\treturn this.readAndLoadCourses(myQuery.datasetID).then((courses) => {\n\t\t\treturn myQuery.process(courses);\n\t\t});\n\t\t// return Promise.resolve([]);\n\t}\n\n\tpublic listDatasets(): Promise<InsightDataset[]> {\n\t\treturn Promise.resolve(this.insightDatasets);\n\t}\n\n\tprivate unzip(content: string): Promise<any> {\n\t\tconst zip = new JSZip();\n\t\treturn zip.loadAsync(content, {base64: true})\n\t\t\t.catch((err: any) => {\n\t\t\t\treturn Promise.reject(new InsightError(err));\n\t\t\t});\n\t}\n\n\tprivate processData(id: string, kind: InsightDatasetKind, unzippedData: any): Promise<any> {\n\t\tconst kindToString = this.getKindToString(kind);\n\t\tif (!this.directoryExists(kindToString, unzippedData)) {\n\t\t\treturn Promise.reject(new InsightError());\n\t\t}\n\t\tlet listOfFilesToBeLoaded: Array<Promise<any>> = [];\n\t\tunzippedData.folder(kindToString).forEach(function (relativePath: any, file: JSZipObject) {\n\t\t\tlistOfFilesToBeLoaded.push(file.async(\"text\"));\n\t\t});\n\t\tif (!fs.pathExistsSync(\"./data/\")) {\n\t\t\tfs.mkdirSync(\"./data/\");\n\t\t}\n\t\tif (kind === InsightDatasetKind.Courses) {\n\t\t\treturn this.processCourses(id, listOfFilesToBeLoaded);\n\t\t} else { // InsightDatasetKind === Rooms\n\t\t\t// TODO: implement processRooms\n\t\t\treturn Promise.resolve(\"\");\n\t\t}\n\t}\n\n\tprivate createDirectory(id: string): Promise<any> {\n\t\tif (fs.pathExistsSync(\"./data/\")) {\n\t\t\treturn fs.mkdir(\"./data/\" + id);\n\t\t} else {\n\t\t\treturn fs.mkdir(\"./data/\")\n\t\t\t\t.then(() => {\n\t\t\t\t\treturn fs.mkdir(\"./data/\" + id);\n\t\t\t\t});\n\t\t}\n\t}\n\n\tprivate directoryExists(kind: string, data: any): boolean {\n\t\tfor (const file of Object.keys(data.files)) {\n\t\t\tif (file.toString().split(\"/\")[0] === kind) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * let sections = list of Sections\n\t * inside each loop:\n\t * let Section section;\n\t * extract all fields (ex. dept) store on a local variable\n\t * instantiate section\n\t * add it to List of Section\n\t * return List after looping through all sections\n\t */\n\tprivate createSections(sections: any): Section[] {\n\t\tlet listOfSections: Section[] = [];\n\t\tfor (const section of sections) {\n\t\t\tif (\"Section\" in section && \"Course\" in section &&\n\t\t\t\t\"Avg\" in section && \"Professor\" in section &&\n\t\t\t\t\"Title\" in section && \"Pass\" in section &&\n\t\t\t\t\"Fail\" in section && \"Audit\" in section &&\n\t\t\t\t\"id\" in section && \"Year\" in section) {\n\t\t\t\tlet s: Section;\n\t\t\t\tconst yo = section._year;\n\t\t\t\tif (section._year === \"overall\") {\n\t\t\t\t\ts = new Section(section.Subject, section.Course, section.Avg, section.Professor,\n\t\t\t\t\t\tsection.Title, section.Pass, section.Fail, section.Audit, section.id, 1900);\n\t\t\t\t} else {\n\t\t\t\t\ts = new Section(section.Subject, section.Course, section.Avg, section.Professor,\n\t\t\t\t\t\tsection.Title, section.Pass, section.Fail, section.Audit, section.id, section.Year);\n\t\t\t\t}\n\t\t\t\tlistOfSections.push(s);\n\t\t\t}\n\t\t}\n\t\treturn listOfSections;\n\t}\n\n\tprivate readAndLoadCourses(datasetID: any): Promise<Course[]> {\n\t\tlet path = \"./data/\" + datasetID;\n\t\tlet fileNames = fs.readdirSync(path);\n\t\tlet listOfFilesToBeLoaded: Array<Promise<any>> = [];\n\t\tfor (const fileName of fileNames) {\n\t\t\tconst jsonPath = path + \"/\" + fileName;\n\t\t\tconst jsonToRead = fs.readJson(jsonPath);\n\t\t\tlistOfFilesToBeLoaded.push(jsonToRead);\n\t\t}\n\t\tlet courses: Course[] = [];\n\t\treturn Promise.all(listOfFilesToBeLoaded).then((data) => {\n\t\t\tfor (const json of data) {\n\t\t\t\tconst jsonObj = JSON.parse(json);\n\t\t\t\tconst course = new Course(jsonObj.id, jsonObj.sections);\n\t\t\t\tcourses.push(course);\n\t\t\t}\n\t\t})\n\t\t\t.then(() => {\n\t\t\t\treturn Promise.resolve(courses);\n\t\t\t});\n\t}\n\n\tprivate isIdValid(id: string): boolean {\n\t\tif (id.includes(\"_\")) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\tlet trimmedID: string = id.replace(/ /g, \"\");\n\t\t\tif (trimmedID.length === 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate idHasBeenAdded(id: string): boolean {\n\t\tfor (const insight of this.insightDatasets) {\n\t\t\tif (insight.id === id) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate getKindToString(kind: InsightDatasetKind): string {\n\t\tif (kind === InsightDatasetKind.Courses) {\n\t\t\treturn \"courses\";\n\t\t} else {\n\t\t\treturn \"rooms\";\n\n\t\t}\n\t}\n\n\tprivate processCourses(id: string, listOfFilesToBeLoaded: any[]) {\n\t\tlet courses: Course[] = [];\n\t\treturn Promise.all(listOfFilesToBeLoaded).then((data) => {\n\t\t\tlet containsOneOrMoreJsonFiles = false;\n\t\t\tlet counter = 0;\n\t\t\tdata.forEach((courseObject: string) => {\n\t\t\t\tlet sections: Section[] = [];\n\t\t\t\ttry {\n\t\t\t\t\tconst sectionArr = JSON.parse(courseObject);\n\t\t\t\t\tsections = this.createSections(sectionArr.result);\n\t\t\t\t\tcounter += sections.length;\n\t\t\t\t\tif (sections.length > 0) {\n\t\t\t\t\t\tconst courseID = \"courses-\" + sections[0].dept + \"-\" + sections[0].id; // assuming sections is not empty\n\t\t\t\t\t\tconst course: Course = new Course(courseID, sections);\n\t\t\t\t\t\tcourses.push(course);\n\t\t\t\t\t}\n\t\t\t\t\tcontainsOneOrMoreJsonFiles = true;\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// console.log(\"do nothing to the invalid json file\");\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (!containsOneOrMoreJsonFiles) {\n\t\t\t\treturn Promise.reject(new InsightError());\n\t\t\t}\n\t\t\tlet listOfCoursesToBeStored: Array<Promise<any>> = [];\n\t\t\tthis.createDirectory(id)\n\t\t\t\t.then(() => {\n\t\t\t\t\tfor (const course of courses) {\n\t\t\t\t\t\tconst path = \"./data/\" + id + \"/\" +  course.id + \".json\";\n\t\t\t\t\t\tlistOfFilesToBeLoaded.push(fs.writeJSON(path, course.toJson()));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\treturn Promise.all(listOfCoursesToBeStored)\n\t\t\t\t.then(() => {\n\t\t\t\t\treturn counter;\n\t\t\t\t});\n\t\t});\n\t}\n}\n\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"02bcaf2276279b06fb2bb9eed280199f47a98e53","contentHash":"8715b4eb56f4cd1671122628eb5e316b2a52fec6c1a47299825f580a7f54e311"},"/Users/user/project_team147/src/model/Course.ts":{"path":"/Users/user/project_team147/src/model/Course.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":5,"column":8},"end":{"line":5,"column":28}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":34}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":22}},"4":{"start":{"line":10,"column":8},"end":{"line":13,"column":11}},"5":{"start":{"line":16,"column":8},"end":{"line":16,"column":24}},"6":{"start":{"line":19,"column":8},"end":{"line":19,"column":30}},"7":{"start":{"line":22,"column":0},"end":{"line":22,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":4},"end":{"line":4,"column":5}},"loc":{"start":{"line":4,"column":30},"end":{"line":8,"column":5}},"line":4},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":13},"end":{"line":14,"column":5}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":15,"column":4},"end":{"line":15,"column":5}},"loc":{"start":{"line":15,"column":13},"end":{"line":17,"column":5}},"line":15},"3":{"name":"(anonymous_3)","decl":{"start":{"line":18,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":18,"column":19},"end":{"line":20,"column":5}},"line":18}},"branchMap":{},"s":{"0":1,"1":86136,"2":86136,"3":86136,"4":7178,"5":7200,"6":78958,"7":1},"f":{"0":86136,"1":7178,"2":7200,"3":78958},"b":{},"inputSourceMap":{"version":3,"file":"/Users/user/project_team147/src/model/Course.ts","sources":["/Users/user/project_team147/src/model/Course.ts"],"names":[],"mappings":";;AAGA,MAAqB,MAAM;IAI1B,YAAY,EAAU,EAAE,QAAmB;QAHnC,cAAS,GAAc,EAAE,CAAC;QAIjC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;IACf,CAAC;IAIM,MAAM;QAOZ,OAAO,IAAI,CAAC,SAAS,CAAC;YACrB,EAAE,EAAE,IAAI,CAAC,GAAG;YACZ,QAAQ,EAAE,IAAI,CAAC,SAAS;SACxB,CAAC,CAAC;IACJ,CAAC;IAED,IAAW,EAAE;QACZ,OAAO,IAAI,CAAC,GAAG,CAAC;IACjB,CAAC;IAED,IAAW,QAAQ;QAClB,OAAO,IAAI,CAAC,SAAS,CAAC;IACvB,CAAC;CACD;AA/BD,yBA+BC","sourcesContent":["import Section from \"./Section\";\n\n\nexport default class Course {\n\tprivate _sections: Section[] = [];\n\tprivate readonly _id: string;\n\n\tconstructor(id: string, sections: Section[]) {\n\t\tthis._sections = sections;\n\t\tthis._id = id;\n\t}\n\n// toString method looping through the section and creating the json.\n\n\tpublic toJson(): string {\n\t\t// let jsonString = \"{\";\n\t\t// for (const section of this._sections) {\n\t\t// \tjsonString += section.toJson() + \", \";\n\t\t// }\n\t\t// jsonString += \"}\";\n\t\t// return jsonString;\n\t\treturn JSON.stringify({\n\t\t\tid: this._id,\n\t\t\tsections: this._sections\n\t\t});\n\t}\n\n\tpublic get id(): string {\n\t\treturn this._id;\n\t}\n\n\tpublic get sections(): Section[] {\n\t\treturn this._sections;\n\t}\n}\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5a98b4d01d9cdf3c77b2ded533a0bb8cd2e06d3c","contentHash":"22f4624e318759056999e382642f1e0daec75a0644e7b258820f8023e79ee78f"},"/Users/user/project_team147/src/model/Section.ts":{"path":"/Users/user/project_team147/src/model/Section.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":5,"column":8},"end":{"line":5,"column":26}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":22}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":24}},"4":{"start":{"line":8,"column":8},"end":{"line":8,"column":38}},"5":{"start":{"line":9,"column":8},"end":{"line":9,"column":28}},"6":{"start":{"line":10,"column":8},"end":{"line":10,"column":26}},"7":{"start":{"line":11,"column":8},"end":{"line":11,"column":26}},"8":{"start":{"line":12,"column":8},"end":{"line":12,"column":28}},"9":{"start":{"line":13,"column":8},"end":{"line":18,"column":9}},"10":{"start":{"line":14,"column":12},"end":{"line":14,"column":41}},"11":{"start":{"line":17,"column":12},"end":{"line":17,"column":30}},"12":{"start":{"line":19,"column":8},"end":{"line":19,"column":26}},"13":{"start":{"line":22,"column":8},"end":{"line":22,"column":26}},"14":{"start":{"line":25,"column":8},"end":{"line":25,"column":24}},"15":{"start":{"line":28,"column":8},"end":{"line":28,"column":25}},"16":{"start":{"line":31,"column":8},"end":{"line":31,"column":32}},"17":{"start":{"line":34,"column":8},"end":{"line":34,"column":27}},"18":{"start":{"line":37,"column":8},"end":{"line":37,"column":26}},"19":{"start":{"line":40,"column":8},"end":{"line":40,"column":26}},"20":{"start":{"line":43,"column":8},"end":{"line":43,"column":27}},"21":{"start":{"line":46,"column":8},"end":{"line":46,"column":26}},"22":{"start":{"line":49,"column":8},"end":{"line":49,"column":26}},"23":{"start":{"line":52,"column":0},"end":{"line":52,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":4},"end":{"line":4,"column":5}},"loc":{"start":{"line":4,"column":81},"end":{"line":20,"column":5}},"line":4},"1":{"name":"(anonymous_1)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":15},"end":{"line":23,"column":5}},"line":21},"2":{"name":"(anonymous_2)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":13},"end":{"line":26,"column":5}},"line":24},"3":{"name":"(anonymous_3)","decl":{"start":{"line":27,"column":4},"end":{"line":27,"column":5}},"loc":{"start":{"line":27,"column":14},"end":{"line":29,"column":5}},"line":27},"4":{"name":"(anonymous_4)","decl":{"start":{"line":30,"column":4},"end":{"line":30,"column":5}},"loc":{"start":{"line":30,"column":21},"end":{"line":32,"column":5}},"line":30},"5":{"name":"(anonymous_5)","decl":{"start":{"line":33,"column":4},"end":{"line":33,"column":5}},"loc":{"start":{"line":33,"column":16},"end":{"line":35,"column":5}},"line":33},"6":{"name":"(anonymous_6)","decl":{"start":{"line":36,"column":4},"end":{"line":36,"column":5}},"loc":{"start":{"line":36,"column":15},"end":{"line":38,"column":5}},"line":36},"7":{"name":"(anonymous_7)","decl":{"start":{"line":39,"column":4},"end":{"line":39,"column":5}},"loc":{"start":{"line":39,"column":15},"end":{"line":41,"column":5}},"line":39},"8":{"name":"(anonymous_8)","decl":{"start":{"line":42,"column":4},"end":{"line":42,"column":5}},"loc":{"start":{"line":42,"column":16},"end":{"line":44,"column":5}},"line":42},"9":{"name":"(anonymous_9)","decl":{"start":{"line":45,"column":4},"end":{"line":45,"column":5}},"loc":{"start":{"line":45,"column":15},"end":{"line":47,"column":5}},"line":45},"10":{"name":"(anonymous_10)","decl":{"start":{"line":48,"column":4},"end":{"line":48,"column":5}},"loc":{"start":{"line":48,"column":15},"end":{"line":50,"column":5}},"line":48}},"branchMap":{"0":{"loc":{"start":{"line":13,"column":8},"end":{"line":18,"column":9}},"type":"if","locations":[{"start":{"line":13,"column":8},"end":{"line":18,"column":9}},{"start":{"line":13,"column":8},"end":{"line":18,"column":9}}],"line":13}},"s":{"0":1,"1":129224,"2":129224,"3":129224,"4":129224,"5":129224,"6":129224,"7":129224,"8":129224,"9":129224,"10":129224,"11":0,"12":129224,"13":7178,"14":7178,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1},"f":{"0":129224,"1":7178,"2":7178,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"0":[129224,0]},"inputSourceMap":{"version":3,"file":"/Users/user/project_team147/src/model/Section.ts","sources":["/Users/user/project_team147/src/model/Section.ts"],"names":[],"mappings":";;AAAA,MAAqB,OAAO;IAa3B,YAAY,IAAY,EAAE,EAAU,EAAE,GAAW,EAAE,UAAkB,EAAE,KAAa,EAAE,IAAY,EACjG,IAAY,EAAE,KAAa,EAAE,IAAS,EAAE,IAAY;QACpD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;QACd,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAChB,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;QAC9B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;YAC7B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;SAC7B;aAAM;YACN,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;SAClB;QACD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IACnB,CAAC;IAED,IAAW,IAAI;QACd,OAAO,IAAI,CAAC,KAAK,CAAC;IACnB,CAAC;IAED,IAAW,EAAE;QACZ,OAAO,IAAI,CAAC,GAAG,CAAC;IACjB,CAAC;IAED,IAAW,GAAG;QACb,OAAO,IAAI,CAAC,IAAI,CAAC;IAClB,CAAC;IAED,IAAW,UAAU;QACpB,OAAO,IAAI,CAAC,WAAW,CAAC;IACzB,CAAC;IAED,IAAW,KAAK;QACf,OAAO,IAAI,CAAC,MAAM,CAAC;IACpB,CAAC;IAED,IAAW,IAAI;QACd,OAAO,IAAI,CAAC,KAAK,CAAC;IACnB,CAAC;IAED,IAAW,IAAI;QACd,OAAO,IAAI,CAAC,KAAK,CAAC;IACnB,CAAC;IAED,IAAW,KAAK;QACf,OAAO,IAAI,CAAC,MAAM,CAAC;IACpB,CAAC;IAED,IAAW,IAAI;QACd,OAAO,IAAI,CAAC,KAAK,CAAC;IACnB,CAAC;IAED,IAAW,IAAI;QACd,OAAO,IAAI,CAAC,KAAK,CAAC;IACnB,CAAC;CACD;AAtED,0BAsEC","sourcesContent":["export default class Section {\n\tpublic readonly _dept: string; // saved as subject \"aanb\"\n\tpublic readonly _id: string; // file name  \"551\"\n\tpublic readonly _avg: number; // possibly sort base on average\n\tpublic readonly _instructor: string;\n\tpublic readonly _title: string;\n\tpublic readonly _pass: number;\n\tpublic readonly _fail: number;\n\tpublic readonly _audit: number\n\tpublic readonly _uuid: string; // saved as id\n\tpublic readonly _year: number;\n\n\n\tconstructor(dept: string, id: string, avg: number, instructor: string, title: string, pass: number,\n\t\tfail: number, audit: number, uuid: any, year: number) {\n\t\tthis._dept = dept;\n\t\tthis._id = id;\n\t\tthis._avg = avg;\n\t\tthis._instructor = instructor;\n\t\tthis._title = title;\n\t\tthis._pass = pass;\n\t\tthis._fail = fail;\n\t\tthis._audit = audit;\n\t\tif (typeof uuid === \"number\") {\n\t\t\tthis._uuid = uuid.toString();\n\t\t} else {\n\t\t\tthis._uuid = uuid;\n\t\t}\n\t\tthis._year = year;\n\t}\n\n\tpublic get dept(): string {\n\t\treturn this._dept;\n\t}\n\n\tpublic get id(): string {\n\t\treturn this._id;\n\t}\n\n\tpublic get avg(): number {\n\t\treturn this._avg;\n\t}\n\n\tpublic get instructor(): string {\n\t\treturn this._instructor;\n\t}\n\n\tpublic get title(): string {\n\t\treturn this._title;\n\t}\n\n\tpublic get pass(): number {\n\t\treturn this._pass;\n\t}\n\n\tpublic get fail(): number {\n\t\treturn this._fail;\n\t}\n\n\tpublic get audit(): number {\n\t\treturn this._audit;\n\t}\n\n\tpublic get uuid(): string {\n\t\treturn this._uuid;\n\t}\n\n\tpublic get year(): number {\n\t\treturn this._year;\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5b93180327f4e360c9f983df30003aff5fe9044d","contentHash":"cb639de8018d1bd839d207bb4c04c78176266f6c2d60bed4f7f586595e579e8b"},"/Users/user/project_team147/src/model/Query.ts":{"path":"/Users/user/project_team147/src/model/Query.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":17},"end":{"line":6,"column":53}},"4":{"start":{"line":7,"column":22},"end":{"line":7,"column":63}},"5":{"start":{"line":8,"column":25},"end":{"line":8,"column":64}},"6":{"start":{"line":11,"column":8},"end":{"line":11,"column":26}},"7":{"start":{"line":12,"column":8},"end":{"line":12,"column":29}},"8":{"start":{"line":13,"column":8},"end":{"line":13,"column":65}},"9":{"start":{"line":14,"column":8},"end":{"line":14,"column":28}},"10":{"start":{"line":17,"column":8},"end":{"line":17,"column":31}},"11":{"start":{"line":20,"column":17},"end":{"line":20,"column":19}},"12":{"start":{"line":21,"column":8},"end":{"line":23,"column":9}},"13":{"start":{"line":22,"column":12},"end":{"line":22,"column":45}},"14":{"start":{"line":24,"column":21},"end":{"line":24,"column":43}},"15":{"start":{"line":25,"column":23},"end":{"line":25,"column":48}},"16":{"start":{"line":26,"column":31},"end":{"line":26,"column":78}},"17":{"start":{"line":27,"column":8},"end":{"line":29,"column":9}},"18":{"start":{"line":28,"column":12},"end":{"line":28,"column":78}},"19":{"start":{"line":30,"column":28},"end":{"line":30,"column":63}},"20":{"start":{"line":31,"column":21},"end":{"line":31,"column":77}},"21":{"start":{"line":32,"column":8},"end":{"line":32,"column":22}},"22":{"start":{"line":35,"column":23},"end":{"line":35,"column":25}},"23":{"start":{"line":36,"column":8},"end":{"line":39,"column":9}},"24":{"start":{"line":37,"column":24},"end":{"line":37,"column":39}},"25":{"start":{"line":38,"column":12},"end":{"line":38,"column":46}},"26":{"start":{"line":40,"column":8},"end":{"line":40,"column":24}},"27":{"start":{"line":43,"column":20},"end":{"line":43,"column":22}},"28":{"start":{"line":44,"column":8},"end":{"line":48,"column":11}},"29":{"start":{"line":45,"column":12},"end":{"line":47,"column":13}},"30":{"start":{"line":46,"column":16},"end":{"line":46,"column":49}},"31":{"start":{"line":49,"column":8},"end":{"line":51,"column":9}},"32":{"start":{"line":50,"column":12},"end":{"line":50,"column":28}},"33":{"start":{"line":52,"column":8},"end":{"line":52,"column":36}},"34":{"start":{"line":53,"column":21},"end":{"line":53,"column":63}},"35":{"start":{"line":54,"column":8},"end":{"line":54,"column":29}},"36":{"start":{"line":57,"column":22},"end":{"line":57,"column":48}},"37":{"start":{"line":58,"column":26},"end":{"line":58,"column":28}},"38":{"start":{"line":59,"column":8},"end":{"line":72,"column":9}},"39":{"start":{"line":60,"column":29},"end":{"line":60,"column":31}},"40":{"start":{"line":61,"column":12},"end":{"line":70,"column":13}},"41":{"start":{"line":62,"column":34},"end":{"line":62,"column":59}},"42":{"start":{"line":63,"column":16},"end":{"line":69,"column":17}},"43":{"start":{"line":65,"column":20},"end":{"line":65,"column":81}},"44":{"start":{"line":68,"column":20},"end":{"line":68,"column":81}},"45":{"start":{"line":71,"column":12},"end":{"line":71,"column":41}},"46":{"start":{"line":73,"column":8},"end":{"line":73,"column":27}},"47":{"start":{"line":76,"column":8},"end":{"line":76,"column":27}},"48":{"start":{"line":79,"column":8},"end":{"line":81,"column":9}},"49":{"start":{"line":80,"column":12},"end":{"line":80,"column":32}},"50":{"start":{"line":82,"column":8},"end":{"line":84,"column":9}},"51":{"start":{"line":83,"column":12},"end":{"line":83,"column":33}},"52":{"start":{"line":85,"column":8},"end":{"line":87,"column":9}},"53":{"start":{"line":86,"column":12},"end":{"line":86,"column":33}},"54":{"start":{"line":88,"column":8},"end":{"line":90,"column":9}},"55":{"start":{"line":89,"column":12},"end":{"line":89,"column":34}},"56":{"start":{"line":91,"column":8},"end":{"line":94,"column":9}},"57":{"start":{"line":92,"column":29},"end":{"line":92,"column":53}},"58":{"start":{"line":93,"column":12},"end":{"line":93,"column":44}},"59":{"start":{"line":95,"column":8},"end":{"line":95,"column":17}},"60":{"start":{"line":98,"column":8},"end":{"line":100,"column":9}},"61":{"start":{"line":99,"column":12},"end":{"line":99,"column":33}},"62":{"start":{"line":101,"column":8},"end":{"line":103,"column":9}},"63":{"start":{"line":102,"column":12},"end":{"line":102,"column":31}},"64":{"start":{"line":104,"column":8},"end":{"line":106,"column":9}},"65":{"start":{"line":105,"column":12},"end":{"line":105,"column":39}},"66":{"start":{"line":107,"column":8},"end":{"line":109,"column":9}},"67":{"start":{"line":108,"column":12},"end":{"line":108,"column":34}},"68":{"start":{"line":110,"column":8},"end":{"line":110,"column":29}},"69":{"start":{"line":113,"column":0},"end":{"line":113,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":23},"end":{"line":15,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":20},"end":{"line":18,"column":5}},"line":16},"3":{"name":"(anonymous_3)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":21},"end":{"line":33,"column":5}},"line":19},"4":{"name":"(anonymous_4)","decl":{"start":{"line":34,"column":4},"end":{"line":34,"column":5}},"loc":{"start":{"line":34,"column":25},"end":{"line":41,"column":5}},"line":34},"5":{"name":"(anonymous_5)","decl":{"start":{"line":42,"column":4},"end":{"line":42,"column":5}},"loc":{"start":{"line":42,"column":27},"end":{"line":55,"column":5}},"line":42},"6":{"name":"(anonymous_6)","decl":{"start":{"line":44,"column":48},"end":{"line":44,"column":49}},"loc":{"start":{"line":44,"column":57},"end":{"line":48,"column":9}},"line":44},"7":{"name":"(anonymous_7)","decl":{"start":{"line":56,"column":4},"end":{"line":56,"column":5}},"loc":{"start":{"line":56,"column":51},"end":{"line":74,"column":5}},"line":56},"8":{"name":"(anonymous_8)","decl":{"start":{"line":75,"column":4},"end":{"line":75,"column":5}},"loc":{"start":{"line":75,"column":16},"end":{"line":77,"column":5}},"line":75},"9":{"name":"(anonymous_9)","decl":{"start":{"line":78,"column":4},"end":{"line":78,"column":5}},"loc":{"start":{"line":78,"column":28},"end":{"line":96,"column":5}},"line":78},"10":{"name":"(anonymous_10)","decl":{"start":{"line":97,"column":4},"end":{"line":97,"column":5}},"loc":{"start":{"line":97,"column":28},"end":{"line":111,"column":5}},"line":97}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":21,"column":8},"end":{"line":23,"column":9}},"type":"if","locations":[{"start":{"line":21,"column":8},"end":{"line":23,"column":9}},{"start":{"line":21,"column":8},"end":{"line":23,"column":9}}],"line":21},"4":{"loc":{"start":{"line":27,"column":8},"end":{"line":29,"column":9}},"type":"if","locations":[{"start":{"line":27,"column":8},"end":{"line":29,"column":9}},{"start":{"line":27,"column":8},"end":{"line":29,"column":9}}],"line":27},"5":{"loc":{"start":{"line":45,"column":12},"end":{"line":47,"column":13}},"type":"if","locations":[{"start":{"line":45,"column":12},"end":{"line":47,"column":13}},{"start":{"line":45,"column":12},"end":{"line":47,"column":13}}],"line":45},"6":{"loc":{"start":{"line":49,"column":8},"end":{"line":51,"column":9}},"type":"if","locations":[{"start":{"line":49,"column":8},"end":{"line":51,"column":9}},{"start":{"line":49,"column":8},"end":{"line":51,"column":9}}],"line":49},"7":{"loc":{"start":{"line":63,"column":16},"end":{"line":69,"column":17}},"type":"if","locations":[{"start":{"line":63,"column":16},"end":{"line":69,"column":17}},{"start":{"line":63,"column":16},"end":{"line":69,"column":17}}],"line":63},"8":{"loc":{"start":{"line":63,"column":20},"end":{"line":64,"column":65}},"type":"binary-expr","locations":[{"start":{"line":63,"column":20},"end":{"line":63,"column":39}},{"start":{"line":63,"column":43},"end":{"line":63,"column":63}},{"start":{"line":63,"column":67},"end":{"line":63,"column":87}},{"start":{"line":64,"column":20},"end":{"line":64,"column":41}},{"start":{"line":64,"column":45},"end":{"line":64,"column":65}}],"line":63},"9":{"loc":{"start":{"line":79,"column":8},"end":{"line":81,"column":9}},"type":"if","locations":[{"start":{"line":79,"column":8},"end":{"line":81,"column":9}},{"start":{"line":79,"column":8},"end":{"line":81,"column":9}}],"line":79},"10":{"loc":{"start":{"line":82,"column":8},"end":{"line":84,"column":9}},"type":"if","locations":[{"start":{"line":82,"column":8},"end":{"line":84,"column":9}},{"start":{"line":82,"column":8},"end":{"line":84,"column":9}}],"line":82},"11":{"loc":{"start":{"line":85,"column":8},"end":{"line":87,"column":9}},"type":"if","locations":[{"start":{"line":85,"column":8},"end":{"line":87,"column":9}},{"start":{"line":85,"column":8},"end":{"line":87,"column":9}}],"line":85},"12":{"loc":{"start":{"line":88,"column":8},"end":{"line":90,"column":9}},"type":"if","locations":[{"start":{"line":88,"column":8},"end":{"line":90,"column":9}},{"start":{"line":88,"column":8},"end":{"line":90,"column":9}}],"line":88},"13":{"loc":{"start":{"line":91,"column":8},"end":{"line":94,"column":9}},"type":"if","locations":[{"start":{"line":91,"column":8},"end":{"line":94,"column":9}},{"start":{"line":91,"column":8},"end":{"line":94,"column":9}}],"line":91},"14":{"loc":{"start":{"line":98,"column":8},"end":{"line":100,"column":9}},"type":"if","locations":[{"start":{"line":98,"column":8},"end":{"line":100,"column":9}},{"start":{"line":98,"column":8},"end":{"line":100,"column":9}}],"line":98},"15":{"loc":{"start":{"line":101,"column":8},"end":{"line":103,"column":9}},"type":"if","locations":[{"start":{"line":101,"column":8},"end":{"line":103,"column":9}},{"start":{"line":101,"column":8},"end":{"line":103,"column":9}}],"line":101},"16":{"loc":{"start":{"line":104,"column":8},"end":{"line":106,"column":9}},"type":"if","locations":[{"start":{"line":104,"column":8},"end":{"line":106,"column":9}},{"start":{"line":104,"column":8},"end":{"line":106,"column":9}}],"line":104},"17":{"loc":{"start":{"line":107,"column":8},"end":{"line":109,"column":9}},"type":"if","locations":[{"start":{"line":107,"column":8},"end":{"line":109,"column":9}},{"start":{"line":107,"column":8},"end":{"line":109,"column":9}}],"line":107}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":22,"7":22,"8":22,"9":22,"10":44,"11":22,"12":22,"13":22,"14":22,"15":22,"16":22,"17":22,"18":2,"19":20,"20":20,"21":20,"22":22,"23":22,"24":78958,"25":78958,"26":22,"27":20,"28":20,"29":38,"30":18,"31":20,"32":2,"33":18,"34":18,"35":18,"36":20,"37":20,"38":20,"39":1472,"40":1472,"41":1750,"42":1750,"43":1462,"44":288,"45":1472,"46":20,"47":80,"48":1462,"49":1447,"50":15,"51":3,"52":12,"53":3,"54":9,"55":6,"56":3,"57":3,"58":3,"59":0,"60":288,"61":195,"62":93,"63":59,"64":34,"65":3,"66":31,"67":3,"68":28,"69":1},"f":{"0":2,"1":22,"2":44,"3":22,"4":22,"5":20,"6":38,"7":20,"8":80,"9":1462,"10":288},"b":{"0":[1,1,1],"1":[2,0],"2":[2,2],"3":[22,0],"4":[2,20],"5":[18,20],"6":[2,18],"7":[1462,288],"8":[1750,303,300,297,291],"9":[1447,15],"10":[3,12],"11":[3,9],"12":[6,3],"13":[3,0],"14":[195,93],"15":[59,34],"16":[3,31],"17":[3,28]},"inputSourceMap":{"version":3,"file":"/Users/user/project_team147/src/model/Query.ts","sources":["/Users/user/project_team147/src/model/Query.ts"],"names":[],"mappings":"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","sourcesContent":["import QueryValidator from \"./QueryValidator\";\nimport Course from \"./Course\";\nimport Filter from \"./Filter\";\nimport Section from \"./Section\";\nimport QuerySorter from \"./QuerySorter\";\nimport {ResultTooLargeError} from \"../controller/IInsightFacade\";\n\nexport interface QueryOBJ {\n\tWHERE?: QueryFilter;\n\tOPTIONS?: QueryOptions;\n}\n\nexport interface QueryOptions {\n\tCOLUMNS?: QueryOptions;\n\tORDER?: any;\n}\n\nexport interface QueryFilter {\n\t[key: string]: any\n}\n\nexport interface QueryResult {\n\tResult: [];\n}\n\nexport default class Query {\n\tprivate courses: Course[] = [];\n\tprivate _datasetID: string = \"\";\n\tprivate _query: any;\n\tconstructor(query: any) {\n\t\tthis._datasetID = query.OPTIONS.COLUMNS[0].split(\"_\")[0];\n\t\tthis._query = query;\n\t}\n\n\tpublic get datasetID() {\n\t\treturn this._datasetID;\n\t}\n\n\tpublic process(courses: Course[]) {\n\t\tlet id = \"\";\n\t\tif (!(courses.length === 0)) {\n\t\t\tid = courses[0].id.split(\"-\")[0];\n\t\t}\n\t\tlet filter: Filter = new Filter();\n\t\tlet sections = this.getSections(courses);\n\n\t\tlet filteredSections: Section[] = filter.handleFilter(sections, this.query.WHERE);\n\n\t\tif (filteredSections.length > 5000) {\n\t\t\treturn Promise.reject(new ResultTooLargeError());\n\t\t}\n\t\tlet sortedSection: Section[] = this.sortSections(filteredSections);\n\t\tlet result: any[] = this.filterColumnsAndConvertToObjects(id, sortedSection);\n\t\treturn result;\n\t}\n\n\tpublic getSections(courses: Course[]) {\n\t\tlet sections: Section[] = [];\n\t\tfor (const course of courses) {\n\t\t\tlet hello: any[] = course.sections;\n\t\t\tsections = sections.concat(hello);\n\t\t}\n\t\treturn sections;\n\n\t}\n\n\tpublic sortSections(sections: Section[]): Section[] {\n\t\tlet order = \"\";\n\t\tObject.keys(this.query.OPTIONS).forEach((key) => {\n\t\t\tif (key === \"ORDER\") {\n\t\t\t\torder = this.query.OPTIONS.ORDER;\n\t\t\t}\n\t\t});\n\t\tif (order === \"\") { // No need to sort if there is no order\n\t\t\treturn sections;\n\t\t}\n\t\torder = order.split(\"_\")[1];\n\t\tlet sorter: QuerySorter = new QuerySorter(order, sections);\n\t\treturn sorter.sort();\n\t}\n\n\tpublic filterColumnsAndConvertToObjects(id: string, sections: Section[]): Section[] {\n\t\tlet columns: string[] = this.query.OPTIONS.COLUMNS; // [\"courses_dept\", ...]\n\t\tlet arrayOfObjs: Section[] = [];\n\t\tfor (const section of sections) {\n\t\t\tlet sectionObj: any = {\n\t\t\t};\n\t\t\tfor (const inputString of columns) { // column = \"courses_avg\"\n\t\t\t\tconst columnKey: string = inputString.split(\"_\")[1];\n\t\t\t\tif (columnKey === \"avg\" || columnKey === \"pass\" || columnKey === \"fail\" ||\n\t\t\t\t\tcolumnKey === \"audit\" || columnKey === \"year\") {\n\t\t\t\t\tsectionObj[inputString] = this.getMField(columnKey, section);\n\t\t\t\t} else {\n\t\t\t\t\tsectionObj[inputString] = this.getSField(columnKey, section);\n\t\t\t\t}\n\t\t\t}\n\t\t\tarrayOfObjs.push(sectionObj);\n\t\t}\n\t\treturn arrayOfObjs;\n\t}\n\n\t// // return a list of all fields inside columns\n\t// public getColumns(): string[] {\n\t// \tconst keys = this.query.OPTIONS.COLUMNS;\n\t// \tlet columns = [];\n\t// \tfor (const key of keys) {\n\t// \t\tconst column = key.split(\"_\")[1];\n\t// \t\tcolumns.push(column);\n\t// \t}\n\t// \treturn columns;\n\t// }\n\n\tpublic get query(): any {\n\t\treturn this._query;\n\t}\n\n\tprivate getMField(key: string, section: Section): number {\n\t\tif (key === \"avg\") {\n\t\t\treturn section._avg;\n\t\t}\n\t\tif (key === \"pass\") {\n\t\t\treturn section._pass;\n\t\t}\n\t\tif (key === \"fail\") {\n\t\t\treturn section._fail;\n\t\t}\n\t\tif (key === \"audit\") {\n\t\t\treturn section._audit;\n\t\t}\n\t\tif (key === \"year\") {\n\t\t\tlet stringYear = section._year.toString();\n\t\t\treturn parseInt(stringYear, 10);\n\t\t}\n\t\t// return parseInt(section._year, 10);\n\t\treturn 0;\n\t}\n\n\tprivate getSField(key: string, section: any): string {\n\t\tif (key === \"dept\") {\n\t\t\treturn section._dept;\n\t\t}\n\t\tif (key === \"id\") {\n\t\t\treturn section._id;\n\t\t}\n\t\tif (key === \"instructor\") {\n\t\t\treturn section._instructor;\n\t\t}\n\t\tif (key === \"title\") {\n\t\t\treturn section._title;\n\t\t}\n\t\treturn section._uuid;\n\t}\n\n\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6901784e311014a30420cd3f6c620dfa1bb77125","contentHash":"e467ebf4c378d23465d5fa759de9bfedb8e701efd4cbf362559b88d46bc9001f"},"/Users/user/project_team147/src/model/Filter.ts":{"path":"/Users/user/project_team147/src/model/Filter.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":5,"column":21},"end":{"line":5,"column":41}},"2":{"start":{"line":6,"column":18},"end":{"line":6,"column":25}},"3":{"start":{"line":7,"column":8},"end":{"line":21,"column":9}},"4":{"start":{"line":8,"column":12},"end":{"line":8,"column":64}},"5":{"start":{"line":10,"column":13},"end":{"line":21,"column":9}},"6":{"start":{"line":11,"column":12},"end":{"line":11,"column":65}},"7":{"start":{"line":13,"column":13},"end":{"line":21,"column":9}},"8":{"start":{"line":14,"column":12},"end":{"line":14,"column":57}},"9":{"start":{"line":16,"column":13},"end":{"line":21,"column":9}},"10":{"start":{"line":17,"column":12},"end":{"line":17,"column":59}},"11":{"start":{"line":20,"column":12},"end":{"line":20,"column":28}},"12":{"start":{"line":24,"column":24},"end":{"line":24,"column":36}},"13":{"start":{"line":25,"column":19},"end":{"line":25,"column":44}},"14":{"start":{"line":26,"column":20},"end":{"line":26,"column":35}},"15":{"start":{"line":27,"column":21},"end":{"line":27,"column":39}},"16":{"start":{"line":28,"column":8},"end":{"line":40,"column":9}},"17":{"start":{"line":30,"column":16},"end":{"line":30,"column":67}},"18":{"start":{"line":31,"column":16},"end":{"line":31,"column":22}},"19":{"start":{"line":33,"column":16},"end":{"line":33,"column":67}},"20":{"start":{"line":34,"column":16},"end":{"line":34,"column":22}},"21":{"start":{"line":36,"column":16},"end":{"line":36,"column":67}},"22":{"start":{"line":37,"column":16},"end":{"line":37,"column":22}},"23":{"start":{"line":39,"column":16},"end":{"line":39,"column":26}},"24":{"start":{"line":43,"column":28},"end":{"line":43,"column":30}},"25":{"start":{"line":44,"column":8},"end":{"line":49,"column":9}},"26":{"start":{"line":45,"column":28},"end":{"line":45,"column":59}},"27":{"start":{"line":46,"column":12},"end":{"line":48,"column":13}},"28":{"start":{"line":47,"column":16},"end":{"line":47,"column":44}},"29":{"start":{"line":50,"column":8},"end":{"line":50,"column":29}},"30":{"start":{"line":53,"column":28},"end":{"line":53,"column":30}},"31":{"start":{"line":54,"column":8},"end":{"line":59,"column":9}},"32":{"start":{"line":55,"column":28},"end":{"line":55,"column":59}},"33":{"start":{"line":56,"column":12},"end":{"line":58,"column":13}},"34":{"start":{"line":57,"column":16},"end":{"line":57,"column":44}},"35":{"start":{"line":60,"column":8},"end":{"line":60,"column":29}},"36":{"start":{"line":63,"column":28},"end":{"line":63,"column":30}},"37":{"start":{"line":64,"column":8},"end":{"line":69,"column":9}},"38":{"start":{"line":65,"column":28},"end":{"line":65,"column":59}},"39":{"start":{"line":66,"column":12},"end":{"line":68,"column":13}},"40":{"start":{"line":67,"column":16},"end":{"line":67,"column":44}},"41":{"start":{"line":70,"column":8},"end":{"line":70,"column":29}},"42":{"start":{"line":73,"column":28},"end":{"line":73,"column":30}},"43":{"start":{"line":74,"column":24},"end":{"line":74,"column":37}},"44":{"start":{"line":75,"column":19},"end":{"line":75,"column":44}},"45":{"start":{"line":76,"column":26},"end":{"line":76,"column":41}},"46":{"start":{"line":77,"column":21},"end":{"line":77,"column":39}},"47":{"start":{"line":78,"column":8},"end":{"line":121,"column":9}},"48":{"start":{"line":79,"column":12},"end":{"line":84,"column":13}},"49":{"start":{"line":80,"column":34},"end":{"line":80,"column":65}},"50":{"start":{"line":81,"column":16},"end":{"line":83,"column":17}},"51":{"start":{"line":82,"column":20},"end":{"line":82,"column":48}},"52":{"start":{"line":86,"column":13},"end":{"line":121,"column":9}},"53":{"start":{"line":87,"column":35},"end":{"line":87,"column":65}},"54":{"start":{"line":88,"column":12},"end":{"line":93,"column":13}},"55":{"start":{"line":89,"column":34},"end":{"line":89,"column":65}},"56":{"start":{"line":90,"column":16},"end":{"line":92,"column":17}},"57":{"start":{"line":91,"column":20},"end":{"line":91,"column":48}},"58":{"start":{"line":95,"column":13},"end":{"line":121,"column":9}},"59":{"start":{"line":96,"column":35},"end":{"line":96,"column":65}},"60":{"start":{"line":97,"column":12},"end":{"line":110,"column":13}},"61":{"start":{"line":98,"column":16},"end":{"line":100,"column":17}},"62":{"start":{"line":99,"column":20},"end":{"line":99,"column":48}},"63":{"start":{"line":103,"column":16},"end":{"line":109,"column":17}},"64":{"start":{"line":104,"column":36},"end":{"line":104,"column":67}},"65":{"start":{"line":105,"column":36},"end":{"line":105,"column":115}},"66":{"start":{"line":106,"column":20},"end":{"line":108,"column":21}},"67":{"start":{"line":107,"column":24},"end":{"line":107,"column":52}},"68":{"start":{"line":112,"column":13},"end":{"line":121,"column":9}},"69":{"start":{"line":113,"column":35},"end":{"line":113,"column":65}},"70":{"start":{"line":114,"column":12},"end":{"line":120,"column":13}},"71":{"start":{"line":115,"column":32},"end":{"line":115,"column":63}},"72":{"start":{"line":116,"column":32},"end":{"line":116,"column":78}},"73":{"start":{"line":117,"column":16},"end":{"line":119,"column":17}},"74":{"start":{"line":118,"column":20},"end":{"line":118,"column":48}},"75":{"start":{"line":122,"column":8},"end":{"line":122,"column":29}},"76":{"start":{"line":125,"column":22},"end":{"line":125,"column":24}},"77":{"start":{"line":126,"column":25},"end":{"line":126,"column":37}},"78":{"start":{"line":127,"column":8},"end":{"line":145,"column":9}},"79":{"start":{"line":128,"column":12},"end":{"line":128,"column":31}},"80":{"start":{"line":129,"column":12},"end":{"line":131,"column":13}},"81":{"start":{"line":130,"column":16},"end":{"line":130,"column":61}},"82":{"start":{"line":133,"column":13},"end":{"line":145,"column":9}},"83":{"start":{"line":134,"column":41},"end":{"line":134,"column":43}},"84":{"start":{"line":135,"column":12},"end":{"line":137,"column":13}},"85":{"start":{"line":136,"column":16},"end":{"line":136,"column":81}},"86":{"start":{"line":138,"column":12},"end":{"line":144,"column":13}},"87":{"start":{"line":139,"column":16},"end":{"line":143,"column":17}},"88":{"start":{"line":140,"column":20},"end":{"line":142,"column":21}},"89":{"start":{"line":141,"column":24},"end":{"line":141,"column":42}},"90":{"start":{"line":146,"column":8},"end":{"line":146,"column":23}},"91":{"start":{"line":149,"column":28},"end":{"line":149,"column":30}},"92":{"start":{"line":150,"column":24},"end":{"line":150,"column":38}},"93":{"start":{"line":151,"column":24},"end":{"line":151,"column":62}},"94":{"start":{"line":152,"column":8},"end":{"line":156,"column":9}},"95":{"start":{"line":153,"column":12},"end":{"line":155,"column":13}},"96":{"start":{"line":154,"column":16},"end":{"line":154,"column":44}},"97":{"start":{"line":157,"column":8},"end":{"line":157,"column":29}},"98":{"start":{"line":160,"column":8},"end":{"line":162,"column":9}},"99":{"start":{"line":161,"column":12},"end":{"line":161,"column":32}},"100":{"start":{"line":163,"column":8},"end":{"line":165,"column":9}},"101":{"start":{"line":164,"column":12},"end":{"line":164,"column":33}},"102":{"start":{"line":166,"column":8},"end":{"line":168,"column":9}},"103":{"start":{"line":167,"column":12},"end":{"line":167,"column":33}},"104":{"start":{"line":169,"column":8},"end":{"line":171,"column":9}},"105":{"start":{"line":170,"column":12},"end":{"line":170,"column":34}},"106":{"start":{"line":172,"column":8},"end":{"line":174,"column":9}},"107":{"start":{"line":173,"column":12},"end":{"line":173,"column":33}},"108":{"start":{"line":177,"column":8},"end":{"line":179,"column":9}},"109":{"start":{"line":178,"column":12},"end":{"line":178,"column":33}},"110":{"start":{"line":180,"column":8},"end":{"line":182,"column":9}},"111":{"start":{"line":181,"column":12},"end":{"line":181,"column":31}},"112":{"start":{"line":183,"column":8},"end":{"line":185,"column":9}},"113":{"start":{"line":184,"column":12},"end":{"line":184,"column":39}},"114":{"start":{"line":186,"column":8},"end":{"line":188,"column":9}},"115":{"start":{"line":187,"column":12},"end":{"line":187,"column":34}},"116":{"start":{"line":189,"column":8},"end":{"line":191,"column":9}},"117":{"start":{"line":190,"column":12},"end":{"line":190,"column":33}},"118":{"start":{"line":194,"column":0},"end":{"line":194,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":4},"end":{"line":4,"column":5}},"loc":{"start":{"line":4,"column":36},"end":{"line":22,"column":5}},"line":4},"1":{"name":"(anonymous_1)","decl":{"start":{"line":23,"column":4},"end":{"line":23,"column":5}},"loc":{"start":{"line":23,"column":44},"end":{"line":41,"column":5}},"line":23},"2":{"name":"(anonymous_2)","decl":{"start":{"line":42,"column":4},"end":{"line":42,"column":5}},"loc":{"start":{"line":42,"column":43},"end":{"line":51,"column":5}},"line":42},"3":{"name":"(anonymous_3)","decl":{"start":{"line":52,"column":4},"end":{"line":52,"column":5}},"loc":{"start":{"line":52,"column":43},"end":{"line":61,"column":5}},"line":52},"4":{"name":"(anonymous_4)","decl":{"start":{"line":62,"column":4},"end":{"line":62,"column":5}},"loc":{"start":{"line":62,"column":43},"end":{"line":71,"column":5}},"line":62},"5":{"name":"(anonymous_5)","decl":{"start":{"line":72,"column":4},"end":{"line":72,"column":5}},"loc":{"start":{"line":72,"column":45},"end":{"line":123,"column":5}},"line":72},"6":{"name":"(anonymous_6)","decl":{"start":{"line":124,"column":4},"end":{"line":124,"column":5}},"loc":{"start":{"line":124,"column":39},"end":{"line":147,"column":5}},"line":124},"7":{"name":"(anonymous_7)","decl":{"start":{"line":148,"column":4},"end":{"line":148,"column":5}},"loc":{"start":{"line":148,"column":37},"end":{"line":158,"column":5}},"line":148},"8":{"name":"(anonymous_8)","decl":{"start":{"line":159,"column":4},"end":{"line":159,"column":5}},"loc":{"start":{"line":159,"column":31},"end":{"line":175,"column":5}},"line":159},"9":{"name":"(anonymous_9)","decl":{"start":{"line":176,"column":4},"end":{"line":176,"column":5}},"loc":{"start":{"line":176,"column":31},"end":{"line":192,"column":5}},"line":176}},"branchMap":{"0":{"loc":{"start":{"line":7,"column":8},"end":{"line":21,"column":9}},"type":"if","locations":[{"start":{"line":7,"column":8},"end":{"line":21,"column":9}},{"start":{"line":7,"column":8},"end":{"line":21,"column":9}}],"line":7},"1":{"loc":{"start":{"line":7,"column":12},"end":{"line":7,"column":56}},"type":"binary-expr","locations":[{"start":{"line":7,"column":12},"end":{"line":7,"column":24}},{"start":{"line":7,"column":28},"end":{"line":7,"column":40}},{"start":{"line":7,"column":44},"end":{"line":7,"column":56}}],"line":7},"2":{"loc":{"start":{"line":10,"column":13},"end":{"line":21,"column":9}},"type":"if","locations":[{"start":{"line":10,"column":13},"end":{"line":21,"column":9}},{"start":{"line":10,"column":13},"end":{"line":21,"column":9}}],"line":10},"3":{"loc":{"start":{"line":13,"column":13},"end":{"line":21,"column":9}},"type":"if","locations":[{"start":{"line":13,"column":13},"end":{"line":21,"column":9}},{"start":{"line":13,"column":13},"end":{"line":21,"column":9}}],"line":13},"4":{"loc":{"start":{"line":16,"column":13},"end":{"line":21,"column":9}},"type":"if","locations":[{"start":{"line":16,"column":13},"end":{"line":21,"column":9}},{"start":{"line":16,"column":13},"end":{"line":21,"column":9}}],"line":16},"5":{"loc":{"start":{"line":16,"column":17},"end":{"line":16,"column":46}},"type":"binary-expr","locations":[{"start":{"line":16,"column":17},"end":{"line":16,"column":30}},{"start":{"line":16,"column":34},"end":{"line":16,"column":46}}],"line":16},"6":{"loc":{"start":{"line":28,"column":8},"end":{"line":40,"column":9}},"type":"switch","locations":[{"start":{"line":29,"column":12},"end":{"line":31,"column":22}},{"start":{"line":32,"column":12},"end":{"line":34,"column":22}},{"start":{"line":35,"column":12},"end":{"line":37,"column":22}},{"start":{"line":38,"column":12},"end":{"line":39,"column":26}}],"line":28},"7":{"loc":{"start":{"line":46,"column":12},"end":{"line":48,"column":13}},"type":"if","locations":[{"start":{"line":46,"column":12},"end":{"line":48,"column":13}},{"start":{"line":46,"column":12},"end":{"line":48,"column":13}}],"line":46},"8":{"loc":{"start":{"line":56,"column":12},"end":{"line":58,"column":13}},"type":"if","locations":[{"start":{"line":56,"column":12},"end":{"line":58,"column":13}},{"start":{"line":56,"column":12},"end":{"line":58,"column":13}}],"line":56},"9":{"loc":{"start":{"line":66,"column":12},"end":{"line":68,"column":13}},"type":"if","locations":[{"start":{"line":66,"column":12},"end":{"line":68,"column":13}},{"start":{"line":66,"column":12},"end":{"line":68,"column":13}}],"line":66},"10":{"loc":{"start":{"line":78,"column":8},"end":{"line":121,"column":9}},"type":"if","locations":[{"start":{"line":78,"column":8},"end":{"line":121,"column":9}},{"start":{"line":78,"column":8},"end":{"line":121,"column":9}}],"line":78},"11":{"loc":{"start":{"line":81,"column":16},"end":{"line":83,"column":17}},"type":"if","locations":[{"start":{"line":81,"column":16},"end":{"line":83,"column":17}},{"start":{"line":81,"column":16},"end":{"line":83,"column":17}}],"line":81},"12":{"loc":{"start":{"line":86,"column":13},"end":{"line":121,"column":9}},"type":"if","locations":[{"start":{"line":86,"column":13},"end":{"line":121,"column":9}},{"start":{"line":86,"column":13},"end":{"line":121,"column":9}}],"line":86},"13":{"loc":{"start":{"line":86,"column":17},"end":{"line":86,"column":86}},"type":"binary-expr","locations":[{"start":{"line":86,"column":17},"end":{"line":86,"column":39}},{"start":{"line":86,"column":43},"end":{"line":86,"column":86}}],"line":86},"14":{"loc":{"start":{"line":90,"column":16},"end":{"line":92,"column":17}},"type":"if","locations":[{"start":{"line":90,"column":16},"end":{"line":92,"column":17}},{"start":{"line":90,"column":16},"end":{"line":92,"column":17}}],"line":90},"15":{"loc":{"start":{"line":95,"column":13},"end":{"line":121,"column":9}},"type":"if","locations":[{"start":{"line":95,"column":13},"end":{"line":121,"column":9}},{"start":{"line":95,"column":13},"end":{"line":121,"column":9}}],"line":95},"16":{"loc":{"start":{"line":97,"column":12},"end":{"line":110,"column":13}},"type":"if","locations":[{"start":{"line":97,"column":12},"end":{"line":110,"column":13}},{"start":{"line":97,"column":12},"end":{"line":110,"column":13}}],"line":97},"17":{"loc":{"start":{"line":106,"column":20},"end":{"line":108,"column":21}},"type":"if","locations":[{"start":{"line":106,"column":20},"end":{"line":108,"column":21}},{"start":{"line":106,"column":20},"end":{"line":108,"column":21}}],"line":106},"18":{"loc":{"start":{"line":112,"column":13},"end":{"line":121,"column":9}},"type":"if","locations":[{"start":{"line":112,"column":13},"end":{"line":121,"column":9}},{"start":{"line":112,"column":13},"end":{"line":121,"column":9}}],"line":112},"19":{"loc":{"start":{"line":117,"column":16},"end":{"line":119,"column":17}},"type":"if","locations":[{"start":{"line":117,"column":16},"end":{"line":119,"column":17}},{"start":{"line":117,"column":16},"end":{"line":119,"column":17}}],"line":117},"20":{"loc":{"start":{"line":127,"column":8},"end":{"line":145,"column":9}},"type":"if","locations":[{"start":{"line":127,"column":8},"end":{"line":145,"column":9}},{"start":{"line":127,"column":8},"end":{"line":145,"column":9}}],"line":127},"21":{"loc":{"start":{"line":133,"column":13},"end":{"line":145,"column":9}},"type":"if","locations":[{"start":{"line":133,"column":13},"end":{"line":145,"column":9}},{"start":{"line":133,"column":13},"end":{"line":145,"column":9}}],"line":133},"22":{"loc":{"start":{"line":140,"column":20},"end":{"line":142,"column":21}},"type":"if","locations":[{"start":{"line":140,"column":20},"end":{"line":142,"column":21}},{"start":{"line":140,"column":20},"end":{"line":142,"column":21}}],"line":140},"23":{"loc":{"start":{"line":153,"column":12},"end":{"line":155,"column":13}},"type":"if","locations":[{"start":{"line":153,"column":12},"end":{"line":155,"column":13}},{"start":{"line":153,"column":12},"end":{"line":155,"column":13}}],"line":153},"24":{"loc":{"start":{"line":160,"column":8},"end":{"line":162,"column":9}},"type":"if","locations":[{"start":{"line":160,"column":8},"end":{"line":162,"column":9}},{"start":{"line":160,"column":8},"end":{"line":162,"column":9}}],"line":160},"25":{"loc":{"start":{"line":163,"column":8},"end":{"line":165,"column":9}},"type":"if","locations":[{"start":{"line":163,"column":8},"end":{"line":165,"column":9}},{"start":{"line":163,"column":8},"end":{"line":165,"column":9}}],"line":163},"26":{"loc":{"start":{"line":166,"column":8},"end":{"line":168,"column":9}},"type":"if","locations":[{"start":{"line":166,"column":8},"end":{"line":168,"column":9}},{"start":{"line":166,"column":8},"end":{"line":168,"column":9}}],"line":166},"27":{"loc":{"start":{"line":169,"column":8},"end":{"line":171,"column":9}},"type":"if","locations":[{"start":{"line":169,"column":8},"end":{"line":171,"column":9}},{"start":{"line":169,"column":8},"end":{"line":171,"column":9}}],"line":169},"28":{"loc":{"start":{"line":172,"column":8},"end":{"line":174,"column":9}},"type":"if","locations":[{"start":{"line":172,"column":8},"end":{"line":174,"column":9}},{"start":{"line":172,"column":8},"end":{"line":174,"column":9}}],"line":172},"29":{"loc":{"start":{"line":177,"column":8},"end":{"line":179,"column":9}},"type":"if","locations":[{"start":{"line":177,"column":8},"end":{"line":179,"column":9}},{"start":{"line":177,"column":8},"end":{"line":179,"column":9}}],"line":177},"30":{"loc":{"start":{"line":180,"column":8},"end":{"line":182,"column":9}},"type":"if","locations":[{"start":{"line":180,"column":8},"end":{"line":182,"column":9}},{"start":{"line":180,"column":8},"end":{"line":182,"column":9}}],"line":180},"31":{"loc":{"start":{"line":183,"column":8},"end":{"line":185,"column":9}},"type":"if","locations":[{"start":{"line":183,"column":8},"end":{"line":185,"column":9}},{"start":{"line":183,"column":8},"end":{"line":185,"column":9}}],"line":183},"32":{"loc":{"start":{"line":186,"column":8},"end":{"line":188,"column":9}},"type":"if","locations":[{"start":{"line":186,"column":8},"end":{"line":188,"column":9}},{"start":{"line":186,"column":8},"end":{"line":188,"column":9}}],"line":186},"33":{"loc":{"start":{"line":189,"column":8},"end":{"line":191,"column":9}},"type":"if","locations":[{"start":{"line":189,"column":8},"end":{"line":191,"column":9}},{"start":{"line":189,"column":8},"end":{"line":191,"column":9}}],"line":189}},"s":{"0":1,"1":40,"2":40,"3":40,"4":21,"5":19,"6":9,"7":10,"8":1,"9":9,"10":8,"11":1,"12":21,"13":21,"14":21,"15":21,"16":21,"17":3,"18":0,"19":15,"20":0,"21":3,"22":0,"23":0,"24":3,"25":3,"26":193836,"27":193836,"28":64616,"29":3,"30":15,"31":15,"32":783294,"33":783294,"34":68021,"35":15,"36":3,"37":3,"38":193836,"39":193836,"40":42,"41":3,"42":9,"43":9,"44":9,"45":9,"46":9,"47":9,"48":2,"49":67739,"50":67739,"51":19,"52":7,"53":2,"54":2,"55":129224,"56":129224,"57":6184,"58":5,"59":2,"60":2,"61":0,"62":0,"63":2,"64":129224,"65":129224,"66":129224,"67":1770,"68":3,"69":2,"70":2,"71":129224,"72":129224,"73":129224,"74":1115,"75":9,"76":8,"77":8,"78":8,"79":4,"80":4,"81":8,"82":4,"83":4,"84":4,"85":9,"86":4,"87":9,"88":113,"89":113,"90":8,"91":1,"92":1,"93":1,"94":1,"95":64612,"96":3,"97":1,"98":1170966,"99":1041742,"100":129224,"101":0,"102":129224,"103":0,"104":129224,"105":64612,"106":64612,"107":64612,"108":455411,"109":455411,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":1},"f":{"0":40,"1":21,"2":3,"3":15,"4":3,"5":9,"6":8,"7":1,"8":1170966,"9":455411},"b":{"0":[21,19],"1":[40,25,22],"2":[9,10],"3":[1,9],"4":[8,1],"5":[9,5],"6":[3,15,3,0],"7":[64616,129220],"8":[68021,715273],"9":[42,193794],"10":[2,7],"11":[19,67720],"12":[2,5],"13":[7,4],"14":[6184,123040],"15":[2,3],"16":[0,2],"17":[1770,127454],"18":[2,1],"19":[1115,128109],"20":[4,4],"21":[4,0],"22":[113,0],"23":[3,64609],"24":[1041742,129224],"25":[0,129224],"26":[0,129224],"27":[64612,64612],"28":[64612,0],"29":[455411,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/user/project_team147/src/model/Filter.ts","sources":["/Users/user/project_team147/src/model/Filter.ts"],"names":[],"mappings":"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","sourcesContent":["import Course from \"./Course\";\nimport Section from \"./Section\";\nimport {query} from \"express\";\nimport exp = require(\"constants\");\n\nexport default class Filter {\n\t// private filteredSections: Section[] = [];\n\n\tpublic handleFilter(sections: Section[], content: any): Section[] {\n\t\tconst keys = Object.keys(content);\n\t\tlet key = keys[0];\n// { \"GT\": {   }}\n\t\tif (key === \"GT\" || key === \"LT\" || key === \"EQ\") {\n\t\t\treturn this.applyMathFilter(content, key, sections);\n\t\t} else if (key === \"IS\") {\n\t\t\treturn this.applyStringComparator(content, sections);\n\t\t} else if (key === \"NOT\") {\n\t\t\treturn this.applyNegation(content, sections);\n\t\t} else if (key === \"AND\" || key === \"OR\") {\n\t\t\treturn this.applyLogic(content, key, sections);\n\n\t\t} else {\n\t\t\treturn sections;\n\t\t}\n\n\t}\n\n\tprivate applyMathFilter(content: any, key: string, sections: Section[]): Section[] {\n\t\tlet filterKey: any = content[key];\n\t\tlet mKey = Object.keys(filterKey)[0];\n\t\tlet bound = filterKey[mKey];\n\t\tlet mField = mKey.split(\"_\")[1];\n\n\t\tswitch (key) {\n\t\t\tcase \"LT\":\n\t\t\t\treturn this.applyLTFilter(sections, mField, bound);\n\t\t\t\tbreak;\n\t\t\tcase \"GT\":\n\t\t\t\treturn this.applyGTFilter(sections, mField, bound);\n\t\t\t\tbreak;\n\t\t\tcase \"EQ\":\n\t\t\t\treturn this.applyEQFilter(sections, mField, bound);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn [];\n\t\t}\n\t}\n\n\tprivate applyLTFilter(sections: Section[], mField: any, bound: any): Section[] {\n\t\tlet validSections: Section[] = [];\n\t\tfor (let section of sections) {\n\t\t\tlet sectField = this.getMField(mField, section);\n\t\t\tif (sectField < bound) {\n\t\t\t\tvalidSections.push(section);\n\t\t\t}\n\t\t}\n\t\treturn validSections;\n\t}\n\n\tprivate applyGTFilter(sections: Section[], mField: any, bound: any): Section[] {\n\t\tlet validSections: Section[] = [];\n\t\tfor (let section of sections) {\n\t\t\tlet sectField = this.getMField(mField, section);\n\t\t\tif (sectField > bound) {\n\t\t\t\tvalidSections.push(section);\n\t\t\t}\n\t\t}\n\t\treturn validSections;\n\t}\n\n\tprivate applyEQFilter(sections: Section[], mField: any, bound: any): Section[] {\n\t\tlet validSections: Section[] = [];\n\t\tfor (let section of sections) {\n\t\t\tlet sectField = this.getMField(mField, section);\n\t\t\tif (sectField === bound) {\n\t\t\t\tvalidSections.push(section);\n\t\t\t}\n\t\t}\n\t\treturn validSections;\n\t}\n\n\tprivate applyStringComparator(content: any, sections: Section[]): Section[] { // *, cp*, *ps*, *sc\n\t\tlet validSections: Section[] = [];\n\t\tlet filterKey: any = content[\"IS\"];\n\t\tlet sKey = Object.keys(filterKey)[0];\n\t\tlet inputString: string = filterKey[sKey];\n\t\tlet sField = sKey.split(\"_\")[1];\n\t\tif (!inputString.includes(\"*\")) { // no asterisk\n\t\t\tfor (let section of sections) {\n\t\t\t\tconst sectField = this.getSField(sField, section); // \"cpsc\"\n\t\t\t\tif (sectField === inputString) {\n\t\t\t\t\tvalidSections.push(section);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (inputString[0] === \"*\" && inputString[inputString.length - 1] === \"*\") { // *abc*\n\t\t\tconst expectedString = inputString.replace(/\\*/g, \"\");\n\t\t\tfor (let section of sections) {\n\t\t\t\tconst sectField = this.getSField(sField, section); // \"cpsc\"\n\t\t\t\tif (sectField.includes(expectedString)) {\n\t\t\t\t\tvalidSections.push(section);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (inputString[0] === \"*\") { // *sc or *\n\t\t\tconst expectedString = inputString.replace(/\\*/g, \"\"); // \"\" or \"sc\"\n\t\t\tif (expectedString.length === 0) { // empty string\n\t\t\t\tfor  (const section of sections) {\n\t\t\t\t\tvalidSections.push(section);\n\t\t\t\t}\n\t\t\t} else {  // \"sc\"\n\t\t\t\tfor (const section of sections) {\n\t\t\t\t\tlet sectField: string = this.getSField(sField, section);\n\t\t\t\t\tlet toCompare = sectField.substring(sectField.length - expectedString.length, sectField.length);\n\t\t\t\t\tif (expectedString === toCompare) {\n\t\t\t\t\t\tvalidSections.push(section);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (inputString[inputString.length - 1] === \"*\") { // cp*\n\t\t\tconst expectedString = inputString.replace(/\\*/g, \"\");\n\t\t\tfor (const section of sections) {\n\t\t\t\tlet sectField: string = this.getSField(sField, section);\n\t\t\t\tlet toCompare = sectField.substring(0, inputString.length - 1);\n\t\t\t\tif (expectedString === toCompare) {\n\t\t\t\t\tvalidSections.push(section);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn validSections;\n\t}\n\n\t// } else if (inputString[0] === \"*\" && inputString[inputString.length - 1] === \"*\") { // *abc*\n\t// \tconst newString = inputString.replace(\"*\", \"\");\n\t// \tif (sectField.contains) {\n\t//\n\t// \t}\n\t// } else if (inputString[0] === \"*\") { // *sc or *\n\t// \tconst newString = inputString.replace(\"*\", \"\"); // \"\" or \"sc\"\n\t// \t//splice off the sectField's strong from index (sectField.length - newString.length) to the end of sectField.length) and store it.\n\t// \t// If the stored value === newString, then push to valid sections\n\t// \tconst toCompareWith: string = sectField.substring(sectField.length-newString.length, sectField.length-1);\n\t// \tif (newString.length === 0) { // \"*\"\n\t// \t\tvalidSections.push(sectField);\n\t// \t} else if (newString === toCompareWith) {\n\t// \t\tvalidSections.push(section);\n\t// \t}\n\t// for (let section of sections) {\n\t// \tconst sectField = this.getSField(sField, section); // \"cpsc\"\n\t// \t\tnewString.length -1\n\t// \t\tsectField.length\n\t// \t\tif (sectField.contains(newString)) {\n\t// \t\t} else {\n\t//\n\t// \t\t} // check just star\n\t// \t}\n\t// \t// if ab*, check that starts with as\n\t// \t// if *ab*, check that includes ab back to back\n\t// \t// if *ab, check that the last index minus length and after equals ab (hardest case)\n\t// \treturn validSections;\n\t// }\n\tprivate applyLogic(content: any, key: any, sections: Section[]): Section[] {\n\t\tlet results: Section[] = [];\n\t\tlet logicArray = content[key];\n\t\tif (key === \"AND\") {\n\t\t\tresults = sections;\n\t\t\tfor (let filter of logicArray) {\n\t\t\t\tresults = this.handleFilter(results, filter);\n\t\t\t}\n\t\t} else if (key === \"OR\") {\n\t\t\tlet listOfFilteredSections = [];\n\t\t\tfor (let filter of logicArray) {\n\t\t\t\tlistOfFilteredSections.push(this.handleFilter(sections, filter));\n\t\t\t}\n\t\t\tfor (const filteredSection of listOfFilteredSections) {\n\t\t\t\tfor (const sec of filteredSection) {\n\t\t\t\t\tif (!results.includes(sec)) {\n\t\t\t\t\t\tresults.push(sec);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn results;\n\t}\n\n\tprivate applyNegation(content: any, sections: Section[]): Section[] {\n\t\tlet validSections: Section[] = [];\n\t\tlet notFilter = content[\"NOT\"];\n\t\tlet subFilter: Section[] = this.handleFilter(sections, notFilter);\n\t\tfor (let section of sections) {\n\t\t\tif (!(subFilter.includes(section))) {\n\t\t\t\tvalidSections.push(section);\n\t\t\t}\n\t\t}\n\t\treturn validSections;\n\t}\n\n\tprivate getMField(mField: any, section: any) {\n\t\tif (mField === \"avg\") {\n\t\t\treturn section._avg;\n\t\t}\n\t\tif (mField === \"pass\") {\n\t\t\treturn section._pass;\n\t\t}\n\t\tif (mField === \"fail\") {\n\t\t\treturn section._fail;\n\t\t}\n\t\tif (mField === \"audit\") {\n\t\t\treturn section._audit;\n\t\t}\n\t\tif (mField === \"year\") {\n\t\t\treturn section._year;\n\t\t}\n\t}\n\n\tprivate getSField(sField: any, section: any) {\n\t\tif (sField === \"dept\") {\n\t\t\treturn section._dept;\n\t\t}\n\t\tif (sField === \"id\") {\n\t\t\treturn section._id;\n\t\t}\n\t\tif (sField === \"instructor\") {\n\t\t\treturn section._instructor;\n\t\t}\n\t\tif (sField === \"title\") {\n\t\t\treturn section._title;\n\t\t}\n\t\tif (sField === \"uuid\") {\n\t\t\treturn section._uuid;\n\t\t}\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"59bc1d06a70f2b11ed851a50f2d11ed039b4e682","contentHash":"443efb6e68443c5de4ff7878fd5ebf851f61ba4a11eb75ef4d71071054013e3b"},"/Users/user/project_team147/src/model/QuerySorter.ts":{"path":"/Users/user/project_team147/src/model/QuerySorter.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":5,"column":8},"end":{"line":5,"column":27}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":33}},"3":{"start":{"line":9,"column":8},"end":{"line":43,"column":9}},"4":{"start":{"line":11,"column":16},"end":{"line":11,"column":64}},"5":{"start":{"line":11,"column":46},"end":{"line":11,"column":61}},"6":{"start":{"line":12,"column":16},"end":{"line":12,"column":22}},"7":{"start":{"line":14,"column":16},"end":{"line":14,"column":66}},"8":{"start":{"line":14,"column":46},"end":{"line":14,"column":63}},"9":{"start":{"line":15,"column":16},"end":{"line":15,"column":22}},"10":{"start":{"line":17,"column":16},"end":{"line":17,"column":66}},"11":{"start":{"line":17,"column":46},"end":{"line":17,"column":63}},"12":{"start":{"line":18,"column":16},"end":{"line":18,"column":22}},"13":{"start":{"line":20,"column":16},"end":{"line":20,"column":68}},"14":{"start":{"line":20,"column":46},"end":{"line":20,"column":65}},"15":{"start":{"line":21,"column":16},"end":{"line":21,"column":22}},"16":{"start":{"line":23,"column":16},"end":{"line":23,"column":66}},"17":{"start":{"line":23,"column":46},"end":{"line":23,"column":63}},"18":{"start":{"line":24,"column":16},"end":{"line":24,"column":22}},"19":{"start":{"line":26,"column":16},"end":{"line":26,"column":79}},"20":{"start":{"line":26,"column":46},"end":{"line":26,"column":76}},"21":{"start":{"line":27,"column":16},"end":{"line":27,"column":22}},"22":{"start":{"line":29,"column":16},"end":{"line":29,"column":75}},"23":{"start":{"line":29,"column":46},"end":{"line":29,"column":72}},"24":{"start":{"line":30,"column":16},"end":{"line":30,"column":22}},"25":{"start":{"line":32,"column":16},"end":{"line":32,"column":91}},"26":{"start":{"line":32,"column":46},"end":{"line":32,"column":88}},"27":{"start":{"line":33,"column":16},"end":{"line":33,"column":22}},"28":{"start":{"line":35,"column":16},"end":{"line":35,"column":81}},"29":{"start":{"line":35,"column":46},"end":{"line":35,"column":78}},"30":{"start":{"line":36,"column":16},"end":{"line":36,"column":22}},"31":{"start":{"line":38,"column":16},"end":{"line":38,"column":99}},"32":{"start":{"line":38,"column":45},"end":{"line":38,"column":97}},"33":{"start":{"line":39,"column":16},"end":{"line":39,"column":22}},"34":{"start":{"line":41,"column":16},"end":{"line":41,"column":50}},"35":{"start":{"line":42,"column":16},"end":{"line":42,"column":22}},"36":{"start":{"line":44,"column":8},"end":{"line":44,"column":29}},"37":{"start":{"line":47,"column":0},"end":{"line":47,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":4},"end":{"line":4,"column":5}},"loc":{"start":{"line":4,"column":33},"end":{"line":7,"column":5}},"line":4},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":11},"end":{"line":45,"column":5}},"line":8},"2":{"name":"(anonymous_2)","decl":{"start":{"line":11,"column":35},"end":{"line":11,"column":36}},"loc":{"start":{"line":11,"column":46},"end":{"line":11,"column":61}},"line":11},"3":{"name":"(anonymous_3)","decl":{"start":{"line":14,"column":35},"end":{"line":14,"column":36}},"loc":{"start":{"line":14,"column":46},"end":{"line":14,"column":63}},"line":14},"4":{"name":"(anonymous_4)","decl":{"start":{"line":17,"column":35},"end":{"line":17,"column":36}},"loc":{"start":{"line":17,"column":46},"end":{"line":17,"column":63}},"line":17},"5":{"name":"(anonymous_5)","decl":{"start":{"line":20,"column":35},"end":{"line":20,"column":36}},"loc":{"start":{"line":20,"column":46},"end":{"line":20,"column":65}},"line":20},"6":{"name":"(anonymous_6)","decl":{"start":{"line":23,"column":35},"end":{"line":23,"column":36}},"loc":{"start":{"line":23,"column":46},"end":{"line":23,"column":63}},"line":23},"7":{"name":"(anonymous_7)","decl":{"start":{"line":26,"column":35},"end":{"line":26,"column":36}},"loc":{"start":{"line":26,"column":46},"end":{"line":26,"column":76}},"line":26},"8":{"name":"(anonymous_8)","decl":{"start":{"line":29,"column":35},"end":{"line":29,"column":36}},"loc":{"start":{"line":29,"column":46},"end":{"line":29,"column":72}},"line":29},"9":{"name":"(anonymous_9)","decl":{"start":{"line":32,"column":35},"end":{"line":32,"column":36}},"loc":{"start":{"line":32,"column":46},"end":{"line":32,"column":88}},"line":32},"10":{"name":"(anonymous_10)","decl":{"start":{"line":35,"column":35},"end":{"line":35,"column":36}},"loc":{"start":{"line":35,"column":46},"end":{"line":35,"column":78}},"line":35},"11":{"name":"(anonymous_11)","decl":{"start":{"line":38,"column":35},"end":{"line":38,"column":36}},"loc":{"start":{"line":38,"column":45},"end":{"line":38,"column":97}},"line":38}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":8},"end":{"line":43,"column":9}},"type":"switch","locations":[{"start":{"line":10,"column":12},"end":{"line":12,"column":22}},{"start":{"line":13,"column":12},"end":{"line":15,"column":22}},{"start":{"line":16,"column":12},"end":{"line":18,"column":22}},{"start":{"line":19,"column":12},"end":{"line":21,"column":22}},{"start":{"line":22,"column":12},"end":{"line":24,"column":22}},{"start":{"line":25,"column":12},"end":{"line":27,"column":22}},{"start":{"line":28,"column":12},"end":{"line":30,"column":22}},{"start":{"line":31,"column":12},"end":{"line":33,"column":22}},{"start":{"line":34,"column":12},"end":{"line":36,"column":22}},{"start":{"line":37,"column":12},"end":{"line":39,"column":22}},{"start":{"line":40,"column":12},"end":{"line":42,"column":22}}],"line":9}},"s":{"0":1,"1":18,"2":18,"3":18,"4":17,"5":10759,"6":17,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":80,"33":1,"34":0,"35":0,"36":18,"37":1},"f":{"0":18,"1":18,"2":10759,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":80},"b":{"0":[17,0,0,0,0,0,0,0,0,1,0]},"inputSourceMap":{"version":3,"file":"/Users/user/project_team147/src/model/QuerySorter.ts","sources":["/Users/user/project_team147/src/model/QuerySorter.ts"],"names":[],"mappings":";;AACA,MAAqB,MAAM;IAG1B,YAAY,KAAa,EAAE,QAAmB;QAC7C,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC1B,CAAC;IAEM,IAAI;QAIV,QAAQ,IAAI,CAAC,KAAK,EAAE;YACnB,KAAK,KAAK;gBACT,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAU,EAAE,CAAU,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBAClE,MAAM;YACP,KAAK,MAAM;gBACV,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAU,EAAE,CAAU,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACpE,MAAM;YACP,KAAK,MAAM;gBACV,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAU,EAAE,CAAU,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACpE,MAAM;YACP,KAAK,OAAO;gBACX,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAU,EAAE,CAAU,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACtE,MAAM;YACP,KAAK,MAAM;gBACV,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAU,EAAE,CAAU,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACpE,MAAM;YACP,KAAK,MAAM;gBACV,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAU,EAAE,CAAU,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACjF,MAAM;YACP,KAAK,IAAI;gBACR,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAU,EAAE,CAAU,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC7E,MAAM;YACP,KAAK,YAAY;gBAChB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAU,EAAE,CAAU,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;gBAC7F,MAAM;YACP,KAAK,OAAO;gBACX,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAU,EAAE,CAAU,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBACnF,MAAM;YACP,KAAK,MAAM;gBACV,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAU,EAAE,CAAU,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;gBAErG,MAAM;YACP;gBACC,OAAO,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;gBAClC,MAAM;SACP;QACD,OAAO,IAAI,CAAC,QAAQ,CAAC;IACtB,CAAC;CAkDD;AAnGD,yBAmGC","sourcesContent":["import Section from \"./Section\";\nexport default class Sorter {\n\tprivate readonly order;\n\tprivate sections: Section[];\n\tconstructor(order: string, sections: Section[]) {\n\t\tthis.order = order;\n\t\tthis.sections = sections;\n\t}\n\n\tpublic sort(): Section[] {\n\t\t// let kjfd = typeof \"1234\";\n\t\t// let qq = typeof this.sections[0]._uuid;\n\t\t// let bb = this.sections[0]._uuid.localeCompare(this.sections[1]._uuid);\n\t\tswitch (this.order) {\n\t\t\tcase \"avg\":\n\t\t\t\tthis.sections.sort((a: Section, b: Section) => (a._avg - b._avg));\n\t\t\t\tbreak;\n\t\t\tcase \"pass\":\n\t\t\t\tthis.sections.sort((a: Section, b: Section) => (a._pass - b._pass));\n\t\t\t\tbreak;\n\t\t\tcase \"fail\":\n\t\t\t\tthis.sections.sort((a: Section, b: Section) => (a._fail - b._fail));\n\t\t\t\tbreak;\n\t\t\tcase \"audit\":\n\t\t\t\tthis.sections.sort((a: Section, b: Section) => (a._audit - b._audit));\n\t\t\t\tbreak;\n\t\t\tcase \"year\":\n\t\t\t\tthis.sections.sort((a: Section, b: Section) => (a._year - b._year));\n\t\t\t\tbreak;\n\t\t\tcase \"dept\":\n\t\t\t\tthis.sections.sort((a: Section, b: Section) => (a._dept.localeCompare(b._dept)));\n\t\t\t\tbreak;\n\t\t\tcase \"id\":\n\t\t\t\tthis.sections.sort((a: Section, b: Section) => (a._id.localeCompare(b._id)));\n\t\t\t\tbreak;\n\t\t\tcase \"instructor\":\n\t\t\t\tthis.sections.sort((a: Section, b: Section) => (a._instructor.localeCompare(b._instructor)));\n\t\t\t\tbreak;\n\t\t\tcase \"title\":\n\t\t\t\tthis.sections.sort((a: Section, b: Section) => (a._title.localeCompare(b._title)));\n\t\t\t\tbreak;\n\t\t\tcase \"uuid\":\n\t\t\t\tthis.sections.sort((a: Section, b: Section) => a._uuid.toString().localeCompare(b._uuid.toString()));\n\t\t\t\t// this.sections.sort((a: Section, b: Section) => (parseInt(a._uuid, 10) - parseInt(b._uuid, 10)));\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.error(\"unexpected error\");\n\t\t\t\tbreak;\n\t\t}\n\t\treturn this.sections;\n\t}\n\t// \tprivate sortIDAlphabetically() {\n// \t\tthis.sections.sort();\n// \t\treturn [];\n// \t}\n//\n// \tprivate sortInstructorAlphabetically() {\n// \t\treturn [];\n// \t}\n//\n// \tprivate sortTitleAlphabetically() {\n// \t\treturn [];\n// \t}\n//\n// \tprivate sortUUIDAlphabetically() {\n// \t\treturn [];\n// \t}\n//\n//\n// \tprivate partition(arr: Section[], start: any, end: any, type: string){\n// \t\t// Taking the last element as the pivot\n// \t\tconst pivotValue = arr[end];\n// \t\tlet pivotIndex = start;\n// \t\tfor (let i = start; i < end; i++) {\n// \t\t\tif (arr[i] < pivotValue) {\n// \t\t\t\t// Swapping elements\n// \t\t\t\t[arr[i], arr[pivotIndex]] = [arr[pivotIndex], arr[i]];\n// \t\t\t\t// Moving to next element\n// \t\t\t\tpivotIndex++;\n// \t\t\t}\n// \t\t}\n//\n// \t\t// Putting the pivot value in the middle\n// \t\t[arr[pivotIndex], arr[end]] = [arr[end], arr[pivotIndex]];\n// \t\treturn pivotIndex;\n// \t}\n//\n// \tprivate quickSort(arr: Section[], start: any, end: any, type: string) {\n// \t\t// Base case or terminating case\n// \t\tif (start >= end) {\n// \t\t\treturn;\n// \t\t}\n//\n// \t\t// Returns pivotIndex\n// \t\tlet index = this.partition(arr, start, end, type);\n//\n// \t\t// Recursively apply the same logic to the left and right subarrays\n// \t\tthis.quickSort(arr, start, index - 1, type);\n// \t\tthis.quickSort(arr, index + 1, end, type);\n// \t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a42840a44d952d0cf5eac12a6b12bb6533f35756","contentHash":"d9cb89123bba1d672e471d51ca9ac59746b6aab49f20749fe157aae21878eaf5"},"/Users/user/project_team147/src/model/QueryValidator.ts":{"path":"/Users/user/project_team147/src/model/QueryValidator.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":4,"column":17},"end":{"line":4,"column":19}},"2":{"start":{"line":7,"column":8},"end":{"line":9,"column":9}},"3":{"start":{"line":8,"column":12},"end":{"line":8,"column":25}},"4":{"start":{"line":12,"column":8},"end":{"line":14,"column":9}},"5":{"start":{"line":13,"column":12},"end":{"line":13,"column":25}},"6":{"start":{"line":15,"column":8},"end":{"line":22,"column":11}},"7":{"start":{"line":16,"column":12},"end":{"line":18,"column":13}},"8":{"start":{"line":17,"column":16},"end":{"line":17,"column":35}},"9":{"start":{"line":19,"column":12},"end":{"line":21,"column":13}},"10":{"start":{"line":20,"column":16},"end":{"line":20,"column":37}},"11":{"start":{"line":23,"column":25},"end":{"line":23,"column":45}},"12":{"start":{"line":24,"column":8},"end":{"line":26,"column":9}},"13":{"start":{"line":25,"column":12},"end":{"line":25,"column":25}},"14":{"start":{"line":27,"column":8},"end":{"line":29,"column":9}},"15":{"start":{"line":28,"column":12},"end":{"line":28,"column":25}},"16":{"start":{"line":30,"column":25},"end":{"line":30,"column":43}},"17":{"start":{"line":31,"column":8},"end":{"line":33,"column":9}},"18":{"start":{"line":32,"column":12},"end":{"line":32,"column":25}},"19":{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},"20":{"start":{"line":35,"column":12},"end":{"line":35,"column":24}},"21":{"start":{"line":37,"column":24},"end":{"line":37,"column":45}},"22":{"start":{"line":38,"column":8},"end":{"line":40,"column":9}},"23":{"start":{"line":39,"column":12},"end":{"line":39,"column":25}},"24":{"start":{"line":41,"column":8},"end":{"line":41,"column":20}},"25":{"start":{"line":44,"column":27},"end":{"line":44,"column":46}},"26":{"start":{"line":45,"column":8},"end":{"line":47,"column":9}},"27":{"start":{"line":46,"column":12},"end":{"line":46,"column":25}},"28":{"start":{"line":48,"column":25},"end":{"line":48,"column":38}},"29":{"start":{"line":49,"column":8},"end":{"line":52,"column":9}},"30":{"start":{"line":51,"column":12},"end":{"line":51,"column":25}},"31":{"start":{"line":53,"column":8},"end":{"line":57,"column":9}},"32":{"start":{"line":54,"column":12},"end":{"line":56,"column":13}},"33":{"start":{"line":55,"column":16},"end":{"line":55,"column":29}},"34":{"start":{"line":58,"column":8},"end":{"line":62,"column":9}},"35":{"start":{"line":59,"column":12},"end":{"line":61,"column":13}},"36":{"start":{"line":60,"column":16},"end":{"line":60,"column":29}},"37":{"start":{"line":63,"column":8},"end":{"line":67,"column":9}},"38":{"start":{"line":64,"column":12},"end":{"line":66,"column":13}},"39":{"start":{"line":65,"column":16},"end":{"line":65,"column":29}},"40":{"start":{"line":68,"column":8},"end":{"line":72,"column":9}},"41":{"start":{"line":69,"column":12},"end":{"line":71,"column":13}},"42":{"start":{"line":70,"column":16},"end":{"line":70,"column":29}},"43":{"start":{"line":73,"column":8},"end":{"line":73,"column":20}},"44":{"start":{"line":76,"column":20},"end":{"line":76,"column":34}},"45":{"start":{"line":77,"column":8},"end":{"line":79,"column":9}},"46":{"start":{"line":78,"column":12},"end":{"line":78,"column":25}},"47":{"start":{"line":80,"column":8},"end":{"line":82,"column":9}},"48":{"start":{"line":81,"column":12},"end":{"line":81,"column":25}},"49":{"start":{"line":83,"column":8},"end":{"line":87,"column":9}},"50":{"start":{"line":84,"column":12},"end":{"line":86,"column":13}},"51":{"start":{"line":85,"column":16},"end":{"line":85,"column":29}},"52":{"start":{"line":88,"column":8},"end":{"line":88,"column":20}},"53":{"start":{"line":91,"column":24},"end":{"line":91,"column":38}},"54":{"start":{"line":92,"column":8},"end":{"line":94,"column":9}},"55":{"start":{"line":93,"column":12},"end":{"line":93,"column":25}},"56":{"start":{"line":95,"column":19},"end":{"line":95,"column":44}},"57":{"start":{"line":96,"column":21},"end":{"line":96,"column":36}},"58":{"start":{"line":97,"column":8},"end":{"line":99,"column":9}},"59":{"start":{"line":98,"column":12},"end":{"line":98,"column":25}},"60":{"start":{"line":100,"column":8},"end":{"line":102,"column":9}},"61":{"start":{"line":101,"column":12},"end":{"line":101,"column":25}},"62":{"start":{"line":103,"column":8},"end":{"line":103,"column":20}},"63":{"start":{"line":106,"column":23},"end":{"line":106,"column":35}},"64":{"start":{"line":107,"column":8},"end":{"line":109,"column":9}},"65":{"start":{"line":108,"column":12},"end":{"line":108,"column":25}},"66":{"start":{"line":110,"column":23},"end":{"line":110,"column":47}},"67":{"start":{"line":111,"column":8},"end":{"line":113,"column":9}},"68":{"start":{"line":112,"column":12},"end":{"line":112,"column":25}},"69":{"start":{"line":114,"column":22},"end":{"line":114,"column":40}},"70":{"start":{"line":115,"column":22},"end":{"line":115,"column":38}},"71":{"start":{"line":116,"column":8},"end":{"line":118,"column":9}},"72":{"start":{"line":117,"column":12},"end":{"line":117,"column":25}},"73":{"start":{"line":119,"column":8},"end":{"line":119,"column":20}},"74":{"start":{"line":122,"column":26},"end":{"line":122,"column":39}},"75":{"start":{"line":123,"column":8},"end":{"line":125,"column":9}},"76":{"start":{"line":124,"column":12},"end":{"line":124,"column":25}},"77":{"start":{"line":126,"column":8},"end":{"line":128,"column":9}},"78":{"start":{"line":127,"column":12},"end":{"line":127,"column":25}},"79":{"start":{"line":129,"column":8},"end":{"line":129,"column":20}},"80":{"start":{"line":132,"column":24},"end":{"line":132,"column":42}},"81":{"start":{"line":133,"column":8},"end":{"line":135,"column":9}},"82":{"start":{"line":134,"column":12},"end":{"line":134,"column":25}},"83":{"start":{"line":136,"column":8},"end":{"line":138,"column":9}},"84":{"start":{"line":137,"column":12},"end":{"line":137,"column":25}},"85":{"start":{"line":139,"column":8},"end":{"line":151,"column":9}},"86":{"start":{"line":140,"column":12},"end":{"line":142,"column":13}},"87":{"start":{"line":141,"column":16},"end":{"line":141,"column":29}},"88":{"start":{"line":143,"column":12},"end":{"line":143,"column":53}},"89":{"start":{"line":144,"column":12},"end":{"line":146,"column":13}},"90":{"start":{"line":145,"column":16},"end":{"line":145,"column":29}},"91":{"start":{"line":147,"column":12},"end":{"line":149,"column":13}},"92":{"start":{"line":148,"column":16},"end":{"line":148,"column":29}},"93":{"start":{"line":150,"column":12},"end":{"line":150,"column":44}},"94":{"start":{"line":152,"column":8},"end":{"line":152,"column":20}},"95":{"start":{"line":155,"column":23},"end":{"line":155,"column":39}},"96":{"start":{"line":156,"column":8},"end":{"line":158,"column":9}},"97":{"start":{"line":157,"column":12},"end":{"line":157,"column":25}},"98":{"start":{"line":159,"column":8},"end":{"line":161,"column":9}},"99":{"start":{"line":160,"column":12},"end":{"line":160,"column":25}},"100":{"start":{"line":162,"column":8},"end":{"line":164,"column":9}},"101":{"start":{"line":163,"column":12},"end":{"line":163,"column":25}},"102":{"start":{"line":165,"column":8},"end":{"line":165,"column":20}},"103":{"start":{"line":168,"column":23},"end":{"line":168,"column":45}},"104":{"start":{"line":169,"column":8},"end":{"line":171,"column":9}},"105":{"start":{"line":170,"column":12},"end":{"line":170,"column":25}},"106":{"start":{"line":172,"column":8},"end":{"line":174,"column":9}},"107":{"start":{"line":173,"column":12},"end":{"line":173,"column":25}},"108":{"start":{"line":175,"column":20},"end":{"line":175,"column":42}},"109":{"start":{"line":176,"column":8},"end":{"line":190,"column":9}},"110":{"start":{"line":177,"column":25},"end":{"line":177,"column":30}},"111":{"start":{"line":178,"column":12},"end":{"line":180,"column":13}},"112":{"start":{"line":179,"column":16},"end":{"line":179,"column":28}},"113":{"start":{"line":181,"column":12},"end":{"line":181,"column":25}},"114":{"start":{"line":184,"column":25},"end":{"line":184,"column":30}},"115":{"start":{"line":185,"column":12},"end":{"line":188,"column":13}},"116":{"start":{"line":187,"column":16},"end":{"line":187,"column":28}},"117":{"start":{"line":189,"column":12},"end":{"line":189,"column":25}},"118":{"start":{"line":193,"column":8},"end":{"line":195,"column":9}},"119":{"start":{"line":194,"column":12},"end":{"line":194,"column":25}},"120":{"start":{"line":196,"column":8},"end":{"line":198,"column":9}},"121":{"start":{"line":197,"column":12},"end":{"line":197,"column":25}},"122":{"start":{"line":199,"column":8},"end":{"line":206,"column":9}},"123":{"start":{"line":200,"column":12},"end":{"line":200,"column":25}},"124":{"start":{"line":202,"column":13},"end":{"line":206,"column":9}},"125":{"start":{"line":203,"column":12},"end":{"line":205,"column":13}},"126":{"start":{"line":204,"column":16},"end":{"line":204,"column":29}},"127":{"start":{"line":207,"column":8},"end":{"line":207,"column":20}},"128":{"start":{"line":210,"column":0},"end":{"line":210,"column":33}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":4},"end":{"line":6,"column":5}},"loc":{"start":{"line":6,"column":25},"end":{"line":42,"column":5}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":15,"column":35},"end":{"line":15,"column":36}},"loc":{"start":{"line":15,"column":44},"end":{"line":22,"column":9}},"line":15},"2":{"name":"(anonymous_2)","decl":{"start":{"line":43,"column":4},"end":{"line":43,"column":5}},"loc":{"start":{"line":43,"column":26},"end":{"line":74,"column":5}},"line":43},"3":{"name":"(anonymous_3)","decl":{"start":{"line":75,"column":4},"end":{"line":75,"column":5}},"loc":{"start":{"line":75,"column":34},"end":{"line":89,"column":5}},"line":75},"4":{"name":"(anonymous_4)","decl":{"start":{"line":90,"column":4},"end":{"line":90,"column":5}},"loc":{"start":{"line":90,"column":33},"end":{"line":104,"column":5}},"line":90},"5":{"name":"(anonymous_5)","decl":{"start":{"line":105,"column":4},"end":{"line":105,"column":5}},"loc":{"start":{"line":105,"column":27},"end":{"line":120,"column":5}},"line":105},"6":{"name":"(anonymous_6)","decl":{"start":{"line":121,"column":4},"end":{"line":121,"column":5}},"loc":{"start":{"line":121,"column":27},"end":{"line":130,"column":5}},"line":121},"7":{"name":"(anonymous_7)","decl":{"start":{"line":131,"column":4},"end":{"line":131,"column":5}},"loc":{"start":{"line":131,"column":28},"end":{"line":153,"column":5}},"line":131},"8":{"name":"(anonymous_8)","decl":{"start":{"line":154,"column":4},"end":{"line":154,"column":5}},"loc":{"start":{"line":154,"column":27},"end":{"line":166,"column":5}},"line":154},"9":{"name":"(anonymous_9)","decl":{"start":{"line":167,"column":4},"end":{"line":167,"column":5}},"loc":{"start":{"line":167,"column":38},"end":{"line":191,"column":5}},"line":167},"10":{"name":"(anonymous_10)","decl":{"start":{"line":192,"column":4},"end":{"line":192,"column":5}},"loc":{"start":{"line":192,"column":29},"end":{"line":208,"column":5}},"line":192}},"branchMap":{"0":{"loc":{"start":{"line":7,"column":8},"end":{"line":9,"column":9}},"type":"if","locations":[{"start":{"line":7,"column":8},"end":{"line":9,"column":9}},{"start":{"line":7,"column":8},"end":{"line":9,"column":9}}],"line":7},"1":{"loc":{"start":{"line":7,"column":12},"end":{"line":7,"column":98}},"type":"binary-expr","locations":[{"start":{"line":7,"column":12},"end":{"line":7,"column":33}},{"start":{"line":7,"column":37},"end":{"line":7,"column":50}},{"start":{"line":7,"column":54},"end":{"line":7,"column":73}},{"start":{"line":7,"column":77},"end":{"line":7,"column":98}}],"line":7},"2":{"loc":{"start":{"line":12,"column":8},"end":{"line":14,"column":9}},"type":"if","locations":[{"start":{"line":12,"column":8},"end":{"line":14,"column":9}},{"start":{"line":12,"column":8},"end":{"line":14,"column":9}}],"line":12},"3":{"loc":{"start":{"line":16,"column":12},"end":{"line":18,"column":13}},"type":"if","locations":[{"start":{"line":16,"column":12},"end":{"line":18,"column":13}},{"start":{"line":16,"column":12},"end":{"line":18,"column":13}}],"line":16},"4":{"loc":{"start":{"line":19,"column":12},"end":{"line":21,"column":13}},"type":"if","locations":[{"start":{"line":19,"column":12},"end":{"line":21,"column":13}},{"start":{"line":19,"column":12},"end":{"line":21,"column":13}}],"line":19},"5":{"loc":{"start":{"line":24,"column":8},"end":{"line":26,"column":9}},"type":"if","locations":[{"start":{"line":24,"column":8},"end":{"line":26,"column":9}},{"start":{"line":24,"column":8},"end":{"line":26,"column":9}}],"line":24},"6":{"loc":{"start":{"line":24,"column":12},"end":{"line":24,"column":62}},"type":"binary-expr","locations":[{"start":{"line":24,"column":12},"end":{"line":24,"column":35}},{"start":{"line":24,"column":39},"end":{"line":24,"column":62}}],"line":24},"7":{"loc":{"start":{"line":27,"column":8},"end":{"line":29,"column":9}},"type":"if","locations":[{"start":{"line":27,"column":8},"end":{"line":29,"column":9}},{"start":{"line":27,"column":8},"end":{"line":29,"column":9}}],"line":27},"8":{"loc":{"start":{"line":31,"column":8},"end":{"line":33,"column":9}},"type":"if","locations":[{"start":{"line":31,"column":8},"end":{"line":33,"column":9}},{"start":{"line":31,"column":8},"end":{"line":33,"column":9}}],"line":31},"9":{"loc":{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},"type":"if","locations":[{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},{"start":{"line":34,"column":8},"end":{"line":36,"column":9}}],"line":34},"10":{"loc":{"start":{"line":38,"column":8},"end":{"line":40,"column":9}},"type":"if","locations":[{"start":{"line":38,"column":8},"end":{"line":40,"column":9}},{"start":{"line":38,"column":8},"end":{"line":40,"column":9}}],"line":38},"11":{"loc":{"start":{"line":45,"column":8},"end":{"line":47,"column":9}},"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":47,"column":9}},{"start":{"line":45,"column":8},"end":{"line":47,"column":9}}],"line":45},"12":{"loc":{"start":{"line":49,"column":8},"end":{"line":52,"column":9}},"type":"if","locations":[{"start":{"line":49,"column":8},"end":{"line":52,"column":9}},{"start":{"line":49,"column":8},"end":{"line":52,"column":9}}],"line":49},"13":{"loc":{"start":{"line":49,"column":12},"end":{"line":50,"column":78}},"type":"binary-expr","locations":[{"start":{"line":49,"column":12},"end":{"line":49,"column":32}},{"start":{"line":49,"column":36},"end":{"line":49,"column":55}},{"start":{"line":49,"column":59},"end":{"line":49,"column":78}},{"start":{"line":49,"column":82},"end":{"line":49,"column":101}},{"start":{"line":50,"column":12},"end":{"line":50,"column":31}},{"start":{"line":50,"column":35},"end":{"line":50,"column":54}},{"start":{"line":50,"column":58},"end":{"line":50,"column":78}}],"line":49},"14":{"loc":{"start":{"line":53,"column":8},"end":{"line":57,"column":9}},"type":"if","locations":[{"start":{"line":53,"column":8},"end":{"line":57,"column":9}},{"start":{"line":53,"column":8},"end":{"line":57,"column":9}}],"line":53},"15":{"loc":{"start":{"line":53,"column":12},"end":{"line":53,"column":55}},"type":"binary-expr","locations":[{"start":{"line":53,"column":12},"end":{"line":53,"column":32}},{"start":{"line":53,"column":36},"end":{"line":53,"column":55}}],"line":53},"16":{"loc":{"start":{"line":54,"column":12},"end":{"line":56,"column":13}},"type":"if","locations":[{"start":{"line":54,"column":12},"end":{"line":56,"column":13}},{"start":{"line":54,"column":12},"end":{"line":56,"column":13}}],"line":54},"17":{"loc":{"start":{"line":58,"column":8},"end":{"line":62,"column":9}},"type":"if","locations":[{"start":{"line":58,"column":8},"end":{"line":62,"column":9}},{"start":{"line":58,"column":8},"end":{"line":62,"column":9}}],"line":58},"18":{"loc":{"start":{"line":58,"column":12},"end":{"line":58,"column":77}},"type":"binary-expr","locations":[{"start":{"line":58,"column":12},"end":{"line":58,"column":31}},{"start":{"line":58,"column":35},"end":{"line":58,"column":54}},{"start":{"line":58,"column":58},"end":{"line":58,"column":77}}],"line":58},"19":{"loc":{"start":{"line":59,"column":12},"end":{"line":61,"column":13}},"type":"if","locations":[{"start":{"line":59,"column":12},"end":{"line":61,"column":13}},{"start":{"line":59,"column":12},"end":{"line":61,"column":13}}],"line":59},"20":{"loc":{"start":{"line":63,"column":8},"end":{"line":67,"column":9}},"type":"if","locations":[{"start":{"line":63,"column":8},"end":{"line":67,"column":9}},{"start":{"line":63,"column":8},"end":{"line":67,"column":9}}],"line":63},"21":{"loc":{"start":{"line":64,"column":12},"end":{"line":66,"column":13}},"type":"if","locations":[{"start":{"line":64,"column":12},"end":{"line":66,"column":13}},{"start":{"line":64,"column":12},"end":{"line":66,"column":13}}],"line":64},"22":{"loc":{"start":{"line":68,"column":8},"end":{"line":72,"column":9}},"type":"if","locations":[{"start":{"line":68,"column":8},"end":{"line":72,"column":9}},{"start":{"line":68,"column":8},"end":{"line":72,"column":9}}],"line":68},"23":{"loc":{"start":{"line":69,"column":12},"end":{"line":71,"column":13}},"type":"if","locations":[{"start":{"line":69,"column":12},"end":{"line":71,"column":13}},{"start":{"line":69,"column":12},"end":{"line":71,"column":13}}],"line":69},"24":{"loc":{"start":{"line":77,"column":8},"end":{"line":79,"column":9}},"type":"if","locations":[{"start":{"line":77,"column":8},"end":{"line":79,"column":9}},{"start":{"line":77,"column":8},"end":{"line":79,"column":9}}],"line":77},"25":{"loc":{"start":{"line":80,"column":8},"end":{"line":82,"column":9}},"type":"if","locations":[{"start":{"line":80,"column":8},"end":{"line":82,"column":9}},{"start":{"line":80,"column":8},"end":{"line":82,"column":9}}],"line":80},"26":{"loc":{"start":{"line":84,"column":12},"end":{"line":86,"column":13}},"type":"if","locations":[{"start":{"line":84,"column":12},"end":{"line":86,"column":13}},{"start":{"line":84,"column":12},"end":{"line":86,"column":13}}],"line":84},"27":{"loc":{"start":{"line":92,"column":8},"end":{"line":94,"column":9}},"type":"if","locations":[{"start":{"line":92,"column":8},"end":{"line":94,"column":9}},{"start":{"line":92,"column":8},"end":{"line":94,"column":9}}],"line":92},"28":{"loc":{"start":{"line":97,"column":8},"end":{"line":99,"column":9}},"type":"if","locations":[{"start":{"line":97,"column":8},"end":{"line":99,"column":9}},{"start":{"line":97,"column":8},"end":{"line":99,"column":9}}],"line":97},"29":{"loc":{"start":{"line":100,"column":8},"end":{"line":102,"column":9}},"type":"if","locations":[{"start":{"line":100,"column":8},"end":{"line":102,"column":9}},{"start":{"line":100,"column":8},"end":{"line":102,"column":9}}],"line":100},"30":{"loc":{"start":{"line":107,"column":8},"end":{"line":109,"column":9}},"type":"if","locations":[{"start":{"line":107,"column":8},"end":{"line":109,"column":9}},{"start":{"line":107,"column":8},"end":{"line":109,"column":9}}],"line":107},"31":{"loc":{"start":{"line":107,"column":12},"end":{"line":107,"column":82}},"type":"binary-expr","locations":[{"start":{"line":107,"column":12},"end":{"line":107,"column":46}},{"start":{"line":107,"column":50},"end":{"line":107,"column":82}}],"line":107},"32":{"loc":{"start":{"line":111,"column":8},"end":{"line":113,"column":9}},"type":"if","locations":[{"start":{"line":111,"column":8},"end":{"line":113,"column":9}},{"start":{"line":111,"column":8},"end":{"line":113,"column":9}}],"line":111},"33":{"loc":{"start":{"line":116,"column":8},"end":{"line":118,"column":9}},"type":"if","locations":[{"start":{"line":116,"column":8},"end":{"line":118,"column":9}},{"start":{"line":116,"column":8},"end":{"line":118,"column":9}}],"line":116},"34":{"loc":{"start":{"line":123,"column":8},"end":{"line":125,"column":9}},"type":"if","locations":[{"start":{"line":123,"column":8},"end":{"line":125,"column":9}},{"start":{"line":123,"column":8},"end":{"line":125,"column":9}}],"line":123},"35":{"loc":{"start":{"line":126,"column":8},"end":{"line":128,"column":9}},"type":"if","locations":[{"start":{"line":126,"column":8},"end":{"line":128,"column":9}},{"start":{"line":126,"column":8},"end":{"line":128,"column":9}}],"line":126},"36":{"loc":{"start":{"line":133,"column":8},"end":{"line":135,"column":9}},"type":"if","locations":[{"start":{"line":133,"column":8},"end":{"line":135,"column":9}},{"start":{"line":133,"column":8},"end":{"line":135,"column":9}}],"line":133},"37":{"loc":{"start":{"line":136,"column":8},"end":{"line":138,"column":9}},"type":"if","locations":[{"start":{"line":136,"column":8},"end":{"line":138,"column":9}},{"start":{"line":136,"column":8},"end":{"line":138,"column":9}}],"line":136},"38":{"loc":{"start":{"line":140,"column":12},"end":{"line":142,"column":13}},"type":"if","locations":[{"start":{"line":140,"column":12},"end":{"line":142,"column":13}},{"start":{"line":140,"column":12},"end":{"line":142,"column":13}}],"line":140},"39":{"loc":{"start":{"line":144,"column":12},"end":{"line":146,"column":13}},"type":"if","locations":[{"start":{"line":144,"column":12},"end":{"line":146,"column":13}},{"start":{"line":144,"column":12},"end":{"line":146,"column":13}}],"line":144},"40":{"loc":{"start":{"line":144,"column":16},"end":{"line":144,"column":65}},"type":"binary-expr","locations":[{"start":{"line":144,"column":16},"end":{"line":144,"column":39}},{"start":{"line":144,"column":43},"end":{"line":144,"column":65}}],"line":144},"41":{"loc":{"start":{"line":147,"column":12},"end":{"line":149,"column":13}},"type":"if","locations":[{"start":{"line":147,"column":12},"end":{"line":149,"column":13}},{"start":{"line":147,"column":12},"end":{"line":149,"column":13}}],"line":147},"42":{"loc":{"start":{"line":147,"column":16},"end":{"line":147,"column":111}},"type":"binary-expr","locations":[{"start":{"line":147,"column":16},"end":{"line":147,"column":61}},{"start":{"line":147,"column":65},"end":{"line":147,"column":111}}],"line":147},"43":{"loc":{"start":{"line":156,"column":8},"end":{"line":158,"column":9}},"type":"if","locations":[{"start":{"line":156,"column":8},"end":{"line":158,"column":9}},{"start":{"line":156,"column":8},"end":{"line":158,"column":9}}],"line":156},"44":{"loc":{"start":{"line":159,"column":8},"end":{"line":161,"column":9}},"type":"if","locations":[{"start":{"line":159,"column":8},"end":{"line":161,"column":9}},{"start":{"line":159,"column":8},"end":{"line":161,"column":9}}],"line":159},"45":{"loc":{"start":{"line":162,"column":8},"end":{"line":164,"column":9}},"type":"if","locations":[{"start":{"line":162,"column":8},"end":{"line":164,"column":9}},{"start":{"line":162,"column":8},"end":{"line":164,"column":9}}],"line":162},"46":{"loc":{"start":{"line":162,"column":12},"end":{"line":162,"column":95}},"type":"binary-expr","locations":[{"start":{"line":162,"column":12},"end":{"line":162,"column":51}},{"start":{"line":162,"column":55},"end":{"line":162,"column":95}}],"line":162},"47":{"loc":{"start":{"line":169,"column":8},"end":{"line":171,"column":9}},"type":"if","locations":[{"start":{"line":169,"column":8},"end":{"line":171,"column":9}},{"start":{"line":169,"column":8},"end":{"line":171,"column":9}}],"line":169},"48":{"loc":{"start":{"line":172,"column":8},"end":{"line":174,"column":9}},"type":"if","locations":[{"start":{"line":172,"column":8},"end":{"line":174,"column":9}},{"start":{"line":172,"column":8},"end":{"line":174,"column":9}}],"line":172},"49":{"loc":{"start":{"line":176,"column":8},"end":{"line":190,"column":9}},"type":"if","locations":[{"start":{"line":176,"column":8},"end":{"line":190,"column":9}},{"start":{"line":176,"column":8},"end":{"line":190,"column":9}}],"line":176},"50":{"loc":{"start":{"line":178,"column":12},"end":{"line":180,"column":13}},"type":"if","locations":[{"start":{"line":178,"column":12},"end":{"line":180,"column":13}},{"start":{"line":178,"column":12},"end":{"line":180,"column":13}}],"line":178},"51":{"loc":{"start":{"line":178,"column":16},"end":{"line":178,"column":117}},"type":"binary-expr","locations":[{"start":{"line":178,"column":16},"end":{"line":178,"column":32}},{"start":{"line":178,"column":36},"end":{"line":178,"column":53}},{"start":{"line":178,"column":57},"end":{"line":178,"column":74}},{"start":{"line":178,"column":78},"end":{"line":178,"column":96}},{"start":{"line":178,"column":100},"end":{"line":178,"column":117}}],"line":178},"52":{"loc":{"start":{"line":185,"column":12},"end":{"line":188,"column":13}},"type":"if","locations":[{"start":{"line":185,"column":12},"end":{"line":188,"column":13}},{"start":{"line":185,"column":12},"end":{"line":188,"column":13}}],"line":185},"53":{"loc":{"start":{"line":185,"column":16},"end":{"line":186,"column":33}},"type":"binary-expr","locations":[{"start":{"line":185,"column":16},"end":{"line":185,"column":33}},{"start":{"line":185,"column":37},"end":{"line":185,"column":52}},{"start":{"line":185,"column":56},"end":{"line":185,"column":79}},{"start":{"line":185,"column":83},"end":{"line":185,"column":101}},{"start":{"line":186,"column":16},"end":{"line":186,"column":33}}],"line":185},"54":{"loc":{"start":{"line":193,"column":8},"end":{"line":195,"column":9}},"type":"if","locations":[{"start":{"line":193,"column":8},"end":{"line":195,"column":9}},{"start":{"line":193,"column":8},"end":{"line":195,"column":9}}],"line":193},"55":{"loc":{"start":{"line":196,"column":8},"end":{"line":198,"column":9}},"type":"if","locations":[{"start":{"line":196,"column":8},"end":{"line":198,"column":9}},{"start":{"line":196,"column":8},"end":{"line":198,"column":9}}],"line":196},"56":{"loc":{"start":{"line":199,"column":8},"end":{"line":206,"column":9}},"type":"if","locations":[{"start":{"line":199,"column":8},"end":{"line":206,"column":9}},{"start":{"line":199,"column":8},"end":{"line":206,"column":9}}],"line":199},"57":{"loc":{"start":{"line":199,"column":12},"end":{"line":199,"column":84}},"type":"binary-expr","locations":[{"start":{"line":199,"column":12},"end":{"line":199,"column":45}},{"start":{"line":199,"column":49},"end":{"line":199,"column":84}}],"line":199},"58":{"loc":{"start":{"line":202,"column":13},"end":{"line":206,"column":9}},"type":"if","locations":[{"start":{"line":202,"column":13},"end":{"line":206,"column":9}},{"start":{"line":202,"column":13},"end":{"line":206,"column":9}}],"line":202},"59":{"loc":{"start":{"line":203,"column":12},"end":{"line":205,"column":13}},"type":"if","locations":[{"start":{"line":203,"column":12},"end":{"line":205,"column":13}},{"start":{"line":203,"column":12},"end":{"line":205,"column":13}}],"line":203}},"s":{"0":1,"1":1,"2":64,"3":9,"4":55,"5":1,"6":54,"7":108,"8":54,"9":108,"10":54,"11":54,"12":54,"13":1,"14":53,"15":18,"16":35,"17":35,"18":1,"19":34,"20":1,"21":33,"22":33,"23":12,"24":21,"25":52,"26":52,"27":1,"28":51,"29":51,"30":3,"31":48,"32":10,"33":2,"34":46,"35":25,"36":4,"37":42,"38":10,"39":1,"40":41,"41":3,"42":2,"43":39,"44":10,"45":10,"46":0,"47":10,"48":1,"49":9,"50":18,"51":1,"52":8,"53":25,"54":25,"55":3,"56":22,"57":22,"58":22,"59":1,"60":21,"61":0,"62":21,"63":10,"64":10,"65":0,"66":10,"67":10,"68":1,"69":9,"70":9,"71":9,"72":0,"73":9,"74":3,"75":3,"76":2,"77":1,"78":0,"79":1,"80":52,"81":52,"82":0,"83":52,"84":1,"85":51,"86":86,"87":0,"88":86,"89":86,"90":5,"91":81,"92":4,"93":77,"94":42,"95":38,"96":38,"97":1,"98":37,"99":4,"100":33,"101":1,"102":32,"103":183,"104":183,"105":2,"106":181,"107":0,"108":181,"109":181,"110":134,"111":134,"112":97,"113":37,"114":47,"115":47,"116":42,"117":5,"118":53,"119":1,"120":52,"121":10,"122":42,"123":1,"124":41,"125":38,"126":6,"127":35,"128":1},"f":{"0":64,"1":108,"2":52,"3":10,"4":25,"5":10,"6":3,"7":52,"8":38,"9":183,"10":53},"b":{"0":[9,55],"1":[64,64,64,58],"2":[1,54],"3":[54,54],"4":[54,54],"5":[1,53],"6":[54,51],"7":[18,35],"8":[1,34],"9":[1,33],"10":[12,21],"11":[1,51],"12":[3,48],"13":[51,46,41,24,20,16,6],"14":[10,38],"15":[48,43],"16":[2,8],"17":[25,21],"18":[46,29,25],"19":[4,21],"20":[10,32],"21":[1,9],"22":[3,38],"23":[2,1],"24":[0,10],"25":[1,9],"26":[1,17],"27":[3,22],"28":[1,21],"29":[0,21],"30":[0,10],"31":[10,10],"32":[1,9],"33":[0,9],"34":[2,1],"35":[0,1],"36":[0,52],"37":[1,51],"38":[0,86],"39":[5,81],"40":[86,83],"41":[4,77],"42":[81,36],"43":[1,37],"44":[4,33],"45":[1,32],"46":[33,2],"47":[2,181],"48":[0,181],"49":[134,47],"50":[97,37],"51":[134,45,44,43,40],"52":[42,5],"53":[47,13,10,9,8],"54":[1,52],"55":[10,42],"56":[1,41],"57":[42,39],"58":[38,3],"59":[6,32]},"inputSourceMap":{"version":3,"file":"/Users/user/project_team147/src/model/QueryValidator.ts","sources":["/Users/user/project_team147/src/model/QueryValidator.ts"],"names":[],"mappings":"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","sourcesContent":["import {QueryOBJ} from \"./Query\";\n\nlet datasetID: string;\n\nlet columnKeys: any = [];\t\t\t\t\t\t\t\t// we want to store the column keys so if there is an order, the order key must be in this array\n\n\nexport default class QueryValidator {\n\n\tpublic queryValidate(query: QueryOBJ) {\n\t\tif (query === \"undefined\" || query == null || !(\"WHERE\" in query) || !(\"OPTIONS\" in query)) {\n\t\t\treturn false;\n\t\t}\n\t\tlet WHERE: any;\n\t\tlet OPTIONS: any;\n\t\tif (Object.keys(query).length !== 2) {\n\t\t\treturn false;\n\t\t}\n\t\tObject.keys(query).forEach((key) => {\n\t\t\tif (key === \"WHERE\") {\n\t\t\t\tWHERE = query[key];\n\t\t\t}\n\t\t\tif (key === \"OPTIONS\") {\n\t\t\t\tOPTIONS = query[key];\n\t\t\t}\n\t\t});\n\n\t\tlet keysOPTION = Object.keys(OPTIONS);\n\t\tif (keysOPTION.length !== 1 && keysOPTION.length !== 2) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!this.optionsValidate(OPTIONS)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet keysFILTER = Object.keys(WHERE);\n\t\tif (keysFILTER.length > 1) {\n\t\t\treturn false;\n\t\t}\n\t\tif (Object.keys(WHERE).length === 0) {\n\t\t\treturn true;\n\t\t}\n\t\tlet keyFILTER: string = Object.keys(WHERE)[0];\n\t\tif(!this.isValidFilter(WHERE)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * return true if correct filter matches one of the viable options in EBNF\n\t * @param FILTER: The value of filter key (e.g for a \"GT\" filter, it would be {mKey: number}\n\t * @param filter: the filter string (AND/OR/GT/LT/EQ/IS/NOT)\n\t */\n\tpublic isValidFilter(FILTER: any): boolean {\n\t\tconst filterKeys = Object.keys(FILTER);\n\t\tif (filterKeys.length === 0) {\n\t\t\treturn false;\n\t\t}\n\t\tlet comparator = filterKeys[0];\n\t\tif (comparator !== \"AND\" && comparator !== \"OR\" && comparator !== \"GT\" && comparator !== \"LT\" &&\n\t\t\tcomparator !== \"EQ\" && comparator !== \"IS\" && comparator !== \"NOT\") {\n\t\t\treturn false;\n\t\t}\n\n\n\t\tif (comparator === \"AND\" || comparator === \"OR\") {\n\t\t\tif (!this.logicValidate(FILTER, comparator)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tif (comparator === \"GT\" || comparator === \"LT\" || comparator === \"EQ\") {\n\t\t\tif (!this.mathValidate(FILTER, comparator)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (comparator === \"IS\") {\n\t\t\tif (!this.stringValidate(FILTER)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tif (comparator === \"NOT\") {\n\t\t\tif (!this.negateValidate(FILTER)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * called when the filter key is \"AND\" or \"OR\"\n\t * Must ensure that the value of the filter key is type of array and non-empty\n\t * Must ensure that the elements of the array are valid filters (recursion)\n\t * @param FILTER: the FILTER object to access key and value of\n\t * @param filter: the filter key \"AND\", or \"OR\n\t */\n\tpublic logicValidate(FILTER: any, filter: string) {\n\t\tlet value: any = FILTER[filter];\n\t\tif (!(value instanceof Array)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (value.length === 0) {\n\t\t\treturn false;\n\t\t}\n\n\n\t\tfor (let insideFilter of value) {\n\t\t\t// [{}] {}\n\t\t\tif (!this.isValidFilter(insideFilter)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\n\t/**\n\t * called when filter key is \"GT\", \"EQ\", or \"LT\"\n\t * must ensure that there is ONLY 1 key:value pair within the value of the filter key\n\t * must validate that the value within the value of the filter key is a number\n\t * must validate that the key within the value of the filter key is mKEY\n\t * @param FILTER: The FILTER object to acess the key and value of\n\t * @param filter: the filter key \"GT\", \"EQ\", \"LT\"\n\t */\n\tpublic mathValidate(FILTER: any, filter: string) {\n\t\tlet valueMATH: any = FILTER[filter];\t\t\t\t\t// will give us an object {mkey: number}\n\t\tif (Object.keys(valueMATH).length !== 1) {\t\t\t\t// only one key should exist\n\t\t\treturn false;\n\t\t}\n\t\tlet mKey = Object.keys(valueMATH)[0];\t\t\t\t\t// mKey in { \"GT\": { mKey: number} }\n\t\tlet number = valueMATH[mKey];\n\t\tif (typeof number !== \"number\") {\t\t\t\t\t\t// must be a number\n\t\t\treturn false;\n\t\t}\n\t\tif (!this.isValidQueryKey(mKey, true)) {\t\t\t// validity of mKey\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Called when filter is \"IS\"\n\t * must ensure queryKey is valid\n\t * must ensure that if astericks are used\n\t * @param FILTER: the FILTER object to access the key and value of\n\t * @private\n\t */\n\tprivate stringValidate(FILTER: any) {\n\t\tlet isOBJECT: any = FILTER[\"IS\"];\n\t\tif (Object.keys(isOBJECT).length === 0 || Object.keys(isOBJECT).length > 1) {\n\t\t\treturn false;\n\t\t}\n\t\tlet queryKey = Object.keys(isOBJECT)[0];\n\t\tif (!this.isValidQueryKey(queryKey, false)) {\n\t\t\treturn false;\n\t\t}\n\t\tlet isVALUE: any = isOBJECT[queryKey];\n\t\tconst regex = /[*]?[^*]*[*]?/g;\n\t\tif (!isVALUE.match(regex)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\n\t/**\n\t * called when filter key is \"NOT\"\n\t * must ensure that there is only one FILTER within the filter key value\n\t * must ensure that the FILTER within the filter key value is validFilter (recursion)\n\t * @param FILTER : the FILTER object to access the key and value of\n\t * @private\n\t */\n\tprivate negateValidate(FILTER: any) {\n\t\tlet valueNEGATE: any = FILTER[\"NOT\"];\t\t\t\t\t// will give us { filter }\n\t\tif (Object.keys(valueNEGATE).length !== 1) {\t\t\t// must be a single filter\n\t\t\treturn false;\n\t\t}\n\t\tif (!this.isValidFilter(valueNEGATE)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * must ensure the value of the COLUMNS key is a non-empty array\n\t * must ensure key is valid (can be mkey or skey)\n\t * @param OPTIONS: The OPTIONS object where the key \"COLUMNS\" was found\n\t */\n\tpublic columnValidate(OPTIONS: any): boolean {\n\t\tlet columnVal = OPTIONS[\"COLUMNS\"];\n\t\tif (!(columnVal instanceof Array)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (columnVal.length === 0) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let key in columnVal) {\n\t\t\tif (typeof columnVal[key] !== \"string\") {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tdatasetID = columnVal[key].split(\"_\")[0];\n\t\t\tif (datasetID.includes(\" \") || datasetID.length === 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (!(this.isValidQueryKey(columnVal[key], true)) && !(this.isValidQueryKey(columnVal[key], false))) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tcolumnKeys.push(columnVal[key]);\n\t\t}\n\t\treturn true;\n\t}\n\n\n\t/**\n\t * Called when the key \"ORDER\" is found within OPTIONS\n\t * must ensure the value of the \"ORDER\" key is a string\n\t * must ensure key is valid\n\t * @param OPTIONS: the OPTIONS object where the key \"ORDER\" was found\n\t * @private\n\t */\n\tprivate orderValidate(OPTIONS: any): boolean {\n\t\tlet orderVal = OPTIONS[\"ORDER\"];\n\t\tif (typeof orderVal !== \"string\") {\n\t\t\treturn false;\n\t\t}\n\t\tif (!columnKeys.includes(orderVal)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!(this.isValidQueryKey(orderVal, true)) && !(this.isValidQueryKey(orderVal, false))) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\n\t}\n\n\t/**\n\t * Check if a query key is valid\n\t * <id>_<key> is correct format, where id is the id of the dataset\n\t * an id_string can contain any character except for underscore\n\t * @param queryKey: consists of idString and mField/sField in the form <idString>_<m/sField>\n\t * @param isMKey: true means MKey, false means SKey\n\t */\n\tpublic isValidQueryKey(queryKey: string, isMKey: boolean): boolean {\n\t\tlet idString = queryKey.split(\"_\")[0];\n\t\tif (idString !== datasetID) {\n\t\t\treturn false;\n\t\t}\n\t\tif (idString.includes(\"_\")){\n\t\t\treturn false;\n\t\t}\n\t\tlet field = queryKey.split(\"_\")[1];\n\t\tif (isMKey) {\n\t\t\tlet mField = field;\n\t\t\tif (mField === \"avg\" || mField === \"pass\" || mField === \"fail\" || mField === \"audit\" || mField === \"year\") {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t} else {\n\t\t\tlet sField = field;\n\t\t\tif (sField === \"dept\" || sField === \"id\" || sField === \"instructor\" || sField === \"title\" ||\n\t\t\t\tsField === \"uuid\") {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Validate the OPTIONS requirements from the EBNF\n\t * first key in OPTIONS MUST be COLUMNS\n\t * if second key exists, it MUST be ORDER\n\t * validate the COLUMNS block using the columnValidate method\n\t * if ORDER exists, validate it using the orderValidate method\n\t * @param OPTIONS: the OPTIONS value object =======> {' COLUMNS (', ORDER:' key)?'}'\n\t * @private\n\t */\n\tprivate optionsValidate(OPTIONS: any): boolean {\n\t\tif (Object.keys(OPTIONS)[0] !== \"COLUMNS\") {\n\t\t\treturn false;\n\t\t}\n\t\tif (!this.columnValidate(OPTIONS)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (Object.keys(OPTIONS).length === 2 && Object.keys(OPTIONS)[1] !== \"ORDER\") {\n\t\t\treturn false;\n\t\t} else if (Object.keys(OPTIONS).length === 2) {\n\t\t\tif (!this.orderValidate(OPTIONS)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"88eb922daa9146ff55acb4b752a931197007de52","contentHash":"8554095f70b91928ba64c6894ca0dabd4989dcf836b3c79330c06d7246542b10"}}