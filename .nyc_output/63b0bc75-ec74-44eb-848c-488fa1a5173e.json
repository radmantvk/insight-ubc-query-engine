{"/Users/user/project_team147/src/controller/IInsightFacade.ts":{"path":"/Users/user/project_team147/src/controller/IInsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":113}},"2":{"start":{"line":5,"column":0},"end":{"line":8,"column":89}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":46}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":42}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":23}},"6":{"start":{"line":12,"column":8},"end":{"line":12,"column":52}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":36}},"8":{"start":{"line":18,"column":8},"end":{"line":18,"column":23}},"9":{"start":{"line":19,"column":8},"end":{"line":19,"column":53}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":38}},"11":{"start":{"line":25,"column":8},"end":{"line":25,"column":23}},"12":{"start":{"line":26,"column":8},"end":{"line":26,"column":59}},"13":{"start":{"line":29,"column":0},"end":{"line":29,"column":50}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":31},"end":{"line":8,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":25},"end":{"line":13,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":25},"end":{"line":20,"column":5}},"line":17},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":25},"end":{"line":27,"column":5}},"line":24}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":24},"end":{"line":8,"column":87}},"type":"binary-expr","locations":[{"start":{"line":8,"column":24},"end":{"line":8,"column":50}},{"start":{"line":8,"column":55},"end":{"line":8,"column":86}}],"line":8}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":1,"8":0,"9":0,"10":1,"11":0,"12":0,"13":1},"f":{"0":1,"1":0,"2":0,"3":0},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/user/project_team147/src/controller/IInsightFacade.ts","sources":["/Users/user/project_team147/src/controller/IInsightFacade.ts"],"names":[],"mappings":";;;AAMA,IAAY,kBAGX;AAHD,WAAY,kBAAkB;IAC7B,yCAAmB,CAAA;IACnB,qCAAe,CAAA;AAChB,CAAC,EAHW,kBAAkB,GAAlB,0BAAkB,KAAlB,0BAAkB,QAG7B;AAQD,MAAa,YAAa,SAAQ,KAAK;IACtC,YAAY,GAAG,IAAW;QACzB,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IAC7C,CAAC;CACD;AALD,oCAKC;AAED,MAAa,aAAc,SAAQ,KAAK;IACvC,YAAY,GAAG,IAAW;QACzB,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;IAC9C,CAAC;CACD;AALD,sCAKC;AAED,MAAa,mBAAoB,SAAQ,KAAK;IAC7C,YAAY,GAAG,IAAW;QACzB,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;IACpD,CAAC;CACD;AALD,kDAKC","sourcesContent":["/*\n * This is the primary high-level API for the project. In this folder there should be:\n * A class called InsightFacade, this should be in a file called InsightFacade.ts.\n * You should not change this interface at all or the test suite will not work.\n */\n\nexport enum InsightDatasetKind {\n\tCourses = \"courses\",\n\tRooms = \"rooms\",\n}\n\nexport interface InsightDataset {\n\tid: string;\n\tkind: InsightDatasetKind;\n\tnumRows: number;\n}\n\nexport class InsightError extends Error {\n\tconstructor(...args: any[]) {\n\t\tsuper(...args);\n\t\tError.captureStackTrace(this, InsightError);\n\t}\n}\n\nexport class NotFoundError extends Error {\n\tconstructor(...args: any[]) {\n\t\tsuper(...args);\n\t\tError.captureStackTrace(this, NotFoundError);\n\t}\n}\n\nexport class ResultTooLargeError extends Error {\n\tconstructor(...args: any[]) {\n\t\tsuper(...args);\n\t\tError.captureStackTrace(this, ResultTooLargeError);\n\t}\n}\n\nexport interface IInsightFacade {\n\t/**\n\t * Add a dataset to insightUBC.\n\t *\n\t * @param id  The id of the dataset being added. Follows the format /^[^_]+$/\n\t * @param content  The base64 content of the dataset. This content should be in the form of a serialized zip file.\n\t * @param kind  The kind of the dataset\n\t *\n\t * @return Promise <string[]>\n\t *\n\t * The promise should fulfill on a successful add, reject for any failures.\n\t * The promise should fulfill with a string array,\n\t * containing the ids of all currently added datasets upon a successful add.\n\t * The promise should reject with an InsightError describing the error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t * If id is the same as the id of an already added dataset, the dataset should be rejected and not saved.\n\t *\n\t * After receiving the dataset, it should be processed into a data structure of\n\t * your design. The processed data structure should be persisted to disk; your\n\t * system should be able to load this persisted value into memory for answering\n\t * queries.\n\t *\n\t * Ultimately, a dataset must be added or loaded from disk before queries can\n\t * be successfully answered.\n\t */\n\taddDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]>;\n\n\t/**\n\t * Remove a dataset from insightUBC.\n\t *\n\t * @param id  The id of the dataset to remove. Follows the format /^[^_]+$/\n\t *\n\t * @return Promise <string>\n\t *\n\t * The promise should fulfill upon a successful removal, reject on any error.\n\t * Attempting to remove a dataset that hasn't been added yet counts as an error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t *\n\t * The promise should fulfill the id of the dataset that was removed.\n\t * The promise should reject with a NotFoundError (if a valid id was not yet added)\n\t * or an InsightError (invalid id or any other source of failure) describing the error.\n\t *\n\t * This will delete both disk and memory caches for the dataset for the id meaning\n\t * that subsequent queries for that id should fail unless a new addDataset happens first.\n\t */\n\tremoveDataset(id: string): Promise<string>;\n\n\t/**\n\t * Perform a query on insightUBC.\n\t *\n\t * @param query  The query to be performed.\n\t *\n\t * If a query is incorrectly formatted, references a dataset not added (in memory or on disk),\n\t * or references multiple datasets, it should be rejected.\n\t *\n\t * @return Promise <any[]>\n\t *\n\t * The promise should fulfill with an array of results.\n\t * The promise should reject with a ResultTooLargeError (if the query returns too many results)\n\t * or an InsightError (for any other source of failure) describing the error.\n\t */\n\tperformQuery(query: any): Promise<any[]>;\n\n\t/**\n\t * List all currently added datasets, their types, and number of rows.\n\t *\n\t * @return Promise <InsightDataset[]>\n\t * The promise should fulfill an array of currently added InsightDatasets, and will only fulfill.\n\t */\n\tlistDatasets(): Promise<InsightDataset[]>;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e5eeeed141201aaaf7abd571d2cbb902d43c8c96","contentHash":"31cc55fd9dccbe1c1eeea3da109207195743fcee6b8db900c034347fc0ebfdfd"},"/Users/user/project_team147/src/controller/InsightFacade.ts":{"path":"/Users/user/project_team147/src/controller/InsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":8,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":4},"end":{"line":4,"column":89}},"4":{"start":{"line":4,"column":71},"end":{"line":4,"column":83}},"5":{"start":{"line":6,"column":4},"end":{"line":6,"column":33}},"6":{"start":{"line":6,"column":26},"end":{"line":6,"column":33}},"7":{"start":{"line":7,"column":4},"end":{"line":7,"column":17}},"8":{"start":{"line":9,"column":25},"end":{"line":13,"column":2}},"9":{"start":{"line":10,"column":4},"end":{"line":10,"column":72}},"10":{"start":{"line":12,"column":4},"end":{"line":12,"column":21}},"11":{"start":{"line":14,"column":19},"end":{"line":20,"column":1}},"12":{"start":{"line":15,"column":4},"end":{"line":15,"column":42}},"13":{"start":{"line":15,"column":31},"end":{"line":15,"column":42}},"14":{"start":{"line":16,"column":17},"end":{"line":16,"column":19}},"15":{"start":{"line":17,"column":4},"end":{"line":17,"column":141}},"16":{"start":{"line":17,"column":21},"end":{"line":17,"column":141}},"17":{"start":{"line":17,"column":40},"end":{"line":17,"column":141}},"18":{"start":{"line":17,"column":109},"end":{"line":17,"column":141}},"19":{"start":{"line":18,"column":4},"end":{"line":18,"column":36}},"20":{"start":{"line":19,"column":4},"end":{"line":19,"column":18}},"21":{"start":{"line":21,"column":22},"end":{"line":23,"column":1}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":62}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":62}},"24":{"start":{"line":25,"column":25},"end":{"line":25,"column":52}},"25":{"start":{"line":26,"column":11},"end":{"line":26,"column":44}},"26":{"start":{"line":27,"column":17},"end":{"line":27,"column":60}},"27":{"start":{"line":28,"column":18},"end":{"line":28,"column":62}},"28":{"start":{"line":29,"column":16},"end":{"line":29,"column":49}},"29":{"start":{"line":30,"column":16},"end":{"line":30,"column":58}},"30":{"start":{"line":33,"column":8},"end":{"line":33,"column":27}},"31":{"start":{"line":34,"column":8},"end":{"line":34,"column":34}},"32":{"start":{"line":37,"column":24},"end":{"line":37,"column":55}},"33":{"start":{"line":38,"column":27},"end":{"line":38,"column":46}},"34":{"start":{"line":39,"column":8},"end":{"line":57,"column":11}},"35":{"start":{"line":41,"column":12},"end":{"line":41,"column":53}},"36":{"start":{"line":43,"column":26},"end":{"line":47,"column":13}},"37":{"start":{"line":48,"column":12},"end":{"line":48,"column":47}},"38":{"start":{"line":49,"column":12},"end":{"line":49,"column":35}},"39":{"start":{"line":50,"column":33},"end":{"line":50,"column":35}},"40":{"start":{"line":51,"column":12},"end":{"line":53,"column":13}},"41":{"start":{"line":52,"column":16},"end":{"line":52,"column":48}},"42":{"start":{"line":54,"column":12},"end":{"line":54,"column":51}},"43":{"start":{"line":56,"column":12},"end":{"line":56,"column":74}},"44":{"start":{"line":60,"column":8},"end":{"line":73,"column":11}},"45":{"start":{"line":62,"column":12},"end":{"line":64,"column":13}},"46":{"start":{"line":63,"column":16},"end":{"line":63,"column":76}},"47":{"start":{"line":65,"column":12},"end":{"line":65,"column":32}},"48":{"start":{"line":66,"column":12},"end":{"line":72,"column":15}},"49":{"start":{"line":68,"column":16},"end":{"line":68,"column":43}},"50":{"start":{"line":71,"column":16},"end":{"line":71,"column":43}},"51":{"start":{"line":76,"column":19},"end":{"line":76,"column":40}},"52":{"start":{"line":77,"column":8},"end":{"line":79,"column":9}},"53":{"start":{"line":78,"column":12},"end":{"line":78,"column":71}},"54":{"start":{"line":80,"column":8},"end":{"line":80,"column":35}},"55":{"start":{"line":83,"column":8},"end":{"line":83,"column":53}},"56":{"start":{"line":86,"column":8},"end":{"line":100,"column":9}},"57":{"start":{"line":87,"column":12},"end":{"line":87,"column":71}},"58":{"start":{"line":89,"column":13},"end":{"line":100,"column":9}},"59":{"start":{"line":90,"column":12},"end":{"line":90,"column":71}},"60":{"start":{"line":92,"column":13},"end":{"line":100,"column":9}},"61":{"start":{"line":93,"column":12},"end":{"line":93,"column":71}},"62":{"start":{"line":96,"column":28},"end":{"line":96,"column":48}},"63":{"start":{"line":97,"column":12},"end":{"line":99,"column":13}},"64":{"start":{"line":98,"column":16},"end":{"line":98,"column":75}},"65":{"start":{"line":101,"column":8},"end":{"line":101,"column":73}},"66":{"start":{"line":104,"column":20},"end":{"line":104,"column":41}},"67":{"start":{"line":105,"column":8},"end":{"line":108,"column":11}},"68":{"start":{"line":107,"column":12},"end":{"line":107,"column":74}},"69":{"start":{"line":111,"column":8},"end":{"line":115,"column":11}},"70":{"start":{"line":112,"column":12},"end":{"line":114,"column":13}},"71":{"start":{"line":113,"column":16},"end":{"line":113,"column":47}},"72":{"start":{"line":116,"column":8},"end":{"line":120,"column":11}},"73":{"start":{"line":117,"column":12},"end":{"line":119,"column":13}},"74":{"start":{"line":118,"column":16},"end":{"line":118,"column":54}},"75":{"start":{"line":123,"column":8},"end":{"line":125,"column":9}},"76":{"start":{"line":124,"column":12},"end":{"line":124,"column":71}},"77":{"start":{"line":126,"column":36},"end":{"line":126,"column":38}},"78":{"start":{"line":127,"column":8},"end":{"line":129,"column":11}},"79":{"start":{"line":128,"column":12},"end":{"line":128,"column":59}},"80":{"start":{"line":130,"column":8},"end":{"line":132,"column":9}},"81":{"start":{"line":131,"column":12},"end":{"line":131,"column":36}},"82":{"start":{"line":133,"column":22},"end":{"line":133,"column":24}},"83":{"start":{"line":134,"column":8},"end":{"line":168,"column":11}},"84":{"start":{"line":135,"column":45},"end":{"line":135,"column":50}},"85":{"start":{"line":136,"column":26},"end":{"line":136,"column":27}},"86":{"start":{"line":137,"column":12},"end":{"line":152,"column":15}},"87":{"start":{"line":138,"column":31},"end":{"line":138,"column":33}},"88":{"start":{"line":139,"column":16},"end":{"line":151,"column":17}},"89":{"start":{"line":140,"column":39},"end":{"line":140,"column":63}},"90":{"start":{"line":141,"column":20},"end":{"line":141,"column":70}},"91":{"start":{"line":142,"column":20},"end":{"line":142,"column":47}},"92":{"start":{"line":143,"column":20},"end":{"line":147,"column":21}},"93":{"start":{"line":144,"column":41},"end":{"line":144,"column":80}},"94":{"start":{"line":145,"column":39},"end":{"line":145,"column":79}},"95":{"start":{"line":146,"column":24},"end":{"line":146,"column":45}},"96":{"start":{"line":148,"column":20},"end":{"line":148,"column":54}},"97":{"start":{"line":153,"column":12},"end":{"line":155,"column":13}},"98":{"start":{"line":154,"column":16},"end":{"line":154,"column":75}},"99":{"start":{"line":156,"column":42},"end":{"line":156,"column":44}},"100":{"start":{"line":157,"column":12},"end":{"line":163,"column":15}},"101":{"start":{"line":159,"column":16},"end":{"line":162,"column":17}},"102":{"start":{"line":160,"column":33},"end":{"line":160,"column":75}},"103":{"start":{"line":161,"column":20},"end":{"line":161,"column":84}},"104":{"start":{"line":164,"column":12},"end":{"line":167,"column":15}},"105":{"start":{"line":166,"column":16},"end":{"line":166,"column":31}},"106":{"start":{"line":171,"column":8},"end":{"line":179,"column":9}},"107":{"start":{"line":172,"column":12},"end":{"line":172,"column":44}},"108":{"start":{"line":175,"column":12},"end":{"line":178,"column":15}},"109":{"start":{"line":177,"column":16},"end":{"line":177,"column":48}},"110":{"start":{"line":182,"column":8},"end":{"line":186,"column":9}},"111":{"start":{"line":183,"column":12},"end":{"line":185,"column":13}},"112":{"start":{"line":184,"column":16},"end":{"line":184,"column":28}},"113":{"start":{"line":187,"column":8},"end":{"line":187,"column":21}},"114":{"start":{"line":190,"column":29},"end":{"line":190,"column":31}},"115":{"start":{"line":191,"column":8},"end":{"line":200,"column":9}},"116":{"start":{"line":192,"column":12},"end":{"line":199,"column":13}},"117":{"start":{"line":197,"column":26},"end":{"line":197,"column":196}},"118":{"start":{"line":198,"column":16},"end":{"line":198,"column":39}},"119":{"start":{"line":201,"column":8},"end":{"line":201,"column":30}},"120":{"start":{"line":204,"column":0},"end":{"line":204,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":5,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":4,"column":58},"end":{"line":4,"column":59}},"loc":{"start":{"line":4,"column":69},"end":{"line":4,"column":85}},"line":4},"2":{"name":"(anonymous_2)","decl":{"start":{"line":5,"column":6},"end":{"line":5,"column":7}},"loc":{"start":{"line":5,"column":28},"end":{"line":8,"column":1}},"line":5},"3":{"name":"(anonymous_3)","decl":{"start":{"line":9,"column":80},"end":{"line":9,"column":81}},"loc":{"start":{"line":9,"column":95},"end":{"line":11,"column":1}},"line":9},"4":{"name":"(anonymous_4)","decl":{"start":{"line":11,"column":5},"end":{"line":11,"column":6}},"loc":{"start":{"line":11,"column":20},"end":{"line":13,"column":1}},"line":11},"5":{"name":"(anonymous_5)","decl":{"start":{"line":14,"column":50},"end":{"line":14,"column":51}},"loc":{"start":{"line":14,"column":65},"end":{"line":20,"column":1}},"line":14},"6":{"name":"(anonymous_6)","decl":{"start":{"line":21,"column":56},"end":{"line":21,"column":57}},"loc":{"start":{"line":21,"column":71},"end":{"line":23,"column":1}},"line":21},"7":{"name":"(anonymous_7)","decl":{"start":{"line":32,"column":4},"end":{"line":32,"column":5}},"loc":{"start":{"line":32,"column":18},"end":{"line":35,"column":5}},"line":32},"8":{"name":"(anonymous_8)","decl":{"start":{"line":36,"column":4},"end":{"line":36,"column":5}},"loc":{"start":{"line":36,"column":34},"end":{"line":58,"column":5}},"line":36},"9":{"name":"(anonymous_9)","decl":{"start":{"line":40,"column":18},"end":{"line":40,"column":19}},"loc":{"start":{"line":40,"column":32},"end":{"line":42,"column":9}},"line":40},"10":{"name":"(anonymous_10)","decl":{"start":{"line":42,"column":16},"end":{"line":42,"column":17}},"loc":{"start":{"line":42,"column":29},"end":{"line":55,"column":9}},"line":42},"11":{"name":"(anonymous_11)","decl":{"start":{"line":55,"column":17},"end":{"line":55,"column":18}},"loc":{"start":{"line":55,"column":26},"end":{"line":57,"column":9}},"line":55},"12":{"name":"(anonymous_12)","decl":{"start":{"line":59,"column":4},"end":{"line":59,"column":5}},"loc":{"start":{"line":59,"column":22},"end":{"line":74,"column":5}},"line":59},"13":{"name":"(anonymous_13)","decl":{"start":{"line":61,"column":18},"end":{"line":61,"column":19}},"loc":{"start":{"line":61,"column":24},"end":{"line":73,"column":9}},"line":61},"14":{"name":"(anonymous_14)","decl":{"start":{"line":67,"column":22},"end":{"line":67,"column":23}},"loc":{"start":{"line":67,"column":28},"end":{"line":69,"column":13}},"line":67},"15":{"name":"(anonymous_15)","decl":{"start":{"line":70,"column":23},"end":{"line":70,"column":24}},"loc":{"start":{"line":70,"column":32},"end":{"line":72,"column":13}},"line":70},"16":{"name":"(anonymous_16)","decl":{"start":{"line":75,"column":4},"end":{"line":75,"column":5}},"loc":{"start":{"line":75,"column":24},"end":{"line":81,"column":5}},"line":75},"17":{"name":"(anonymous_17)","decl":{"start":{"line":82,"column":4},"end":{"line":82,"column":5}},"loc":{"start":{"line":82,"column":19},"end":{"line":84,"column":5}},"line":82},"18":{"name":"(anonymous_18)","decl":{"start":{"line":85,"column":4},"end":{"line":85,"column":5}},"loc":{"start":{"line":85,"column":31},"end":{"line":102,"column":5}},"line":85},"19":{"name":"(anonymous_19)","decl":{"start":{"line":103,"column":4},"end":{"line":103,"column":5}},"loc":{"start":{"line":103,"column":19},"end":{"line":109,"column":5}},"line":103},"20":{"name":"(anonymous_20)","decl":{"start":{"line":106,"column":19},"end":{"line":106,"column":20}},"loc":{"start":{"line":106,"column":28},"end":{"line":108,"column":9}},"line":106},"21":{"name":"(anonymous_21)","decl":{"start":{"line":110,"column":4},"end":{"line":110,"column":5}},"loc":{"start":{"line":110,"column":19},"end":{"line":121,"column":5}},"line":110},"22":{"name":"(anonymous_22)","decl":{"start":{"line":111,"column":30},"end":{"line":111,"column":31}},"loc":{"start":{"line":111,"column":48},"end":{"line":115,"column":9}},"line":111},"23":{"name":"(anonymous_23)","decl":{"start":{"line":116,"column":37},"end":{"line":116,"column":38}},"loc":{"start":{"line":116,"column":55},"end":{"line":120,"column":9}},"line":116},"24":{"name":"(anonymous_24)","decl":{"start":{"line":122,"column":4},"end":{"line":122,"column":5}},"loc":{"start":{"line":122,"column":34},"end":{"line":169,"column":5}},"line":122},"25":{"name":"(anonymous_25)","decl":{"start":{"line":127,"column":47},"end":{"line":127,"column":48}},"loc":{"start":{"line":127,"column":77},"end":{"line":129,"column":9}},"line":127},"26":{"name":"(anonymous_26)","decl":{"start":{"line":134,"column":55},"end":{"line":134,"column":56}},"loc":{"start":{"line":134,"column":65},"end":{"line":168,"column":9}},"line":134},"27":{"name":"(anonymous_27)","decl":{"start":{"line":137,"column":25},"end":{"line":137,"column":26}},"loc":{"start":{"line":137,"column":43},"end":{"line":152,"column":13}},"line":137},"28":{"name":"(anonymous_28)","decl":{"start":{"line":158,"column":22},"end":{"line":158,"column":23}},"loc":{"start":{"line":158,"column":28},"end":{"line":163,"column":13}},"line":158},"29":{"name":"(anonymous_29)","decl":{"start":{"line":165,"column":22},"end":{"line":165,"column":23}},"loc":{"start":{"line":165,"column":28},"end":{"line":167,"column":13}},"line":165},"30":{"name":"(anonymous_30)","decl":{"start":{"line":170,"column":4},"end":{"line":170,"column":5}},"loc":{"start":{"line":170,"column":24},"end":{"line":180,"column":5}},"line":170},"31":{"name":"(anonymous_31)","decl":{"start":{"line":176,"column":22},"end":{"line":176,"column":23}},"loc":{"start":{"line":176,"column":28},"end":{"line":178,"column":13}},"line":176},"32":{"name":"(anonymous_32)","decl":{"start":{"line":181,"column":4},"end":{"line":181,"column":5}},"loc":{"start":{"line":181,"column":33},"end":{"line":188,"column":5}},"line":181},"33":{"name":"(anonymous_33)","decl":{"start":{"line":189,"column":4},"end":{"line":189,"column":5}},"loc":{"start":{"line":189,"column":29},"end":{"line":202,"column":5}},"line":189}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":8,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":8,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":8,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":5,"column":1}},{"start":{"line":5,"column":6},"end":{"line":8,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":6,"column":4},"end":{"line":6,"column":33}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":6,"column":33}},{"start":{"line":6,"column":4},"end":{"line":6,"column":33}}],"line":6},"4":{"loc":{"start":{"line":9,"column":25},"end":{"line":13,"column":2}},"type":"binary-expr","locations":[{"start":{"line":9,"column":26},"end":{"line":9,"column":30}},{"start":{"line":9,"column":34},"end":{"line":9,"column":57}},{"start":{"line":9,"column":63},"end":{"line":13,"column":1}}],"line":9},"5":{"loc":{"start":{"line":9,"column":63},"end":{"line":13,"column":1}},"type":"cond-expr","locations":[{"start":{"line":9,"column":80},"end":{"line":11,"column":1}},{"start":{"line":11,"column":5},"end":{"line":13,"column":1}}],"line":9},"6":{"loc":{"start":{"line":14,"column":19},"end":{"line":20,"column":1}},"type":"binary-expr","locations":[{"start":{"line":14,"column":20},"end":{"line":14,"column":24}},{"start":{"line":14,"column":28},"end":{"line":14,"column":45}},{"start":{"line":14,"column":50},"end":{"line":20,"column":1}}],"line":14},"7":{"loc":{"start":{"line":15,"column":4},"end":{"line":15,"column":42}},"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":15,"column":42}},{"start":{"line":15,"column":4},"end":{"line":15,"column":42}}],"line":15},"8":{"loc":{"start":{"line":15,"column":8},"end":{"line":15,"column":29}},"type":"binary-expr","locations":[{"start":{"line":15,"column":8},"end":{"line":15,"column":11}},{"start":{"line":15,"column":15},"end":{"line":15,"column":29}}],"line":15},"9":{"loc":{"start":{"line":17,"column":4},"end":{"line":17,"column":141}},"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":17,"column":141}},{"start":{"line":17,"column":4},"end":{"line":17,"column":141}}],"line":17},"10":{"loc":{"start":{"line":17,"column":40},"end":{"line":17,"column":141}},"type":"if","locations":[{"start":{"line":17,"column":40},"end":{"line":17,"column":141}},{"start":{"line":17,"column":40},"end":{"line":17,"column":141}}],"line":17},"11":{"loc":{"start":{"line":17,"column":44},"end":{"line":17,"column":107}},"type":"binary-expr","locations":[{"start":{"line":17,"column":44},"end":{"line":17,"column":59}},{"start":{"line":17,"column":63},"end":{"line":17,"column":107}}],"line":17},"12":{"loc":{"start":{"line":21,"column":22},"end":{"line":23,"column":1}},"type":"binary-expr","locations":[{"start":{"line":21,"column":23},"end":{"line":21,"column":27}},{"start":{"line":21,"column":31},"end":{"line":21,"column":51}},{"start":{"line":21,"column":56},"end":{"line":23,"column":1}}],"line":21},"13":{"loc":{"start":{"line":22,"column":11},"end":{"line":22,"column":61}},"type":"cond-expr","locations":[{"start":{"line":22,"column":37},"end":{"line":22,"column":40}},{"start":{"line":22,"column":43},"end":{"line":22,"column":61}}],"line":22},"14":{"loc":{"start":{"line":22,"column":12},"end":{"line":22,"column":33}},"type":"binary-expr","locations":[{"start":{"line":22,"column":12},"end":{"line":22,"column":15}},{"start":{"line":22,"column":19},"end":{"line":22,"column":33}}],"line":22},"15":{"loc":{"start":{"line":62,"column":12},"end":{"line":64,"column":13}},"type":"if","locations":[{"start":{"line":62,"column":12},"end":{"line":64,"column":13}},{"start":{"line":62,"column":12},"end":{"line":64,"column":13}}],"line":62},"16":{"loc":{"start":{"line":77,"column":8},"end":{"line":79,"column":9}},"type":"if","locations":[{"start":{"line":77,"column":8},"end":{"line":79,"column":9}},{"start":{"line":77,"column":8},"end":{"line":79,"column":9}}],"line":77},"17":{"loc":{"start":{"line":86,"column":8},"end":{"line":100,"column":9}},"type":"if","locations":[{"start":{"line":86,"column":8},"end":{"line":100,"column":9}},{"start":{"line":86,"column":8},"end":{"line":100,"column":9}}],"line":86},"18":{"loc":{"start":{"line":89,"column":13},"end":{"line":100,"column":9}},"type":"if","locations":[{"start":{"line":89,"column":13},"end":{"line":100,"column":9}},{"start":{"line":89,"column":13},"end":{"line":100,"column":9}}],"line":89},"19":{"loc":{"start":{"line":92,"column":13},"end":{"line":100,"column":9}},"type":"if","locations":[{"start":{"line":92,"column":13},"end":{"line":100,"column":9}},{"start":{"line":92,"column":13},"end":{"line":100,"column":9}}],"line":92},"20":{"loc":{"start":{"line":97,"column":12},"end":{"line":99,"column":13}},"type":"if","locations":[{"start":{"line":97,"column":12},"end":{"line":99,"column":13}},{"start":{"line":97,"column":12},"end":{"line":99,"column":13}}],"line":97},"21":{"loc":{"start":{"line":112,"column":12},"end":{"line":114,"column":13}},"type":"if","locations":[{"start":{"line":112,"column":12},"end":{"line":114,"column":13}},{"start":{"line":112,"column":12},"end":{"line":114,"column":13}}],"line":112},"22":{"loc":{"start":{"line":117,"column":12},"end":{"line":119,"column":13}},"type":"if","locations":[{"start":{"line":117,"column":12},"end":{"line":119,"column":13}},{"start":{"line":117,"column":12},"end":{"line":119,"column":13}}],"line":117},"23":{"loc":{"start":{"line":123,"column":8},"end":{"line":125,"column":9}},"type":"if","locations":[{"start":{"line":123,"column":8},"end":{"line":125,"column":9}},{"start":{"line":123,"column":8},"end":{"line":125,"column":9}}],"line":123},"24":{"loc":{"start":{"line":130,"column":8},"end":{"line":132,"column":9}},"type":"if","locations":[{"start":{"line":130,"column":8},"end":{"line":132,"column":9}},{"start":{"line":130,"column":8},"end":{"line":132,"column":9}}],"line":130},"25":{"loc":{"start":{"line":143,"column":20},"end":{"line":147,"column":21}},"type":"if","locations":[{"start":{"line":143,"column":20},"end":{"line":147,"column":21}},{"start":{"line":143,"column":20},"end":{"line":147,"column":21}}],"line":143},"26":{"loc":{"start":{"line":153,"column":12},"end":{"line":155,"column":13}},"type":"if","locations":[{"start":{"line":153,"column":12},"end":{"line":155,"column":13}},{"start":{"line":153,"column":12},"end":{"line":155,"column":13}}],"line":153},"27":{"loc":{"start":{"line":171,"column":8},"end":{"line":179,"column":9}},"type":"if","locations":[{"start":{"line":171,"column":8},"end":{"line":179,"column":9}},{"start":{"line":171,"column":8},"end":{"line":179,"column":9}}],"line":171},"28":{"loc":{"start":{"line":183,"column":12},"end":{"line":185,"column":13}},"type":"if","locations":[{"start":{"line":183,"column":12},"end":{"line":185,"column":13}},{"start":{"line":183,"column":12},"end":{"line":185,"column":13}}],"line":183},"29":{"loc":{"start":{"line":192,"column":12},"end":{"line":199,"column":13}},"type":"if","locations":[{"start":{"line":192,"column":12},"end":{"line":199,"column":13}},{"start":{"line":192,"column":12},"end":{"line":199,"column":13}}],"line":192},"30":{"loc":{"start":{"line":192,"column":16},"end":{"line":196,"column":52}},"type":"binary-expr","locations":[{"start":{"line":192,"column":16},"end":{"line":192,"column":36}},{"start":{"line":192,"column":40},"end":{"line":192,"column":59}},{"start":{"line":193,"column":16},"end":{"line":193,"column":32}},{"start":{"line":193,"column":36},"end":{"line":193,"column":58}},{"start":{"line":194,"column":16},"end":{"line":194,"column":34}},{"start":{"line":194,"column":38},"end":{"line":194,"column":55}},{"start":{"line":195,"column":16},"end":{"line":195,"column":33}},{"start":{"line":195,"column":37},"end":{"line":195,"column":55}},{"start":{"line":196,"column":16},"end":{"line":196,"column":31}},{"start":{"line":196,"column":35},"end":{"line":196,"column":52}}],"line":192}},"s":{"0":1,"1":144,"2":144,"3":144,"4":0,"5":0,"6":0,"7":0,"8":1,"9":1,"10":0,"11":1,"12":1,"13":0,"14":1,"15":1,"16":1,"17":144,"18":144,"19":1,"20":1,"21":1,"22":4,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":1},"f":{"0":144,"1":0,"2":0,"3":1,"4":0,"5":1,"6":4,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0},"b":{"0":[1,1,1],"1":[1,0],"2":[144,0],"3":[0,0],"4":[1,1,1],"5":[1,0],"6":[1,1,1],"7":[0,1],"8":[1,1],"9":[1,0],"10":[144,0],"11":[144,144],"12":[1,1,1],"13":[3,1],"14":[4,4],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0,0,0,0,0,0,0,0,0]},"inputSourceMap":{"version":3,"file":"/Users/user/project_team147/src/controller/InsightFacade.ts","sources":["/Users/user/project_team147/src/controller/InsightFacade.ts"],"names":[],"mappings":"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","sourcesContent":["import {IInsightFacade, InsightDataset, InsightDatasetKind, InsightError, NotFoundError} from \"./IInsightFacade\";\nimport * as fs from \"fs-extra\";\nimport Course from \"../model/Course\";\nimport Section from \"../model/Section\";\nimport JSZip, {JSZipObject} from \"jszip\";\nimport Dataset from \"../model/Dataset\";\nimport Query from \"../model/Query\";\n\n\n/**\n * This is the main programmatic entry point for the project.\n * Method documentation is in IInsightFacade\n *\n */\nexport default class InsightFacade implements IInsightFacade {\n\tprivate dataSets: string[] = [];\n\tprivate insightDatasets: InsightDataset[] = [];\n\tconstructor() {\n\t\t// console.trace(\"InsightFacadeImpl::init()\");\n\t}\n\n\tpublic addDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]> {\n\t\tconst isValid = this.isIDAndKindValid(id, kind);\n\t\tconst isUnzipped = this.unzip(content);\n\t\treturn Promise.all([isValid, isUnzipped])\n\t\t\t.then((promises) => {\n\t\t\t\t// console.log(promises[0]); // testing\n\t\t\t\treturn this.processData(id, promises[1]);\n\t\t\t}).then((message) => {\n\t\t\t\t// console.log(message); // testing\n\t\t\t\t// this.dataSets.push(id);\n\t\t\t\tlet insight: InsightDataset = {\n\t\t\t\t\tid : id,\n\t\t\t\t\tkind : kind,\n\t\t\t\t\tnumRows : message\n\t\t\t\t};\n\t\t\t\tthis.insightDatasets.push(insight);\n\t\t\t\tthis.dataSets.push(id);\n\t\t\t\tlet listOfAddedIDs: string[] = [];\n\t\t\t\tfor (const dataset of this.insightDatasets) {\n\t\t\t\t\tlistOfAddedIDs.push(dataset.id);\n\t\t\t\t}\n\t\t\t\treturn Promise.resolve(listOfAddedIDs);\n\t\t\t}).catch((err) => {\n\t\t\t\t// console.log(err.toString()); // testing\n\t\t\t\treturn Promise.reject(new InsightError(err));\n\t\t\t});\n\t}\n\n\tpublic removeDataset(id: string): Promise<string> {\n\t\t// check the id is valid\n\t\treturn this.isIDAndKindValid(id, InsightDatasetKind.Courses)\n\t\t\t.then(() => {\n\t\t\t\tif (!this.dataSets.includes(id)) {\n\t\t\t\t\t// console.log(\"no such id exists\");\n\t\t\t\t\treturn Promise.reject(new NotFoundError());\n\t\t\t\t}\n\t\t\t\tthis.removeData(id);\n\t\t\t\treturn fs.remove(\"./data/\" + id)\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\treturn Promise.resolve(id);\n\t\t\t\t\t})\n\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\t// console.log(err.toString());\n\t\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tpublic performQuery(query: any): Promise<any[]> {\n\t\tconst q1 = new Query();\n\t\tif (!q1.isValidQuery(query)) {\n\t\t\treturn Promise.reject(new InsightError());\n\t\t}\n\t\t// let isValid = q1.isValidQuery(query);\n\t\t// \t\t// if (isValid) {\n\t\t// \t\t// \t// let datasetToLoad = q1.getID;\n\t\t// \t\t// }\n\t\t// const listOfCourses: Course[] = loadDataSet(q1.datasetID);\n\n\t\t// q1.course = loadCourses(q1.datasetID); // returns an array of courses\n\t\t// const where = ...\n\t\t// const options = ...\n\n\t\t// return q1.process(where, options , key);\n\t\treturn Promise.resolve([]);\n\t}\n\n\tpublic listDatasets(): Promise<InsightDataset[]> {\n\t\treturn Promise.resolve(this.insightDatasets);\n\t}\n\n\t// private loadDataSet(datasetID: string): Course[] {\n\t// \tlet data = fs.readFileSync(\"./data/\" + datasetID);\n\t// \treturn [];\n\t// }\n\t/**\n\t * Checks the id and kind of dataset validity\n\t * @param id the id of the dataset\n\t * @param kind the kind of dataset (room or courses)\n\t * @return Promise <string[]>\n\t */\n\tprivate isIDAndKindValid(id: string, kind: InsightDatasetKind): Promise<string> {\n\t\tif (kind === InsightDatasetKind.Rooms) {\n\t\t\treturn Promise.reject(new InsightError()); // \"isIDAndKindValid: InsightDatasetKind is Rooms!\"\n\t\t} else if (this.dataSets.includes(id)) {\n\t\t\treturn Promise.reject(new InsightError()); // \"isIDAndKindValid: id was already added!\")\n\t\t} else if (id.includes(\"_\")) {\n\t\t\treturn Promise.reject(new InsightError()); // \"isIDAndKindValid: id includes underscore!\"\n\t\t} else {\n\t\t\tlet trimmedID: string = id.replace(/ /g, \"\");\n\n\t\t\tif (trimmedID.length === 0) {\n\t\t\t\treturn Promise.reject(new InsightError()); // \"isIDAndKindValid: id was an empty string or only spaces!\"\n\t\t\t}\n\t\t}\n\t\treturn Promise.resolve(\"isIDAndKindValid: id and kind is valid\");\n\t}\n\n\tprivate unzip(content: string): Promise<any> {\n\t\t// TODO: check to see if content is a zipfile\n\t\tconst zip = new JSZip();\n\t\treturn zip.loadAsync(content, {base64: true})\n\t\t\t.catch((err: any) => {\n\t\t\t\t// console.log(\"unzip: failed\");\n\t\t\t\treturn Promise.reject(new InsightError(err));\n\t\t\t});\n\t}\n\n\tprivate removeData(id: string) {\n\t\tthis.dataSets.forEach((value, index) => {\n\t\t\tif(value === id) {\n\t\t\t\tthis.dataSets.splice(index,1);\n\t\t\t}\n\t\t});\n\t\tthis.insightDatasets.forEach((value, index) => {\n\t\t\tif (value.id === id) {\n\t\t\t\tthis.insightDatasets.splice(index, 1);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * @param unzippedData\n\t * @private\n\t */\n\t// skip invalid JSONs, need at least 1 json file to continue or FAIL\n\t// skip invalid sections, if 1 is valid then ok; else, skip file\n\t// If no valid sections have been added, don't add dataset\n\n\t// check validity:1. there is at least 1 valid course section (non-empty file), a valid json format, and in valid directory (courses)\n\n\t// const path = \"project_team147/data/courses/\";\n\t// storing into disk (not everything)\n\t// if anything failed: return Promise.reject\n\t// return Promise.reject(InsightError)\n\tprivate processData(id: string, unzippedData: any): Promise<any> {\n\t\tif (!this.directoryCoursesExists(unzippedData)) {\n\t\t\t// console.log(\"processData: Directory courses not found!\");\n\t\t\treturn Promise.reject(new InsightError());\n\t\t}\n\t\tlet listOfFilesToBeLoaded: Array<Promise<any>> = [];\n\t\tunzippedData.folder(\"courses\").forEach(function (relativePath: any, file: JSZipObject) {\n\t\t\tlistOfFilesToBeLoaded.push(file.async(\"text\")); // what does .async do here?\n\t\t});\n\t\tif (!fs.pathExistsSync(\"./data/\")) {\n\t\t\tfs.mkdirSync(\"./data/\");\n\t\t}\n\t\tlet courses: Course[] = [];\n\t\treturn Promise.all(listOfFilesToBeLoaded).then((data) => {\n\t\t\tlet containsOneOrMoreJsonFiles = false;\n\t\t\tlet counter = 0;\n\t\t\tdata.forEach((courseObject: string) => {\n\t\t\t\tlet sections: Section[] = [];\n\t\t\t\ttry {\n\t\t\t\t\tconst sectionArr = JSON.parse(courseObject);\n\t\t\t\t\tsections = this.createSections(sectionArr.result);\n\t\t\t\t\tcounter += sections.length;\n\t\t\t\t\tif (sections.length > 0) {\n\t\t\t\t\t\tconst courseID = sections[0].dept + \"-\" + sections[0].id; // assuming sections is not empty\n\t\t\t\t\t\tconst course: Course = new Course(courseID, sections);\n\t\t\t\t\t\tcourses.push(course);\n\t\t\t\t\t}\n\t\t\t\t\tcontainsOneOrMoreJsonFiles = true;\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// console.log(\"do nothing to the invalid json file\");\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (!containsOneOrMoreJsonFiles) {\n\t\t\t\treturn Promise.reject(new InsightError());\n\t\t\t}\n\t\t\tlet listOfCoursesToBeStored: Array<Promise<any>> = [];\n\t\t\tthis.createDirectory(id)\n\t\t\t\t.then(() => {\n\t\t\t\t\tfor (const course of courses) {\n\t\t\t\t\t\tconst path = \"./data/\" + id + \"/\" +  course.id + \".json\";\n\t\t\t\t\t\tlistOfFilesToBeLoaded.push(fs.writeJSON(path, course.toJson()));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\treturn Promise.all(listOfCoursesToBeStored)\n\t\t\t\t.then(() => {\n\t\t\t\t\treturn counter;\n\t\t\t\t});\n\t\t});\n\t}\n\n\tprivate createDirectory(id: string): Promise<any> {\n\t\tif (fs.pathExistsSync(\"./data/\")) {\n\t\t\treturn fs.mkdir(\"./data/\" + id);\n\t\t} else {\n\t\t\treturn fs.mkdir(\"./data/\")\n\t\t\t\t.then(() => {\n\t\t\t\t\treturn fs.mkdir(\"./data/\" + id);\n\t\t\t\t});\n\t\t}\n\t}\n\n\tprivate directoryCoursesExists(data: any): boolean {\n\t\tfor (const file of Object.keys(data.files)) {\n\t\t\tif (file.toString().split(\"/\")[0] === \"courses\") {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * let sections = list of Sections\n\t * inside each loop:\n\t * let Section section;\n\t * extract all fields (ex. dept) store on a local variable\n\t * instantiate section\n\t * add it to List of Section\n\t * return List after looping through all sections\n\t */\n\tprivate createSections(sections: any): Section[] {\n\t\tlet listOfSections: Section[] = [];\n\t\tfor (const section of sections) {\n\t\t\tif (\"Section\" in section && \"Course\" in section &&\n\t\t\t\t\"Avg\" in section && \"Professor\" in section &&\n\t\t\t\t\"Title\" in section && \"Pass\" in section &&\n\t\t\t\t\"Fail\" in section && \"Audit\" in section &&\n\t\t\t\t\"id\" in section && \"Year\" in section) {\n\t\t\t\tconst s: Section = new Section(section.Subject, section.Course, section.Avg, section.Professor,\n\t\t\t\t\tsection.Title, section.Pass, section.Fail, section.Audit, section.id, section.Year);\n\t\t\t\tlistOfSections.push(s);\n\t\t\t}\n\t\t}\n\t\treturn listOfSections;\n\t}\n}\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5be23f8b51f8f25e08a847df0f33eabfee561794","contentHash":"d2f552414c117c22e24d84563f9a5ed2b5ad77cefeccdfdf524593ab4f3bd77a"},"/Users/user/project_team147/src/model/Course.ts":{"path":"/Users/user/project_team147/src/model/Course.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":5,"column":8},"end":{"line":5,"column":28}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":34}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":22}},"4":{"start":{"line":10,"column":25},"end":{"line":10,"column":28}},"5":{"start":{"line":11,"column":8},"end":{"line":13,"column":9}},"6":{"start":{"line":12,"column":12},"end":{"line":12,"column":50}},"7":{"start":{"line":14,"column":8},"end":{"line":14,"column":26}},"8":{"start":{"line":15,"column":8},"end":{"line":15,"column":26}},"9":{"start":{"line":18,"column":8},"end":{"line":18,"column":24}},"10":{"start":{"line":21,"column":8},"end":{"line":21,"column":30}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":4},"end":{"line":4,"column":5}},"loc":{"start":{"line":4,"column":30},"end":{"line":8,"column":5}},"line":4},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":13},"end":{"line":16,"column":5}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":13},"end":{"line":19,"column":5}},"line":17},"3":{"name":"(anonymous_3)","decl":{"start":{"line":20,"column":4},"end":{"line":20,"column":5}},"loc":{"start":{"line":20,"column":19},"end":{"line":22,"column":5}},"line":20}},"branchMap":{},"s":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1},"f":{"0":0,"1":0,"2":0,"3":0},"b":{},"inputSourceMap":{"version":3,"file":"/Users/user/project_team147/src/model/Course.ts","sources":["/Users/user/project_team147/src/model/Course.ts"],"names":[],"mappings":";;AAEA,MAAqB,MAAM;IAI1B,YAAY,EAAU,EAAE,QAAmB;QAH1B,cAAS,GAAc,EAAE,CAAC;QAI1C,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;IACf,CAAC;IAIM,MAAM;QACZ,IAAI,UAAU,GAAG,GAAG,CAAC;QACrB,KAAK,MAAM,OAAO,IAAI,IAAI,CAAC,SAAS,EAAE;YACrC,UAAU,IAAI,OAAO,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC;SACtC;QACD,UAAU,IAAI,GAAG,CAAC;QAClB,OAAO,UAAU,CAAC;IACnB,CAAC;IAED,IAAW,EAAE;QACZ,OAAO,IAAI,CAAC,GAAG,CAAC;IACjB,CAAC;IAED,IAAW,QAAQ;QAClB,OAAO,IAAI,CAAC,SAAS,CAAC;IACvB,CAAC;CACD;AA3BD,yBA2BC","sourcesContent":["import Section from \"./Section\";\n\nexport default class Course {\n\tprivate readonly _sections: Section[] = [];\n\tprivate readonly _id: string;\n\n\tconstructor(id: string, sections: Section[]) {\n\t\tthis._sections = sections;\n\t\tthis._id = id;\n\t}\n\n// toString method looping through the section and creating the json.\n\n\tpublic toJson(): string {\n\t\tlet jsonString = \"[\";\n\t\tfor (const section of this._sections) {\n\t\t\tjsonString += section.toJson() + \", \";\n\t\t}\n\t\tjsonString += \"]\";\n\t\treturn jsonString;\n\t}\n\n\tpublic get id(): string {\n\t\treturn this._id;\n\t}\n\n\tpublic get sections(): Section[] {\n\t\treturn this._sections;\n\t}\n}\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"0c760ef0b5f9baf5376252ecb30ea9d9eb725bfb","contentHash":"e351d298485325fd1796e5733c9073b7ce835c46002d89b47249be469cc98ccc"},"/Users/user/project_team147/src/model/Section.ts":{"path":"/Users/user/project_team147/src/model/Section.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":5,"column":8},"end":{"line":5,"column":26}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":22}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":23}},"4":{"start":{"line":8,"column":8},"end":{"line":8,"column":37}},"5":{"start":{"line":9,"column":8},"end":{"line":9,"column":27}},"6":{"start":{"line":10,"column":8},"end":{"line":10,"column":25}},"7":{"start":{"line":11,"column":8},"end":{"line":11,"column":25}},"8":{"start":{"line":12,"column":8},"end":{"line":12,"column":27}},"9":{"start":{"line":13,"column":8},"end":{"line":13,"column":25}},"10":{"start":{"line":14,"column":8},"end":{"line":14,"column":25}},"11":{"start":{"line":17,"column":8},"end":{"line":28,"column":11}},"12":{"start":{"line":31,"column":8},"end":{"line":31,"column":26}},"13":{"start":{"line":34,"column":8},"end":{"line":34,"column":24}},"14":{"start":{"line":37,"column":0},"end":{"line":37,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":4},"end":{"line":4,"column":5}},"loc":{"start":{"line":4,"column":81},"end":{"line":15,"column":5}},"line":4},"1":{"name":"(anonymous_1)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":13},"end":{"line":29,"column":5}},"line":16},"2":{"name":"(anonymous_2)","decl":{"start":{"line":30,"column":4},"end":{"line":30,"column":5}},"loc":{"start":{"line":30,"column":15},"end":{"line":32,"column":5}},"line":30},"3":{"name":"(anonymous_3)","decl":{"start":{"line":33,"column":4},"end":{"line":33,"column":5}},"loc":{"start":{"line":33,"column":13},"end":{"line":35,"column":5}},"line":33}},"branchMap":{},"s":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1},"f":{"0":0,"1":0,"2":0,"3":0},"b":{},"inputSourceMap":{"version":3,"file":"/Users/user/project_team147/src/model/Section.ts","sources":["/Users/user/project_team147/src/model/Section.ts"],"names":[],"mappings":";;AAEA,MAAqB,OAAO;IAY3B,YAAY,IAAY,EAAE,EAAU,EAAE,GAAW,EAAE,UAAkB,EAAE,KAAa,EAAE,IAAY,EACjG,IAAY,EAAE,KAAa,EAAE,IAAY,EAAE,IAAY;QACvD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;QACd,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IAClB,CAAC;IAEM,MAAM;QACZ,OAAO,IAAI,CAAC,SAAS,CAAC;YACrB,IAAI,EAAE,IAAI,CAAC,KAAK;YAChB,EAAE,EAAE,IAAI,CAAC,GAAG;YACZ,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,IAAI,EAAE,IAAI,CAAC,IAAI;SACf,CAAC,CAAC;IACJ,CAAC;IAiBD,IAAW,IAAI;QACd,OAAO,IAAI,CAAC,KAAK,CAAC;IACnB,CAAC;IAED,IAAW,EAAE;QACZ,OAAO,IAAI,CAAC,GAAG,CAAC;IACjB,CAAC;CACD;AA/DD,0BA+DC","sourcesContent":["\n\nexport default class Section {\n\tprivate readonly _dept: string; // saved as subject \"aanb\"\n\tprivate readonly _id: string; // file name  \"551\"\n\tprivate readonly avg: number; // possibly sort base on average\n\tprivate readonly instructor: string;\n\tprivate readonly title: string;\n\tprivate readonly pass: number;\n\tprivate readonly fail: number;\n\tprivate readonly audit: number\n\tprivate readonly uuid: string; // saved as id\n\tprivate readonly year: number;\n\n\tconstructor(dept: string, id: string, avg: number, instructor: string, title: string, pass: number,\n\t\tfail: number, audit: number, uuid: string, year: number) {\n\t\tthis._dept = dept;\n\t\tthis._id = id;\n\t\tthis.avg = avg;\n\t\tthis.instructor = instructor;\n\t\tthis.title = title;\n\t\tthis.pass = pass;\n\t\tthis.fail = fail;\n\t\tthis.audit = audit;\n\t\tthis.uuid = uuid;\n\t\tthis.year = year;\n\t}\n\n\tpublic toJson(): string {\n\t\treturn JSON.stringify({\n\t\t\tdept: this._dept,\n\t\t\tid: this._id,\n\t\t\tavg: this.avg,\n\t\t\tinstructor: this.instructor,\n\t\t\ttitle: this.title,\n\t\t\tpass: this.pass,\n\t\t\tfail: this.fail,\n\t\t\taudit: this.audit,\n\t\t\tuuid: this.uuid,\n\t\t\tyear: this.year\n\t\t});\n\t}\n\n\t// public jsonToSection(): string {\n\t// \treturn JSON.parse({\n\t// \t\tdept: this._dept,\n\t// \t\tid: this._id,\n\t// \t\tavg: this.avg,\n\t// \t\tinstructor: this.instructor,\n\t// \t\ttitle: this.title,\n\t// \t\tpass: this.pass,\n\t// \t\tfail: this.fail,\n\t// \t\taudit: this.audit,\n\t// \t\tuuid: this.uuid,\n\t// \t\tyear: this.year\n\t// \t});\n\t// }\n\n\tpublic get dept(): string {\n\t\treturn this._dept;\n\t}\n\n\tpublic get id(): string {\n\t\treturn this._id;\n\t}\n}\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"794aec395d4ba80c5bf0fc18a04a3b5f92434afe","contentHash":"9a5c61358b4748c195b4755ed3df8d3661251460b9c916026b593f864e7906ae"},"/Users/user/project_team147/src/model/Query.ts":{"path":"/Users/user/project_team147/src/model/Query.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":25},"end":{"line":6,"column":69}},"4":{"start":{"line":10,"column":8},"end":{"line":10,"column":29}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":34}},"6":{"start":{"line":14,"column":29},"end":{"line":14,"column":59}},"7":{"start":{"line":15,"column":8},"end":{"line":17,"column":9}},"8":{"start":{"line":16,"column":12},"end":{"line":16,"column":25}},"9":{"start":{"line":18,"column":19},"end":{"line":18,"column":43}},"10":{"start":{"line":19,"column":8},"end":{"line":19,"column":45}},"11":{"start":{"line":20,"column":8},"end":{"line":20,"column":51}},"12":{"start":{"line":23,"column":8},"end":{"line":24,"column":9}},"13":{"start":{"line":25,"column":8},"end":{"line":25,"column":31}},"14":{"start":{"line":28,"column":17},"end":{"line":28,"column":38}},"15":{"start":{"line":30,"column":8},"end":{"line":48,"column":9}},"16":{"start":{"line":31,"column":12},"end":{"line":31,"column":25}},"17":{"start":{"line":33,"column":13},"end":{"line":48,"column":9}},"18":{"start":{"line":34,"column":12},"end":{"line":34,"column":34}},"19":{"start":{"line":36,"column":13},"end":{"line":48,"column":9}},"20":{"start":{"line":37,"column":12},"end":{"line":37,"column":35}},"21":{"start":{"line":39,"column":13},"end":{"line":48,"column":9}},"22":{"start":{"line":40,"column":25},"end":{"line":40,"column":45}},"23":{"start":{"line":41,"column":12},"end":{"line":41,"column":45}},"24":{"start":{"line":43,"column":13},"end":{"line":48,"column":9}},"25":{"start":{"line":44,"column":30},"end":{"line":44,"column":50}},"26":{"start":{"line":45,"column":12},"end":{"line":45,"column":52}},"27":{"start":{"line":51,"column":8},"end":{"line":51,"column":20}},"28":{"start":{"line":54,"column":8},"end":{"line":54,"column":20}},"29":{"start":{"line":57,"column":8},"end":{"line":57,"column":20}},"30":{"start":{"line":60,"column":8},"end":{"line":60,"column":20}},"31":{"start":{"line":63,"column":0},"end":{"line":63,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":18},"end":{"line":12,"column":5}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":24},"end":{"line":21,"column":5}},"line":13},"3":{"name":"(anonymous_3)","decl":{"start":{"line":22,"column":4},"end":{"line":22,"column":5}},"loc":{"start":{"line":22,"column":20},"end":{"line":26,"column":5}},"line":22},"4":{"name":"(anonymous_4)","decl":{"start":{"line":27,"column":4},"end":{"line":27,"column":5}},"loc":{"start":{"line":27,"column":23},"end":{"line":49,"column":5}},"line":27},"5":{"name":"(anonymous_5)","decl":{"start":{"line":50,"column":4},"end":{"line":50,"column":5}},"loc":{"start":{"line":50,"column":41},"end":{"line":52,"column":5}},"line":50},"6":{"name":"(anonymous_6)","decl":{"start":{"line":53,"column":4},"end":{"line":53,"column":5}},"loc":{"start":{"line":53,"column":22},"end":{"line":55,"column":5}},"line":53},"7":{"name":"(anonymous_7)","decl":{"start":{"line":56,"column":4},"end":{"line":56,"column":5}},"loc":{"start":{"line":56,"column":28},"end":{"line":58,"column":5}},"line":56},"8":{"name":"(anonymous_8)","decl":{"start":{"line":59,"column":4},"end":{"line":59,"column":5}},"loc":{"start":{"line":59,"column":24},"end":{"line":61,"column":5}},"line":59}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":15,"column":8},"end":{"line":17,"column":9}},"type":"if","locations":[{"start":{"line":15,"column":8},"end":{"line":17,"column":9}},{"start":{"line":15,"column":8},"end":{"line":17,"column":9}}],"line":15},"4":{"loc":{"start":{"line":23,"column":8},"end":{"line":24,"column":9}},"type":"if","locations":[{"start":{"line":23,"column":8},"end":{"line":24,"column":9}},{"start":{"line":23,"column":8},"end":{"line":24,"column":9}}],"line":23},"5":{"loc":{"start":{"line":30,"column":8},"end":{"line":48,"column":9}},"type":"if","locations":[{"start":{"line":30,"column":8},"end":{"line":48,"column":9}},{"start":{"line":30,"column":8},"end":{"line":48,"column":9}}],"line":30},"6":{"loc":{"start":{"line":33,"column":13},"end":{"line":48,"column":9}},"type":"if","locations":[{"start":{"line":33,"column":13},"end":{"line":48,"column":9}},{"start":{"line":33,"column":13},"end":{"line":48,"column":9}}],"line":33},"7":{"loc":{"start":{"line":36,"column":13},"end":{"line":48,"column":9}},"type":"if","locations":[{"start":{"line":36,"column":13},"end":{"line":48,"column":9}},{"start":{"line":36,"column":13},"end":{"line":48,"column":9}}],"line":36},"8":{"loc":{"start":{"line":39,"column":13},"end":{"line":48,"column":9}},"type":"if","locations":[{"start":{"line":39,"column":13},"end":{"line":48,"column":9}},{"start":{"line":39,"column":13},"end":{"line":48,"column":9}}],"line":39},"9":{"loc":{"start":{"line":39,"column":17},"end":{"line":39,"column":58}},"type":"binary-expr","locations":[{"start":{"line":39,"column":17},"end":{"line":39,"column":28}},{"start":{"line":39,"column":32},"end":{"line":39,"column":43}},{"start":{"line":39,"column":47},"end":{"line":39,"column":58}}],"line":39},"10":{"loc":{"start":{"line":43,"column":13},"end":{"line":48,"column":9}},"type":"if","locations":[{"start":{"line":43,"column":13},"end":{"line":48,"column":9}},{"start":{"line":43,"column":13},"end":{"line":48,"column":9}}],"line":43}},"s":{"0":1,"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1},"f":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0],"10":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/user/project_team147/src/model/Query.ts","sources":["/Users/user/project_team147/src/model/Query.ts"],"names":[],"mappings":";;;;;AAAA,sEAA8C;AAqB9C,IAAI,SAAiB,CAAC;AACtB,MAAqB,KAAK;IAA1B;QACS,eAAU,GAAW,EAAE,CAAC;QACxB,iBAAY,GAAG,KAAK,CAAC;IAiF9B,CAAC;IA/EO,YAAY,CAAC,KAAU;QAC7B,IAAI,cAAc,GAAmB,IAAI,wBAAc,EAAE,CAAC;QAC1D,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE;YACzC,OAAO,KAAK,CAAC;SACb;QACD,IAAI,IAAI,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QACpC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACrC,OAAO,cAAc,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAC5C,CAAC;IAGD,IAAW,SAAS;QACnB,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;SAEvB;QACD,OAAO,IAAI,CAAC,UAAU,CAAC;IACxB,CAAC;IAwBM,WAAW,CAAC,KAAkB;QAEpC,IAAI,EAAE,GAAW,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QACvC,IAAI,WAAwB,CAAC;QAC7B,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;YACpC,OAAO,KAAK,CAAC;SACb;aAAK,IAAI,IAAI,KAAK,EAAE,EAAE;YACtB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SACtB;aAAM,IAAI,KAAK,KAAK,EAAE,EAAE;YACxB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;SACvB;aAAM,IAAI,IAAI,KAAK,EAAE,IAAI,IAAI,KAAK,EAAE,IAAI,IAAI,KAAK,EAAE,EAAE;YACrD,IAAI,MAAM,GAAQ,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YACvC,IAAI,CAAC,eAAe,CAAC,EAAE,EAAC,MAAM,CAAC,CAAC;SAChC;aAAM,IAAI,IAAI,KAAK,EAAE,EAAE;YACvB,IAAI,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YACvC,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;SACxC;aAAM;SAEN;IACF,CAAC;IAGM,eAAe,CAAC,UAAe,EAAE,OAAY;QACnD,OAAO,IAAI,CAAC;IACb,CAAC;IAEM,UAAU,CAAC,KAAU;QAC3B,OAAO,IAAI,CAAC;IACb,CAAC;IAEM,aAAa,CAAC,QAAa;QACjC,OAAO,IAAI,CAAC;IACb,CAAC;IAGM,aAAa,CAAC,IAAkB;QACtC,OAAO,IAAI,CAAC;IACb,CAAC;CAED;AAnFD,wBAmFC","sourcesContent":["import QueryValidator from \"./QueryValidator\";\n\nexport interface QueryOBJ {\n\tWHERE?: QueryFilter;\n\tOPTIONS?: QueryOptions;\n}\n\nexport interface QueryOptions {\n\tCOLUMNS?: QueryOptions;\n\t// order\n}\n\nexport interface QueryFilter {\n\t[key: string]: any\n}\n\nexport interface QueryResult {\n\tResult: [];\n}\n\n\nlet datasetID: string;\nexport default class Query {\n\tprivate _datasetID: string = \"\";\n\tprivate isQueryValid = false;\n\n\tpublic isValidQuery(query: any): boolean {\n\t\tlet queryValidator: QueryValidator = new QueryValidator();\n\t\tif (!queryValidator.queryValidate(query)) {\n\t\t\treturn false;\n\t\t}\n\t\tlet qkey = query.OPTIONS.COLUMNS[0];\n\t\tthis._datasetID = qkey.split(\"_\")[0];\n\t\treturn queryValidator.queryValidate(query);\n\t}\n\n\n\tpublic get datasetID() {\n\t\tif (!this.isQueryValid) {\n\t\t\t// error because its invalid\n\t\t}\n\t\treturn this._datasetID;\n\t}\n\n// TODO processQuery\n\t// public process(where, options): Promise<any> {\n\t// \t// figure out\n\t// \tthis.handleWhere(where);\n\t// \t// with handle Where we need to store the appropriate sections in a separate array\n\t// \tthis.handleOptions(options);\n\t// \t// which folder/dataset to load\n\t// \t// instantiate all sections\n\t//\n\t// }\n\n\n\t/**\n\t * Responsible for the Where block in Query\n\t * rei\n\t * 1) check if the inside of the WHERE is empty, return entire dataset; otherwise continue\n\t * 2) check what type of filter is applied (Logic, M/S Comparator, Negation)\n\t * 3) if Logic: call applyLogic method\n\t * 4) if M/S Comparator: call applyComparator method\n\t * 5) if Negation: call applyNegation method.\n\t * @param where : value of the where key, Filter.\n\t */\n\tpublic handleWhere(where: QueryFilter) {\n\t\t// if (Object.keys(where).length === 0)\n\t\tlet op: string = Object.keys(where)[0];\t\t\t\t// operator\t\t-> this will return either \"AND\", \"OR\", \"GT\", etc\n\t\tlet queryResult: QueryResult;\t\t\t\t\t\t// result instantiated\n\t\tif (Object.keys(where).length === 0) {\n\t\t\treturn false;\n\t\t}else if (\"OR\" === op) {\n\t\t\tthis.applyLogic(\"OR\");\n\t\t} else if (\"AND\" === op) {\n\t\t\tthis.applyLogic(\"AND\");\n\t\t} else if (\"LT\" === op || \"GT\" === op || \"EQ\" === op) {\n\t\t\tlet number: any = Object.values(op)[0];\t\t\t// value of the op object at position 0 (this will return the value)\n\t\t\tthis.applyComparator(op,number);\n\t\t} else if (\"IS\" === op) {\n\t\t\tlet inputString = Object.values(op)[0];\n\t\t\tthis.applyComparator(\"IS\", inputString);\n\t\t} else {\n\t\t\t// fail\n\t\t}\n\t}\n\n\n\tpublic applyComparator(comparator: any, operand: any) {\n\t\treturn this;\n\t}\n\n\tpublic applyLogic(logic: any) {\n\t\treturn this;\n\t}\n\n\tpublic applyNegation(negation: any) {\n\t\treturn this;\n\t}\n\n\n\tpublic handleOptions(opts: QueryOptions) {\n\t\treturn this;\n\t}\n\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"380556c8532ce7cd41a29a7f332b5d7613ea7295","contentHash":"8e409386787b54d8ae4ca0f31e288609d54d5c3aa486d1ee7c2acea7f6549340"},"/Users/user/project_team147/src/model/QueryValidator.ts":{"path":"/Users/user/project_team147/src/model/QueryValidator.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":6,"column":8},"end":{"line":8,"column":9}},"2":{"start":{"line":7,"column":12},"end":{"line":7,"column":25}},"3":{"start":{"line":11,"column":8},"end":{"line":18,"column":11}},"4":{"start":{"line":12,"column":12},"end":{"line":14,"column":13}},"5":{"start":{"line":13,"column":16},"end":{"line":13,"column":35}},"6":{"start":{"line":15,"column":12},"end":{"line":17,"column":13}},"7":{"start":{"line":16,"column":16},"end":{"line":16,"column":37}},"8":{"start":{"line":19,"column":25},"end":{"line":19,"column":45}},"9":{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},"10":{"start":{"line":21,"column":12},"end":{"line":21,"column":25}},"11":{"start":{"line":23,"column":8},"end":{"line":25,"column":9}},"12":{"start":{"line":24,"column":12},"end":{"line":24,"column":25}},"13":{"start":{"line":26,"column":25},"end":{"line":26,"column":43}},"14":{"start":{"line":27,"column":8},"end":{"line":29,"column":9}},"15":{"start":{"line":28,"column":12},"end":{"line":28,"column":25}},"16":{"start":{"line":30,"column":24},"end":{"line":30,"column":45}},"17":{"start":{"line":31,"column":8},"end":{"line":33,"column":9}},"18":{"start":{"line":32,"column":12},"end":{"line":32,"column":25}},"19":{"start":{"line":34,"column":8},"end":{"line":34,"column":20}},"20":{"start":{"line":37,"column":8},"end":{"line":40,"column":9}},"21":{"start":{"line":39,"column":12},"end":{"line":39,"column":25}},"22":{"start":{"line":41,"column":8},"end":{"line":45,"column":9}},"23":{"start":{"line":42,"column":12},"end":{"line":44,"column":13}},"24":{"start":{"line":43,"column":16},"end":{"line":43,"column":29}},"25":{"start":{"line":46,"column":8},"end":{"line":50,"column":9}},"26":{"start":{"line":47,"column":12},"end":{"line":49,"column":13}},"27":{"start":{"line":48,"column":16},"end":{"line":48,"column":29}},"28":{"start":{"line":51,"column":8},"end":{"line":55,"column":9}},"29":{"start":{"line":52,"column":12},"end":{"line":54,"column":13}},"30":{"start":{"line":53,"column":16},"end":{"line":53,"column":29}},"31":{"start":{"line":56,"column":8},"end":{"line":60,"column":9}},"32":{"start":{"line":57,"column":12},"end":{"line":59,"column":13}},"33":{"start":{"line":58,"column":16},"end":{"line":58,"column":29}},"34":{"start":{"line":61,"column":8},"end":{"line":61,"column":20}},"35":{"start":{"line":64,"column":20},"end":{"line":64,"column":34}},"36":{"start":{"line":65,"column":8},"end":{"line":67,"column":9}},"37":{"start":{"line":66,"column":12},"end":{"line":66,"column":25}},"38":{"start":{"line":68,"column":8},"end":{"line":70,"column":9}},"39":{"start":{"line":69,"column":12},"end":{"line":69,"column":25}},"40":{"start":{"line":71,"column":8},"end":{"line":77,"column":9}},"41":{"start":{"line":72,"column":12},"end":{"line":76,"column":15}},"42":{"start":{"line":73,"column":16},"end":{"line":75,"column":17}},"43":{"start":{"line":74,"column":20},"end":{"line":74,"column":33}},"44":{"start":{"line":80,"column":24},"end":{"line":80,"column":38}},"45":{"start":{"line":81,"column":8},"end":{"line":83,"column":9}},"46":{"start":{"line":82,"column":12},"end":{"line":82,"column":25}},"47":{"start":{"line":84,"column":19},"end":{"line":84,"column":44}},"48":{"start":{"line":85,"column":21},"end":{"line":85,"column":36}},"49":{"start":{"line":86,"column":8},"end":{"line":88,"column":9}},"50":{"start":{"line":87,"column":12},"end":{"line":87,"column":25}},"51":{"start":{"line":89,"column":8},"end":{"line":91,"column":9}},"52":{"start":{"line":90,"column":12},"end":{"line":90,"column":25}},"53":{"start":{"line":94,"column":8},"end":{"line":94,"column":21}},"54":{"start":{"line":97,"column":26},"end":{"line":97,"column":39}},"55":{"start":{"line":98,"column":8},"end":{"line":100,"column":9}},"56":{"start":{"line":99,"column":12},"end":{"line":99,"column":25}},"57":{"start":{"line":101,"column":8},"end":{"line":103,"column":9}},"58":{"start":{"line":102,"column":12},"end":{"line":102,"column":25}},"59":{"start":{"line":106,"column":24},"end":{"line":106,"column":42}},"60":{"start":{"line":107,"column":8},"end":{"line":109,"column":9}},"61":{"start":{"line":108,"column":12},"end":{"line":108,"column":25}},"62":{"start":{"line":110,"column":8},"end":{"line":112,"column":9}},"63":{"start":{"line":111,"column":12},"end":{"line":111,"column":25}},"64":{"start":{"line":113,"column":8},"end":{"line":118,"column":9}},"65":{"start":{"line":114,"column":12},"end":{"line":114,"column":42}},"66":{"start":{"line":115,"column":12},"end":{"line":117,"column":13}},"67":{"start":{"line":116,"column":16},"end":{"line":116,"column":29}},"68":{"start":{"line":119,"column":8},"end":{"line":119,"column":20}},"69":{"start":{"line":122,"column":23},"end":{"line":122,"column":39}},"70":{"start":{"line":123,"column":8},"end":{"line":125,"column":9}},"71":{"start":{"line":124,"column":12},"end":{"line":124,"column":25}},"72":{"start":{"line":126,"column":8},"end":{"line":128,"column":9}},"73":{"start":{"line":127,"column":12},"end":{"line":127,"column":25}},"74":{"start":{"line":129,"column":8},"end":{"line":129,"column":20}},"75":{"start":{"line":132,"column":23},"end":{"line":132,"column":45}},"76":{"start":{"line":133,"column":8},"end":{"line":135,"column":9}},"77":{"start":{"line":134,"column":12},"end":{"line":134,"column":25}},"78":{"start":{"line":136,"column":8},"end":{"line":138,"column":9}},"79":{"start":{"line":137,"column":12},"end":{"line":137,"column":25}},"80":{"start":{"line":139,"column":20},"end":{"line":139,"column":42}},"81":{"start":{"line":140,"column":8},"end":{"line":154,"column":9}},"82":{"start":{"line":141,"column":25},"end":{"line":141,"column":30}},"83":{"start":{"line":142,"column":12},"end":{"line":144,"column":13}},"84":{"start":{"line":143,"column":16},"end":{"line":143,"column":28}},"85":{"start":{"line":145,"column":12},"end":{"line":145,"column":25}},"86":{"start":{"line":148,"column":25},"end":{"line":148,"column":30}},"87":{"start":{"line":149,"column":12},"end":{"line":152,"column":13}},"88":{"start":{"line":151,"column":16},"end":{"line":151,"column":28}},"89":{"start":{"line":153,"column":12},"end":{"line":153,"column":25}},"90":{"start":{"line":157,"column":8},"end":{"line":159,"column":9}},"91":{"start":{"line":158,"column":12},"end":{"line":158,"column":25}},"92":{"start":{"line":160,"column":8},"end":{"line":164,"column":9}},"93":{"start":{"line":161,"column":12},"end":{"line":163,"column":13}},"94":{"start":{"line":162,"column":16},"end":{"line":162,"column":29}},"95":{"start":{"line":165,"column":8},"end":{"line":167,"column":9}},"96":{"start":{"line":166,"column":12},"end":{"line":166,"column":25}},"97":{"start":{"line":168,"column":8},"end":{"line":174,"column":11}},"98":{"start":{"line":169,"column":12},"end":{"line":173,"column":13}},"99":{"start":{"line":170,"column":16},"end":{"line":172,"column":17}},"100":{"start":{"line":171,"column":20},"end":{"line":171,"column":33}},"101":{"start":{"line":175,"column":8},"end":{"line":175,"column":20}},"102":{"start":{"line":178,"column":0},"end":{"line":178,"column":33}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":25},"end":{"line":35,"column":5}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":35},"end":{"line":11,"column":36}},"loc":{"start":{"line":11,"column":44},"end":{"line":18,"column":9}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":36,"column":4},"end":{"line":36,"column":5}},"loc":{"start":{"line":36,"column":34},"end":{"line":62,"column":5}},"line":36},"3":{"name":"(anonymous_3)","decl":{"start":{"line":63,"column":4},"end":{"line":63,"column":5}},"loc":{"start":{"line":63,"column":34},"end":{"line":78,"column":5}},"line":63},"4":{"name":"(anonymous_4)","decl":{"start":{"line":72,"column":46},"end":{"line":72,"column":47}},"loc":{"start":{"line":72,"column":55},"end":{"line":76,"column":13}},"line":72},"5":{"name":"(anonymous_5)","decl":{"start":{"line":79,"column":4},"end":{"line":79,"column":5}},"loc":{"start":{"line":79,"column":33},"end":{"line":92,"column":5}},"line":79},"6":{"name":"(anonymous_6)","decl":{"start":{"line":93,"column":4},"end":{"line":93,"column":5}},"loc":{"start":{"line":93,"column":35},"end":{"line":95,"column":5}},"line":93},"7":{"name":"(anonymous_7)","decl":{"start":{"line":96,"column":4},"end":{"line":96,"column":5}},"loc":{"start":{"line":96,"column":27},"end":{"line":104,"column":5}},"line":96},"8":{"name":"(anonymous_8)","decl":{"start":{"line":105,"column":4},"end":{"line":105,"column":5}},"loc":{"start":{"line":105,"column":28},"end":{"line":120,"column":5}},"line":105},"9":{"name":"(anonymous_9)","decl":{"start":{"line":121,"column":4},"end":{"line":121,"column":5}},"loc":{"start":{"line":121,"column":27},"end":{"line":130,"column":5}},"line":121},"10":{"name":"(anonymous_10)","decl":{"start":{"line":131,"column":4},"end":{"line":131,"column":5}},"loc":{"start":{"line":131,"column":38},"end":{"line":155,"column":5}},"line":131},"11":{"name":"(anonymous_11)","decl":{"start":{"line":156,"column":4},"end":{"line":156,"column":5}},"loc":{"start":{"line":156,"column":29},"end":{"line":176,"column":5}},"line":156},"12":{"name":"(anonymous_12)","decl":{"start":{"line":168,"column":37},"end":{"line":168,"column":38}},"loc":{"start":{"line":168,"column":46},"end":{"line":174,"column":9}},"line":168}},"branchMap":{"0":{"loc":{"start":{"line":6,"column":8},"end":{"line":8,"column":9}},"type":"if","locations":[{"start":{"line":6,"column":8},"end":{"line":8,"column":9}},{"start":{"line":6,"column":8},"end":{"line":8,"column":9}}],"line":6},"1":{"loc":{"start":{"line":6,"column":12},"end":{"line":6,"column":98}},"type":"binary-expr","locations":[{"start":{"line":6,"column":12},"end":{"line":6,"column":33}},{"start":{"line":6,"column":37},"end":{"line":6,"column":50}},{"start":{"line":6,"column":54},"end":{"line":6,"column":73}},{"start":{"line":6,"column":77},"end":{"line":6,"column":98}}],"line":6},"2":{"loc":{"start":{"line":12,"column":12},"end":{"line":14,"column":13}},"type":"if","locations":[{"start":{"line":12,"column":12},"end":{"line":14,"column":13}},{"start":{"line":12,"column":12},"end":{"line":14,"column":13}}],"line":12},"3":{"loc":{"start":{"line":15,"column":12},"end":{"line":17,"column":13}},"type":"if","locations":[{"start":{"line":15,"column":12},"end":{"line":17,"column":13}},{"start":{"line":15,"column":12},"end":{"line":17,"column":13}}],"line":15},"4":{"loc":{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},"type":"if","locations":[{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},{"start":{"line":20,"column":8},"end":{"line":22,"column":9}}],"line":20},"5":{"loc":{"start":{"line":20,"column":12},"end":{"line":20,"column":62}},"type":"binary-expr","locations":[{"start":{"line":20,"column":12},"end":{"line":20,"column":35}},{"start":{"line":20,"column":39},"end":{"line":20,"column":62}}],"line":20},"6":{"loc":{"start":{"line":23,"column":8},"end":{"line":25,"column":9}},"type":"if","locations":[{"start":{"line":23,"column":8},"end":{"line":25,"column":9}},{"start":{"line":23,"column":8},"end":{"line":25,"column":9}}],"line":23},"7":{"loc":{"start":{"line":27,"column":8},"end":{"line":29,"column":9}},"type":"if","locations":[{"start":{"line":27,"column":8},"end":{"line":29,"column":9}},{"start":{"line":27,"column":8},"end":{"line":29,"column":9}}],"line":27},"8":{"loc":{"start":{"line":31,"column":8},"end":{"line":33,"column":9}},"type":"if","locations":[{"start":{"line":31,"column":8},"end":{"line":33,"column":9}},{"start":{"line":31,"column":8},"end":{"line":33,"column":9}}],"line":31},"9":{"loc":{"start":{"line":37,"column":8},"end":{"line":40,"column":9}},"type":"if","locations":[{"start":{"line":37,"column":8},"end":{"line":40,"column":9}},{"start":{"line":37,"column":8},"end":{"line":40,"column":9}}],"line":37},"10":{"loc":{"start":{"line":37,"column":12},"end":{"line":38,"column":66}},"type":"binary-expr","locations":[{"start":{"line":37,"column":12},"end":{"line":37,"column":28}},{"start":{"line":37,"column":32},"end":{"line":37,"column":47}},{"start":{"line":37,"column":51},"end":{"line":37,"column":66}},{"start":{"line":37,"column":70},"end":{"line":37,"column":85}},{"start":{"line":38,"column":12},"end":{"line":38,"column":27}},{"start":{"line":38,"column":31},"end":{"line":38,"column":46}},{"start":{"line":38,"column":50},"end":{"line":38,"column":66}}],"line":37},"11":{"loc":{"start":{"line":41,"column":8},"end":{"line":45,"column":9}},"type":"if","locations":[{"start":{"line":41,"column":8},"end":{"line":45,"column":9}},{"start":{"line":41,"column":8},"end":{"line":45,"column":9}}],"line":41},"12":{"loc":{"start":{"line":41,"column":12},"end":{"line":41,"column":47}},"type":"binary-expr","locations":[{"start":{"line":41,"column":12},"end":{"line":41,"column":28}},{"start":{"line":41,"column":32},"end":{"line":41,"column":47}}],"line":41},"13":{"loc":{"start":{"line":42,"column":12},"end":{"line":44,"column":13}},"type":"if","locations":[{"start":{"line":42,"column":12},"end":{"line":44,"column":13}},{"start":{"line":42,"column":12},"end":{"line":44,"column":13}}],"line":42},"14":{"loc":{"start":{"line":46,"column":8},"end":{"line":50,"column":9}},"type":"if","locations":[{"start":{"line":46,"column":8},"end":{"line":50,"column":9}},{"start":{"line":46,"column":8},"end":{"line":50,"column":9}}],"line":46},"15":{"loc":{"start":{"line":46,"column":12},"end":{"line":46,"column":65}},"type":"binary-expr","locations":[{"start":{"line":46,"column":12},"end":{"line":46,"column":27}},{"start":{"line":46,"column":31},"end":{"line":46,"column":46}},{"start":{"line":46,"column":50},"end":{"line":46,"column":65}}],"line":46},"16":{"loc":{"start":{"line":47,"column":12},"end":{"line":49,"column":13}},"type":"if","locations":[{"start":{"line":47,"column":12},"end":{"line":49,"column":13}},{"start":{"line":47,"column":12},"end":{"line":49,"column":13}}],"line":47},"17":{"loc":{"start":{"line":51,"column":8},"end":{"line":55,"column":9}},"type":"if","locations":[{"start":{"line":51,"column":8},"end":{"line":55,"column":9}},{"start":{"line":51,"column":8},"end":{"line":55,"column":9}}],"line":51},"18":{"loc":{"start":{"line":52,"column":12},"end":{"line":54,"column":13}},"type":"if","locations":[{"start":{"line":52,"column":12},"end":{"line":54,"column":13}},{"start":{"line":52,"column":12},"end":{"line":54,"column":13}}],"line":52},"19":{"loc":{"start":{"line":56,"column":8},"end":{"line":60,"column":9}},"type":"if","locations":[{"start":{"line":56,"column":8},"end":{"line":60,"column":9}},{"start":{"line":56,"column":8},"end":{"line":60,"column":9}}],"line":56},"20":{"loc":{"start":{"line":57,"column":12},"end":{"line":59,"column":13}},"type":"if","locations":[{"start":{"line":57,"column":12},"end":{"line":59,"column":13}},{"start":{"line":57,"column":12},"end":{"line":59,"column":13}}],"line":57},"21":{"loc":{"start":{"line":65,"column":8},"end":{"line":67,"column":9}},"type":"if","locations":[{"start":{"line":65,"column":8},"end":{"line":67,"column":9}},{"start":{"line":65,"column":8},"end":{"line":67,"column":9}}],"line":65},"22":{"loc":{"start":{"line":68,"column":8},"end":{"line":70,"column":9}},"type":"if","locations":[{"start":{"line":68,"column":8},"end":{"line":70,"column":9}},{"start":{"line":68,"column":8},"end":{"line":70,"column":9}}],"line":68},"23":{"loc":{"start":{"line":73,"column":16},"end":{"line":75,"column":17}},"type":"if","locations":[{"start":{"line":73,"column":16},"end":{"line":75,"column":17}},{"start":{"line":73,"column":16},"end":{"line":75,"column":17}}],"line":73},"24":{"loc":{"start":{"line":81,"column":8},"end":{"line":83,"column":9}},"type":"if","locations":[{"start":{"line":81,"column":8},"end":{"line":83,"column":9}},{"start":{"line":81,"column":8},"end":{"line":83,"column":9}}],"line":81},"25":{"loc":{"start":{"line":86,"column":8},"end":{"line":88,"column":9}},"type":"if","locations":[{"start":{"line":86,"column":8},"end":{"line":88,"column":9}},{"start":{"line":86,"column":8},"end":{"line":88,"column":9}}],"line":86},"26":{"loc":{"start":{"line":89,"column":8},"end":{"line":91,"column":9}},"type":"if","locations":[{"start":{"line":89,"column":8},"end":{"line":91,"column":9}},{"start":{"line":89,"column":8},"end":{"line":91,"column":9}}],"line":89},"27":{"loc":{"start":{"line":98,"column":8},"end":{"line":100,"column":9}},"type":"if","locations":[{"start":{"line":98,"column":8},"end":{"line":100,"column":9}},{"start":{"line":98,"column":8},"end":{"line":100,"column":9}}],"line":98},"28":{"loc":{"start":{"line":101,"column":8},"end":{"line":103,"column":9}},"type":"if","locations":[{"start":{"line":101,"column":8},"end":{"line":103,"column":9}},{"start":{"line":101,"column":8},"end":{"line":103,"column":9}}],"line":101},"29":{"loc":{"start":{"line":107,"column":8},"end":{"line":109,"column":9}},"type":"if","locations":[{"start":{"line":107,"column":8},"end":{"line":109,"column":9}},{"start":{"line":107,"column":8},"end":{"line":109,"column":9}}],"line":107},"30":{"loc":{"start":{"line":110,"column":8},"end":{"line":112,"column":9}},"type":"if","locations":[{"start":{"line":110,"column":8},"end":{"line":112,"column":9}},{"start":{"line":110,"column":8},"end":{"line":112,"column":9}}],"line":110},"31":{"loc":{"start":{"line":115,"column":12},"end":{"line":117,"column":13}},"type":"if","locations":[{"start":{"line":115,"column":12},"end":{"line":117,"column":13}},{"start":{"line":115,"column":12},"end":{"line":117,"column":13}}],"line":115},"32":{"loc":{"start":{"line":115,"column":16},"end":{"line":115,"column":89}},"type":"binary-expr","locations":[{"start":{"line":115,"column":16},"end":{"line":115,"column":50}},{"start":{"line":115,"column":54},"end":{"line":115,"column":89}}],"line":115},"33":{"loc":{"start":{"line":123,"column":8},"end":{"line":125,"column":9}},"type":"if","locations":[{"start":{"line":123,"column":8},"end":{"line":125,"column":9}},{"start":{"line":123,"column":8},"end":{"line":125,"column":9}}],"line":123},"34":{"loc":{"start":{"line":126,"column":8},"end":{"line":128,"column":9}},"type":"if","locations":[{"start":{"line":126,"column":8},"end":{"line":128,"column":9}},{"start":{"line":126,"column":8},"end":{"line":128,"column":9}}],"line":126},"35":{"loc":{"start":{"line":126,"column":12},"end":{"line":126,"column":95}},"type":"binary-expr","locations":[{"start":{"line":126,"column":12},"end":{"line":126,"column":51}},{"start":{"line":126,"column":55},"end":{"line":126,"column":95}}],"line":126},"36":{"loc":{"start":{"line":133,"column":8},"end":{"line":135,"column":9}},"type":"if","locations":[{"start":{"line":133,"column":8},"end":{"line":135,"column":9}},{"start":{"line":133,"column":8},"end":{"line":135,"column":9}}],"line":133},"37":{"loc":{"start":{"line":136,"column":8},"end":{"line":138,"column":9}},"type":"if","locations":[{"start":{"line":136,"column":8},"end":{"line":138,"column":9}},{"start":{"line":136,"column":8},"end":{"line":138,"column":9}}],"line":136},"38":{"loc":{"start":{"line":140,"column":8},"end":{"line":154,"column":9}},"type":"if","locations":[{"start":{"line":140,"column":8},"end":{"line":154,"column":9}},{"start":{"line":140,"column":8},"end":{"line":154,"column":9}}],"line":140},"39":{"loc":{"start":{"line":142,"column":12},"end":{"line":144,"column":13}},"type":"if","locations":[{"start":{"line":142,"column":12},"end":{"line":144,"column":13}},{"start":{"line":142,"column":12},"end":{"line":144,"column":13}}],"line":142},"40":{"loc":{"start":{"line":142,"column":16},"end":{"line":142,"column":117}},"type":"binary-expr","locations":[{"start":{"line":142,"column":16},"end":{"line":142,"column":32}},{"start":{"line":142,"column":36},"end":{"line":142,"column":53}},{"start":{"line":142,"column":57},"end":{"line":142,"column":74}},{"start":{"line":142,"column":78},"end":{"line":142,"column":96}},{"start":{"line":142,"column":100},"end":{"line":142,"column":117}}],"line":142},"41":{"loc":{"start":{"line":149,"column":12},"end":{"line":152,"column":13}},"type":"if","locations":[{"start":{"line":149,"column":12},"end":{"line":152,"column":13}},{"start":{"line":149,"column":12},"end":{"line":152,"column":13}}],"line":149},"42":{"loc":{"start":{"line":149,"column":16},"end":{"line":150,"column":33}},"type":"binary-expr","locations":[{"start":{"line":149,"column":16},"end":{"line":149,"column":33}},{"start":{"line":149,"column":37},"end":{"line":149,"column":52}},{"start":{"line":149,"column":56},"end":{"line":149,"column":79}},{"start":{"line":149,"column":83},"end":{"line":149,"column":101}},{"start":{"line":150,"column":16},"end":{"line":150,"column":33}}],"line":149},"43":{"loc":{"start":{"line":157,"column":8},"end":{"line":159,"column":9}},"type":"if","locations":[{"start":{"line":157,"column":8},"end":{"line":159,"column":9}},{"start":{"line":157,"column":8},"end":{"line":159,"column":9}}],"line":157},"44":{"loc":{"start":{"line":160,"column":8},"end":{"line":164,"column":9}},"type":"if","locations":[{"start":{"line":160,"column":8},"end":{"line":164,"column":9}},{"start":{"line":160,"column":8},"end":{"line":164,"column":9}}],"line":160},"45":{"loc":{"start":{"line":161,"column":12},"end":{"line":163,"column":13}},"type":"if","locations":[{"start":{"line":161,"column":12},"end":{"line":163,"column":13}},{"start":{"line":161,"column":12},"end":{"line":163,"column":13}}],"line":161},"46":{"loc":{"start":{"line":165,"column":8},"end":{"line":167,"column":9}},"type":"if","locations":[{"start":{"line":165,"column":8},"end":{"line":167,"column":9}},{"start":{"line":165,"column":8},"end":{"line":167,"column":9}}],"line":165},"47":{"loc":{"start":{"line":169,"column":12},"end":{"line":173,"column":13}},"type":"if","locations":[{"start":{"line":169,"column":12},"end":{"line":173,"column":13}},{"start":{"line":169,"column":12},"end":{"line":173,"column":13}}],"line":169},"48":{"loc":{"start":{"line":170,"column":16},"end":{"line":172,"column":17}},"type":"if","locations":[{"start":{"line":170,"column":16},"end":{"line":172,"column":17}},{"start":{"line":170,"column":16},"end":{"line":172,"column":17}}],"line":170}},"s":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"b":{"0":[0,0],"1":[0,0,0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0,0,0,0,0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0,0,0,0],"41":[0,0],"42":[0,0,0,0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/user/project_team147/src/model/QueryValidator.ts","sources":["/Users/user/project_team147/src/model/QueryValidator.ts"],"names":[],"mappings":"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","sourcesContent":["import {QueryOBJ} from \"./Query\";\n\nlet datasetID: string;\n\nexport default class QueryValidator {\n\n\tpublic queryValidate(query: QueryOBJ) {\n\t\tif (query === \"undefined\" || query == null || !(\"WHERE\" in query) || !(\"OPTIONS\" in query)) {\n\t\t\treturn false;\n\t\t}\n\t\tlet WHERE: any;\n\t\tlet OPTIONS: any;\n\t\tObject.keys(query).forEach((key) => {\n\t\t\tif (key === \"WHERE\") {\n\t\t\t\tWHERE = query[key];\n\t\t\t}\n\t\t\tif (key === \"OPTIONS\") {\n\t\t\t\tOPTIONS = query[key];\n\t\t\t}\n\t\t});\n\n\n\t\tlet keysOPTION = Object.keys(OPTIONS);\n\t\t// must ensure OPTIONS block has at least 1 key, and max 2.\n\t\tif (keysOPTION.length !== 1 && keysOPTION.length !== 2) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!this.optionsValidate(OPTIONS)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet keysFILTER = Object.keys(WHERE);\n\t\t// invalid number of keys in where and options\n\t\tif (keysFILTER.length > 1) {\n\t\t\treturn false;\n\t\t}\n\n\n\t\tlet keyFILTER: string = Object.keys(WHERE)[0];\n\t\tif(!this.isValidFilter(WHERE, keyFILTER)) {\n\t\t\treturn false;\n\t\t}\n\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * return true if correct filter matches one of the viable options in EBNF\n\t * @param FILTER: The value of filter key (e.g for a \"GT\" filter, it would be {mKey: number}\n\t * @param filter: the filter string (AND/OR/GT/LT/EQ/IS/NOT)\n\t */\n\tpublic isValidFilter(FILTER: any, filter: string): boolean {\n\t\tif (filter !== \"AND\" && filter !== \"OR\" && filter !== \"GT\" && filter !== \"LT\" &&\n\t\t\tfilter !== \"EQ\" && filter !== \"IS\" && filter !== \"NOT\") {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (filter === \"AND\" || filter === \"OR\") {\n\t\t\tif (!this.logicValidate(FILTER, filter)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tif (filter === \"GT\" || filter === \"LT\" || filter === \"EQ\") {\n\t\t\tif (!this.mathValidate(FILTER, filter)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (filter === \"IS\") {\n\t\t\tif (!this.stringValidate(FILTER, filter)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tif (filter === \"NOT\") {\n\t\t\tif (!this.negateValidate(FILTER)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * called when the filter key is \"AND\" or \"OR\"\n\t * Must ensure that the value of the filter key is type of array and non-empty\n\t * Must ensure that the elements of the array are valid filters (recursion)\n\t * @param FILTER: the FILTER object to access key and value of\n\t * @param filter: the filter key \"AND\", or \"OR\n\t */\n\tpublic logicValidate(FILTER: any, filter: string) {\n\t\tlet value: any = FILTER[filter];\n\t\tif (!(value instanceof Array)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (value.length === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (let insideFilter of value) {\n\t\t\tObject.keys(insideFilter).forEach((key) => {\n\t\t\t\tif (!this.isValidFilter(insideFilter, key)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\n\t/**\n\t * called when filter key is \"GT\", \"EQ\", or \"LT\"\n\t * must ensure that there is ONLY 1 key:value pair within the value of the filter key\n\t * must validate that the value within the value of the filter key is a number\n\t * must validate that the key within the value of the filter key is mKEY\n\t * @param FILTER: The FILTER object to acess the key and value of\n\t * @param filter: the filter key \"GT\", \"EQ\", \"LT\"\n\t */\n\tpublic mathValidate(FILTER: any, filter: string) {\n\t\tlet valueMATH: any = FILTER[filter];\t\t\t\t\t// will give us an object {mkey: number}\n\t\tif (Object.keys(valueMATH).length !== 1) {\t\t\t\t// only one key should exist\n\t\t\treturn false;\n\t\t}\n\n\t\tlet mKey = Object.keys(valueMATH)[0];\t\t\t\t\t// mKey in { \"GT\": { mKey: number} }\n\t\tlet number = valueMATH[mKey];\n\t\tif (!(number instanceof Number)) {\t\t\t\t\t\t// must be a number\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!this.isValidQueryKey(mKey, true)) {\t\t\t// validity of mKey\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate stringValidate(FILTER: any, filter: string) {\n\t\treturn false;\n\t}\n\n\n\t/**\n\t * called when filter key is \"NOT\"\n\t * must ensure that there is only one FILTER within the filter key value\n\t * must ensure that the FILTER within the filter key value is validFilter (recursion)\n\t * @param FILTER : the FILTER object to access the key and value of\n\t * @private\n\t */\n\tprivate negateValidate(FILTER: any) {\n\t\tlet valueNEGATE: any = FILTER[\"NOT\"];\t\t\t\t\t// will give us { filter }\n\n\t\tif (Object.keys(valueNEGATE).length !== 1) {\t\t\t// must be a single filter\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!this.isValidFilter(valueNEGATE, Object.keys(valueNEGATE)[0])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * must ensure the value of the COLUMNS key is a non-empty array\n\t * must ensure key is valid (can be mkey or skey)\n\t * @param OPTIONS: The OPTIONS object where the key \"COLUMNS\" was found\n\t */\n\tpublic columnValidate(OPTIONS: any): boolean {\n\t\tlet columnVal = OPTIONS[\"COLUMNS\"];\n\n\t\tif (!(columnVal instanceof Array)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (columnVal.length === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (let key in columnVal) {\n\t\t\tdatasetID = key.split(\"_\")[0];\n\t\t\tif (!(this.isValidQueryKey(key, true)) && !(this.isValidQueryKey(key, false))) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\n\t/**\n\t * Called when the key \"ORDER\" is found within OPTIONS\n\t * must ensure the value of the \"ORDER\" key is a string\n\t * must ensure key is valid\n\t * @param OPTIONS: the OPTIONS object where the key \"ORDER\" was found\n\t * @private\n\t */\n\tprivate orderValidate(OPTIONS: any): boolean {\n\t\tlet orderVal = OPTIONS[\"ORDER\"];\n\n\t\tif (!(typeof orderVal === \"string\")) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!(this.isValidQueryKey(orderVal, true)) && !(this.isValidQueryKey(orderVal, false))) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\t/**\n\t * Check if a query key is valid\n\t * <id>_<key> is correct format, where id is the id of the dataset\n\t * an id_string can contain any character except for underscore\n\t * @param queryKey: consists of idString and mField/sField in the form <idString>_<m/sField>\n\t * @param isMKey: true means MKey, false means SKey\n\t */\n\tpublic isValidQueryKey(queryKey: string, isMKey: boolean): boolean {\n\t\tlet idString = queryKey.split(\"_\")[0];\n\n\t\tif (idString !== datasetID) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (idString.includes(\"_\")){\n\t\t\treturn false;\n\t\t}\n\n\t\tlet field = queryKey.split(\"_\")[1];\n\t\tif (isMKey) {\n\t\t\tlet mField = field;\n\t\t\tif (mField === \"avg\" || mField === \"pass\" || mField === \"fail\" || mField === \"audit\" || mField === \"year\") {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t} else {\n\t\t\tlet sField = field;\n\t\t\tif (sField === \"dept\" || sField === \"id\" || sField === \"instructor\" || sField === \"title\" ||\n\t\t\t\tsField === \"uuid\") {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Validate the OPTIONS requirements from the EBNF\n\t * first key in OPTIONS MUST be COLUMNS\n\t * if second key exists, it MUST be ORDER\n\t * validate the COLUMNS block using the columnValidate method\n\t * if ORDER exists, validate it using the orderValidate method\n\t * @param OPTIONS: the OPTIONS value object =======> {' COLUMNS (', ORDER:' key)?'}'\n\t * @private\n\t */\n\tprivate optionsValidate(OPTIONS: any): boolean {\n\t\tif (Object.keys(OPTIONS)[0] !== \"COLUMNS\") {\n\t\t\treturn false;\n\t\t}\n\t\tif (Object.keys(OPTIONS).length === 2) {\n\t\t\tif (Object.keys(OPTIONS)[1] !== \"ORDER\") {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (!this.columnValidate(OPTIONS)) {\n\t\t\treturn false;\n\t\t}\n\t\tObject.keys(OPTIONS).forEach((key) => {\n\t\t\tif (key === \"ORDER\") {\n\t\t\t\tif (!this.orderValidate(OPTIONS)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn true;\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"426ca89798f8ff210061d344301b8aaf1df107d7","contentHash":"dddc3c90e14794f9acc6184644601f74fe64985afcdb0b988baedcc6726014fa"}}